;
; +-------------------------------------------------------------------------+
; |   This file has been generated by The Interactive Disassembler (IDA)    |
; |           Copyright (c) 2018 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 32731CF74380A458CF322809D26A04D5DEE6074884CD707B7804E37A21F50257
; Input MD5    : 4A20843E9F29E390898A4C079E836256
; Input CRC32  : B4DDB4F5

; File Name   : D:\Documents\Virtual Machines\sharevm\Abduction_Keygenme\Abduction Crackme_patched.exe
; Format      : Portable executable for 80386 (PE)
; Imagebase   : 400000
; Timestamp   : 471ED1C0 (Wed Oct 24 05:01:52 2007)
; Section 1. (virtual address 00001000)
; Virtual size                  : 0000C219 (  49689.)
; Section size in file          : 0000C400 (  50176.)
; Offset to raw data for section: 00000400
; Flags 60000020: Text Executable Readable
; Alignment     : default

include uni.inc ; see unicode subdir of ida for info on unicode

.686p
.mmx
.model flat

include Abduction Crackme_patched.inc


; Segment type: Pure code
; Segment permissions: Read/Execute
_text segment para public 'CODE' use32
assume cs:_text
;org 401000h
assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing


; Attributes: bp-based frame

sub_401000 proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h
arg_10= dword ptr  18h
arg_14= dword ptr  1Ch
arg_18= dword ptr  20h

push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_8], ecx
mov     eax, [ebp+arg_C]
not     eax
or      eax, [ebp+arg_4]
xor     eax, [ebp+arg_8]
add     eax, [ebp+arg_10]
add     eax, [ebp+arg_18]
mov     ecx, [ebp+arg_0]
add     eax, [ecx]
mov     edx, [ebp+arg_0]
mov     [edx], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     [ebp+var_4], ecx
mov     ecx, 20h
sub     ecx, [ebp+arg_14]
mov     edx, [ebp+var_4]
shr     edx, cl
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_14]
shl     eax, cl
or      eax, edx
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     edx, [ebp+arg_0]
mov     eax, [edx]
add     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     esp, ebp
pop     ebp
retn    1Ch
sub_401000 endp

align 10h


; Attributes: bp-based frame

sub_401060 proc near

lpflOldProtect= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    ebp
mov     ebp, esp
push    0FFFFFFFEh
push    offset stru_40F940
push    offset SEH_401060
mov     eax, large fs:0
push    eax
add     esp, 0FFFFFFECh
push    ebx
push    esi
push    edi
mov     eax, dword_411004
xor     [ebp+ms_exc.registration.ScopeTable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+var_20], 0
mov     [ebp+var_1C], 0
lea     eax, [ebp+var_1C]
mov     [ebp+lpflOldProtect], eax
mov     [ebp+ms_exc.registration.TryLevel], 0
push    4               ; flProtect
nop
push    1000h           ; flAllocationType
push    10000h          ; dwSize
push    0               ; lpAddress
mov     esi, ds:VirtualAlloc
call    esi ; VirtualAlloc
mov     [ebp+var_20], eax
mov     byte ptr [eax], 0C3h
mov     [ebp+var_20], eax
push    [ebp+lpflOldProtect] ; lpflOldProtect
push    120h            ; flNewProtect
push    10h             ; dwSize
push    eax             ; lpAddress
mov     esi, ds:VirtualProtect
call    esi ; VirtualProtect
call    [ebp+var_20]
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
jmp     short loc_401107

loc_4010ED:
mov     eax, 1
retn

loc_4010F3:
mov     esp, [ebp+ms_exc.old_esp]
pop     large dword ptr fs:0
add     esp, 4
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_401107:
mov     ecx, [ebp+ms_exc.registration.Next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub_401060 endp

align 4
dword_40111C dd 20001h, 0BB80h, 2EE00h, 100004h, 40122Eh
dd 4011FFh, 4012A1h, 40122Dh, 4011FFh, 4012A1h
dd 40122Dh, 401258h, 401275h, 401287h, 401298h
dd 424448Bh, 412104B9h, 0C0B70F00h, 46183h
dd 1C413B66h, 0D021D219h, 4C20189h, 82000100h
dd 0CF00A400h, 48010400h, 7019D01h, 37028E02h
dd 19040C03h, 14066A05h, 0CD0A2B08h, 49101D0Ch
dd 27198A14h, 0F5287A20h, 0C3402732h, 65AD50h
dd 83585A80h, 37619F8h, 6658196Ah, 7500848Bh
dd 0A3004011h, 414264h, 1B0E2FFh, 0C03102EBh
dd 414251A2h, 86AC300h, 0C6A02EBh, 4298BA59h
dd 28B0042h, 48BCA01h, 9CA1C3C2h, 0C3004242h



sub_4011E8 proc near
push    eax             ; dwBytes
push    9               ; dwFlags
push    dword_41223C    ; hHeap
call    ds:HeapAlloc
test    eax, eax
jnz     short locret_4011FE
pop     edx
pop     ebx
leave

locret_4011FE:
retn
sub_4011E8 endp ; sp-analysis failed

push    edi
push    esi
xchg    eax, edi
mov     esi, offset dword_414254
lodsd
mov     ecx, edx
add     edx, [esi]
cmp     edx, eax
jl      short loc_401213
sub     eax, [esi]
xchg    eax, ecx

loc_401213:
test    ecx, ecx
jle     short loc_401226
lodsd
add     eax, [esi]
mov     [esi-4], edx

loc_40121D:
mov     dl, [eax]
mov     [edi], dl
inc     eax
inc     edi
dec     ecx
jnz     short loc_40121D

loc_401226:
pop     esi
pop     edi
mov     eax, offset unk_424320
retn
push    0Ah
push    esi
lea     esi, [ebp-14h]
and     dword ptr [esi+4], 0
push    dword ptr [esi]
call    ds:FindResourceA
push    eax
push    dword ptr [esi]
push    eax
push    dword ptr [esi]
call    ds:SizeofResource
mov     [esi], eax
call    ds:LoadResource
mov     [esi+8], eax
retn
push    0
push    8000080h
push    3
push    0
push    1
push    80000000h
push    esi
call    ds:CreateFileA
mov     [ebx+8], eax
retn
push    0
push    esp
push    edx
push    eax
push    dword_41224C
call    ds:ReadFile
retn
push    ecx
push    0
push    eax
push    dword_41224C
call    ds:SetFilePointer
retn
push    dword ptr [ebx+8]
call    ds:CloseHandle
mov     edx, offset dword_414258
jz      short loc_4012AA
add     eax, [edx]

loc_4012AA:
cmp     eax, [edx-4]
jg      short locret_4012B1
mov     [edx], eax

locret_4012B1:
retn
call    sub_4013AB
pop     eax
pop     edx
pop     dword_414254
pop     ecx
test    edx, edx
push    eax
jz      short locret_4012B1
push    ebx
push    esi
push    edi
push    ebp
mov     ebx, offset unk_412244
mov     ebp, offset dword_414268
xor     eax, eax
mov     [ebp-10h], eax
test    cl, 1
mov     esi, 401138h
jnz     short loc_4012ED
test    cl, 2
lea     esi, [esi+10h]
jnz     short loc_4012ED
lea     esi, [esi-1Ch]

loc_4012ED:
test    cl, 8
setnz   byte ptr [ebp-18h]
and     cl, 10h
mov     [ebp-17h], cl
mov     edi, ebp
movsd
movsd
movsd
movsd
mov     esi, edx
cmp     [ebp-4], eax
jnz     short loc_40130D
mov     word ptr [ebp-4], 8000h

loc_40130D:
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    offset dword_40111C
push    0FFFFFFFFh
push    ebx
call    ds:waveOutOpen
call    ds:HeapCreate
test    eax, eax
mov     [ebx-8], eax
jz      short loc_40133F
mov     [ebp-0Ch], esi
call    dword ptr [ebp+0]
call    sub_401B6C
xchg    eax, edi
call    dword ptr [ebp+0Ch]
test    edi, edi

loc_40133F:
jz      short loc_4013AF
mov     esi, offset pwh
mov     dword ptr [esi+4], 10000h
or      dword ptr [esi+14h], 0FFFFFFFFh
push    0Ch
mov     dword ptr [esi], offset unk_414278
pop     dword ptr [esi+10h]
push    20h
push    esi
push    dword ptr [ebx]
call    ds:waveOutPrepareHeader
xor     edi, edi

loc_401369:
call    sub_401474
cmp     [ebx+4], edi
jnz     short loc_401369
mov     [ebx+8], edi
push    20h
push    esi
push    dword ptr [ebx]
call    ds:waveOutWrite
test    eax, eax
jnz     short loc_4013AF
push    ebp
push    edi
push    edi
push    offset sub_40141E
push    edi
push    edi
call    ds:CreateThread
test    eax, eax
mov     [ebx-4], eax
jz      short loc_4013AF
push    0Fh
push    eax
call    ds:SetThreadPriority
xchg    eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn



sub_4013AB proc near
push    ebx
push    esi
push    edi
push    ebp

loc_4013AF:
mov     ebp, offset unk_412240
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_4013CD
mov     [ebp+0Ch], eax
push    eax             ; hObject
push    ebp             ; dwMilliseconds
push    eax             ; hHandle
call    ds:WaitForSingleObject
call    ds:CloseHandle

loc_4013CD:
xor     ebx, ebx
mov     [ebp+0], ebx
mov     edi, [ebp+4]
mov     [ebp+8], ebx
test    edi, edi
jz      short loc_4013FB
mov     [ebp+4], ebx
push    edi             ; hwo
push    20h             ; cbwh
push    offset pwh      ; pwh
push    edi             ; hwo
push    edi             ; hwo
call    ds:waveOutReset
call    ds:waveOutUnprepareHeader
call    ds:waveOutClose

loc_4013FB:
mov     eax, [ebp-4]
test    eax, eax
jz      short loc_401419
mov     [ebp-4], ebx
push    eax             ; hHeap
call    ds:HeapDestroy
xchg    eax, ebx
mov     ecx, 23h
mov     edi, offset unk_424298
rep stosd

loc_401419:
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub_4013AB endp




sub_40141E proc near
push    ebp
push    esi
mov     ebp, offset pmmt

loc_401425:
push    4
pop     dword ptr [ebp+0]
push    0Ch             ; cbmmt
push    ebp             ; pmmt
push    dword ptr [ebp+14h] ; hwo
call    ds:waveOutGetPosition
mov     esi, [ebp+4]
shr     esi, 0Ch
and     esi, 0Fh

loc_40143F:             ; dwMilliseconds
push    5
call    ds:Sleep
cmp     dword ptr [ebp+1Ch], 0
jz      short loc_401452
pop     esi
pop     ebp
retn    4

loc_401452:
cmp     [ebp+18h], esi
jz      short loc_401425
cmp     byte_414251, 0
jnz     short loc_40146F
mov     eax, offset unk_424298
inc     byte ptr [eax]
cmp     byte ptr [eax], 10h
jl      short loc_40146F
mov     byte ptr [eax], 0

loc_40146F:
push    offset loc_40143F
sub_40141E endp ; sp-analysis failed




sub_401474 proc near
mov     ecx, 800h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, offset unk_412250
xor     eax, eax
push    edi
push    edi
mov     esi, offset unk_412104
rep stosd
cmp     byte_414251, al
xchg    eax, ebp
jnz     loc_40157D
mov     ebp, 400h
mov     ebx, [esi-1Ch]

loc_4014A2:
test    ebx, ebx
jnz     loc_401531
cmp     [esi-14h], ebx
mov     ecx, [esi-24h]
jnz     short loc_401513
dec     ebx
mov     edx, [esi]
mov     eax, [esi+4]
mov     [esi], ebx
test    edx, edx
mov     [esi+4], ebx
jl      short loc_4014C4
mov     [esi-0Ch], edx

loc_4014C4:
test    eax, eax
jl      short loc_4014CB
mov     [esi-8], eax

loc_4014CB:
call    sub_401F5D
cmp     dword ptr [esi+4], 0FFFFFFFFh
jnz     short loc_401518
mov     eax, [esi-8]
inc     eax
cmp     ax, [ebx]
jl      short loc_40150E
mov     edx, [esi-0Ch]
movzx   ecx, word ptr [esi+1Ch]
inc     edx
xor     eax, eax
cmp     edx, ecx
jl      short loc_40150C
cmp     byte_414250, al
jz      short loc_401502
mov     ebp, offset unk_412240
pop     dword ptr [ebp+0Ch]
jmp     loc_4013CD

loc_401502:
movzx   edx, word ptr [esi+1Eh]
cmp     edx, ecx
sbb     ecx, ecx
and     edx, ecx

loc_40150C:
mov     [esi], edx

loc_40150E:
mov     [esi+4], eax
jmp     short loc_401518

loc_401513:
call    sub_402444

loc_401518:
mov     eax, [esi-10h]
mov     ebx, [esi+18h]
inc     dword ptr [esi-14h]
add     eax, [esi-4]
cmp     [esi-14h], eax
jl      short loc_401531
and     dword ptr [esi-4], 0
and     dword ptr [esi-14h], 0

loc_401531:
mov     edi, ebp
cmp     ebx, edi
jnb     short loc_401539
mov     edi, ebx

loc_401539:
pop     edx
sub     ebp, edi
lea     eax, [edx+edi*8]
push    eax
call    sub_401628
lea     eax, [edi+edi*4]
cdq
shl     eax, 2
mov     ecx, 3C0h
div     ecx
add     dword_42429C, eax
sub     ebx, edi
test    ebp, ebp
jnz     loc_4014A2
mov     [esi-1Ch], ebx
mov     edx, dword_412248
shl     edx, 3
add     edx, offset unk_4242A4
mov     ecx, [esi-8]
or      ecx, [esi-0Eh]
mov     [edx], ecx

loc_40157D:
pop     eax
pop     esi
xor     ebx, ebx
mov     eax, [esi-8]
shl     eax, 0Ch
lea     edi, unk_414278[eax]
mov     ecx, 800h
nop
nop

loc_401594:
lodsd
push    edi
cdq
mov     edi, eax
push    esi
xor     eax, edx
mov     esi, 3FC0h
sub     eax, edx
xor     edx, edx
div     esi
cmp     edx, 1FE0h
pop     esi
sbb     eax, 0FFFFFFFFh
cmp     eax, 8000h
sbb     edx, edx
not     edx
or      eax, edx
sar     edi, 1Fh
and     eax, 7FFFh
mul     dword_414264
shr     eax, 0Fh
ror     ecx, 1
sbb     edx, edx
and     edx, eax
add     ebp, edx
rol     ecx, 1
sbb     edx, edx
not     edx
and     edx, eax
add     ebx, edx
xor     eax, edi
sub     eax, edi
pop     edi
dec     ecx
stosw
jnz     short loc_401594
mov     eax, dword_412248
inc     eax
cmp     eax, 10h
jl      short loc_4015F6
xor     eax, eax

loc_4015F6:
mov     dword_412248, eax
shr     ebp, 0Ah
shl     ebx, 6
mov     bx, bp
mov     dword_4242A0[eax*8], ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub_401474 endp

flt_401610 dd 0.0013020834
flt_401614 dd 8363.0
flt_401618 dd 0.098174751
flt_40161C dd 127.0
flt_401620 dd 0.024543688
flt_401624 dd 64.0



sub_401628 proc near

var_14= dword ptr -14h
arg_0= dword ptr  4

mov     ecx, [esi+10h]
push    ebx
push    ebp

loc_40162D:
push    esi
mov     esi, [ecx+2Ch]
test    esi, esi
jz      loc_4018C8
push    edx
push    edx
mov     ebx, [ecx+14h]
push    edi

loc_40163F:
cmp     byte ptr [ecx+3Eh], 0
mov     edx, [esi+4]
mov     eax, [ecx+30h]
jnz     short loc_40165C
add     edx, [esi+8]
sub     edx, ebx
ja      short loc_401656
mov     edx, [esi]
sub     edx, ebx

loc_401656:
neg     edx
neg     eax
adc     edx, ebx

loc_40165C:
neg     edx
add     edx, ebx
js      loc_4018C5
shrd    eax, edx, 8
mov     ebp, [ecx+18h]
mov     ebx, [ecx+1Ch]
shr     edx, 8
shrd    ebp, ebx, 8
jnz     short loc_40167E
mov     ebp, 17C6Fh

loc_40167E:
div     ebp
xor     ebp, ebp
neg     edx
adc     eax, ebp
jz      loc_401847
cmp     eax, edi
ja      short loc_401692
stc
xchg    eax, edi

loc_401692:
mov     ebx, offset dword_414268
setb    byte ptr [ebx-16h]
mov     [ebx], ebp
mov     [ebx+4], ebp
movzx   eax, word ptr [ecx+3Ch]
test    eax, eax
mov     edx, [ecx+0Ch]
mov     ebp, [ecx+10h]
mov     [ebx-10h], edi
jz      short loc_4016CA
cmp     dx, [ecx+20h]
jnz     short loc_4016CA
cmp     bp, [ecx+22h]
jnz     short loc_4016CA
mov     edx, [ecx+24h]
mov     [ebx], edx
mov     edx, [ecx+28h]
mov     [ebx+4], edx
jmp     short loc_4016ED

loc_4016CA:
mov     [ecx+20h], dx
xor     eax, eax
sub     edx, [ecx+34h]
jz      short loc_4016DC
mov     [ecx+24h], edx
mov     [ebx], edx
mov     al, 10h

loc_4016DC:
mov     [ecx+22h], bp
sub     ebp, [ecx+38h]
jz      short loc_4016ED
mov     [ecx+28h], ebp
mov     [ebx+4], ebp
mov     al, 10h

loc_4016ED:
test    eax, eax
mov     [ecx+3Ch], ax
jz      short loc_4016FB
cmp     edi, eax
jbe     short loc_4016FB
mov     edi, eax

loc_4016FB:
mov     [ebx-14h], edi
mov     edx, [ecx+10h]
mov     [ebx-8], edx
mov     edx, [ecx+0Ch]
mov     [ebx-0Ch], edx
mov     edx, [ecx+38h]
shl     edx, 4
mov     [ebx+8], edx
mov     edx, [ecx+34h]
shl     edx, 4
mov     [ebx+0Ch], edx
mov     ebx, [ecx+14h]
mov     ebp, [ecx+30h]
lea     ebx, [esi+ebx*2+14h]
push    esi
cmp     byte ptr [ecx+3Eh], 0
mov     esi, [esp+1Ch+var_14]
push    ecx
mov     edx, [ecx+1Ch]
mov     ecx, [ecx+18h]
jz      short loc_40173F
neg     ecx
not     edx
sbb     edx, 0FFFFFFFFh

loc_40173F:
test    eax, eax
jnz     short loc_401785
nop

loc_401744:
push    edi
push    edx
movsx   edi, word ptr [ebx]
movsx   eax, word ptr [ebx+2]
shr     ebp, 1
sub     eax, edi
imul    ebp
shl     edi, 6
shl     ebp, 1
shld    edx, eax, 7
add     edx, edi
mov     eax, edx
imul    edx, dword_414260
add     [esi], edx
imul    dword_41425C
add     [esi+4], eax
pop     edx
xor     eax, eax
add     ebp, ecx
pop     edi
adc     eax, edx
add     esi, 8
dec     edi
lea     ebx, [ebx+eax*2]
jnz     short loc_401744
jmp     short loc_4017DB

loc_401785:
push    edi
push    edx
movsx   edi, word ptr [ebx]
movsx   eax, word ptr [ebx+2]
shr     ebp, 1
sub     eax, edi
imul    ebp
shl     edi, 2
shl     ebp, 1
shld    edx, eax, 3
add     edx, edi
mov     eax, edx
imul    edx, dword_414270
add     [esi], edx
imul    dword_414274
add     [esi+4], eax
mov     eax, dword_41426C
mov     edx, dword_414268
add     dword_414270, eax
add     dword_414274, edx
pop     edx
xor     eax, eax
add     ebp, ecx
pop     edi
adc     eax, edx
add     esi, 8
dec     edi
lea     ebx, [ebx+eax*2]
jnz     short loc_401785

loc_4017DB:
mov     eax, [esp+20h+arg_0]
mov     [esp+20h+var_14], esi
sub     eax, esi
pop     ecx
shr     eax, 3
pop     esi
xchg    eax, edi
lea     eax, [esi+14h]
sub     ebx, eax
shr     ebx, 1
mov     [ecx+14h], ebx
mov     [ecx+30h], ebp
movzx   edx, word ptr [ecx+3Ch]
test    edx, edx
jz      short loc_401847
mov     eax, dword_414270
mov     edx, dword_414274
sar     eax, 4
sar     edx, 4
mov     [ecx+38h], eax
mov     [ecx+34h], edx
mov     eax, dword_414254
cdq
sub     [ecx+3Ch], ax
jnz     short loc_401847
sub     eax, dword_414258
mov     [ecx+24h], edx
neg     eax
mov     [ecx+28h], edx
mov     eax, [ecx+0Ch]
sbb     edx, edx
mov     [ecx+34h], eax
mov     eax, [ecx+10h]
mov     [ecx+38h], eax
test    edi, edx
jnz     loc_40163F

loc_401847:
cmp     byte_414252, dl
jz      short loc_4018C5
movzx   eax, byte ptr [esi+12h]
dec     eax
jnz     short loc_40186E
mov     eax, [esi+4]
add     eax, [esi+8]
cmp     ebx, eax
mov     ebp, [esi+8]
jbe     short loc_401868
sub     ebx, eax
xchg    eax, ebx
div     ebp

loc_401868:
sub     ebp, edx
sub     ebx, ebp
jmp     short loc_4018BA

loc_40186E:
dec     eax
neg     eax
adc     edx, 0FFFFFFFFh
and     [ecx+30h], edx
and     [ecx+14h], edx
and     [ecx+2Ch], edx
jz      short loc_4018C5
cmp     [ecx+3Eh], al
jz      short loc_40189C

loc_401884:
mov     eax, [esi+4]
neg     ebp
dec     eax
sub     ebp, 1
dec     byte ptr [ecx+3Eh]
sbb     eax, ebx
mov     ebx, [esi+4]
add     ebx, eax
cmp     eax, [esi+8]
jl      short loc_4018B7

loc_40189C:
mov     eax, [esi+4]
add     eax, [esi+8]
lea     edx, [eax-1]
sbb     eax, ebx
neg     ebp
xchg    eax, ebx
sub     ebp, 1
adc     ebx, edx
inc     byte ptr [ecx+3Eh]
cmp     ebx, [esi+4]
jl      short loc_401884

loc_4018B7:
mov     [ecx+30h], ebp

loc_4018BA:
test    edi, edi
mov     [ecx+14h], ebx
jnz     loc_40163F

loc_4018C5:
pop     edi
pop     eax
pop     edx

loc_4018C8:
add     ecx, 40h
pop     esi
cmp     ecx, [esi+14h]
jl      loc_40162D
pop     ebp
pop     ebx
retn
sub_401628 endp

flt_4018D8 dd 0.083333336
flt_4018DC dd 13.375



sub_4018E0 proc near

arg_0= dword ptr  4

fild    [esp+arg_0]
fmul    ds:flt_4018D8
fld     st
frndint
fsub    st(1), st
fxch    st(1)
f2xm1
fld1
faddp   st(1), st
fscale
fstp    st(1)
fmul    ds:flt_4018DC
fistp   [esp+arg_0]
retn
sub_4018E0 endp




sub_401907 proc near
cdq
mov     dl, 84h
push    edi
sub     edx, eax
test    eax, eax
push    edx
movsx   eax, byte ptr [ecx+0Dh]
call    sub_4018E0
mov     edi, edx
jz      short loc_401920
cdq
shl     edx, 1

loc_401920:
inc     edx
pop     ecx
sub     edi, edx
push    edi
call    sub_4018E0
mov     edi, ecx
pop     ecx
sub     ecx, edi
test    edx, edx
jns     short loc_401935
neg     ecx

loc_401935:
imul    ecx
and     edx, 7Fh
add     eax, edx
sar     eax, 7
add     eax, edi
pop     edi
retn
sub_401907 endp




sub_401943 proc near

var_4= dword ptr -4

movzx   ecx, byte ptr [esi+71h]
mov     al, [esi+7Ah]
mov     edx, ecx
add     dl, [esi+72h]
and     edx, 3Fh
and     eax, 3
mov     [esi+71h], dl
jz      short loc_401974
rol     ecx, 1Bh
sbb     edx, edx
xor     edx, 7Fh
or      edx, 1
dec     eax
jnz     short loc_40198A
shr     edx, 18h
ror     ecx, 17h
add     edx, ecx
neg     edx
jmp     short loc_40198A

loc_401974:
push    ecx
fild    [esp+4+var_4]
fmul    ds:flt_401618
fsin
fmul    ds:flt_40161C
fistp   [esp+4+var_4]
pop     edx

loc_40198A:
movsx   eax, byte ptr [esi+73h]
imul    edx
sar     eax, 5
retn
sub_401943 endp




sub_401994 proc near
call    sub_401943
sar     eax, 1
mov     [esi+12h], eax
or      byte ptr [esi], 1
retn
sub_401994 endp




sub_4019A2 proc near
push    esi
add     esi, 3
call    sub_401943
pop     esi
mov     [esi+0Eh], eax
or      byte ptr [esi], 2
retn
sub_4019A2 endp




sub_4019B3 proc near
or      byte ptr [esi], 1
mov     eax, [esi+6]
mov     ecx, [esi+5Ah]
movzx   edx, byte ptr [esi+70h]
shl     edx, 2
sub     eax, ecx
jg      short loc_4019CD
add     eax, edx
jg      short loc_4019D3
jmp     short loc_4019D1

loc_4019CD:
sub     eax, edx
jl      short loc_4019D3

loc_4019D1:
add     ecx, eax

loc_4019D3:
mov     [esi+6], ecx
retn
sub_4019B3 endp



; Attributes: bp-based frame

sub_4019D7 proc near

var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= byte ptr -4

push    edi
push    ebx
push    ebp
mov     ebp, esp
lea     edi, [ecx+0D0h]
xor     ebx, ebx
mov     edx, [edi+35h]
mov     [ebp+var_1C], edx
mov     cl, [edi+39h]
movzx   edx, byte ptr [edi+31h]
or      [esi], al
cmp     al, 2
lea     eax, [esi+3Dh]
jnz     short loc_401A10
add     ebx, 0FFFFFFF4h
mov     eax, [edi+32h]
mov     [ebp+var_1C], eax
mov     cl, [edi+38h]
movzx   edx, byte ptr [edi+30h]
lea     eax, [esi+3Ch]
add     edi, 0FFFFFFD0h

loc_401A10:
cmp     [eax], dh
jnz     short loc_401A80
push    ecx
push    eax
lea     ecx, [esi+ebx+2Ah]
lea     eax, [esi+ebx+2Eh]
push    eax
lea     eax, [esi+ebx+4Eh]
push    eax
lea     eax, [esi+ebx+4Ah]
lea     ebx, [esi+ebx+26h]
push    eax
mov     eax, [ecx]
cmp     eax, edx
push    ebx
jge     loc_401AC5
movzx   eax, word ptr [edi+eax*4]
cmp     [ebx], eax
jnz     short loc_401ABB
test    [ebp+var_4], 4
jz      short loc_401A5A
movzx   eax, byte ptr [ebp+var_1C+2]
cmp     [ecx], eax
jnz     short loc_401A5A
movzx   eax, byte ptr [ebp+var_1C+1]
mov     [ecx], eax
movzx   eax, word ptr [edi+eax*4]
mov     [ebx], eax

loc_401A5A:
mov     eax, [ecx]
mov     [ebp+var_24], eax
lea     eax, [edi+eax*4]
dec     edx
movzx   ebx, word ptr [eax]
cmp     [ecx], edx
mov     edx, [eax+4]
mov     edi, edx
movzx   eax, word ptr [eax+2]
mov     [ebp+var_20], edx
mov     edx, [ebp+var_10]
mov     [edx], eax
jnz     short loc_401A82
mov     eax, [ebp+var_8]
inc     byte ptr [eax]

loc_401A80:
jmp     short locret_401AD1

loc_401A82:
shl     eax, 10h
sub     edi, eax
xchg    eax, edi
xor     ax, ax
test    [ebp+var_4], 2
jz      short loc_401A9F
movzx   edx, byte ptr [ebp+var_1C]
cmp     [ebp+var_24], edx
jnz     short loc_401A9F
cmp     [esi+3Ah], al
jz      short locret_401AD1

loc_401A9F:
inc     dword ptr [ecx]
mov     ecx, [ebp+var_14]
mov     [ecx], edi
mov     edi, [ebp+var_C]
movzx   ecx, word ptr [ebp+var_20]
and     dword ptr [edi], 0
sub     ecx, ebx
jz      short loc_401AC5
cdq
idiv    ecx
mov     [edi], eax
jmp     short loc_401AC5

loc_401ABB:
mov     eax, [ebp+var_C]
mov     ecx, [eax]
mov     eax, [ebp+var_14]
add     [eax], ecx

loc_401AC5:
pop     edx
pop     eax
pop     ecx
mov     eax, [eax]
inc     dword ptr [edx]
sar     eax, 10h
mov     [ecx], eax

locret_401AD1:
leave
pop     ebx
pop     edi
retn
sub_4019D7 endp ; sp-analysis failed




sub_401AD5 proc near
sub     edx, 10h
jb      short loc_401AE2
cmp     edx, 40h
ja      short loc_401AE2
mov     [esi+0Ah], edx

loc_401AE2:
mov     eax, edx
and     edx, 0Fh
shr     eax, 4
sub     eax, 5
jz      short loc_401B1D
dec     eax
jz      short loc_401B1F
dec     eax
jz      short loc_401B1D
dec     eax
jz      short loc_401B1F
sub     eax, 2
jbe     short loc_401B23
dec     eax
jz      short loc_401B28
dec     eax
jz      short loc_401B2F
dec     eax
jz      short loc_401B31
dec     eax
jnz     short locret_401B1C
test    edx, edx
jz      short loc_401B13
shl     dl, 4
mov     [esi+70h], dl

loc_401B13:
and     byte ptr [esi], 0F7h
mov     eax, [esi+52h]
mov     [esi+5Ah], eax

locret_401B1C:
retn

loc_401B1D:
neg     edx

loc_401B1F:
add     [esi+0Ah], edx
retn

loc_401B23:
mov     [esi+eax+73h], dl
retn

loc_401B28:
shl     edx, 4
mov     [esi+16h], edx
xchg    eax, edx

loc_401B2F:
neg     edx

loc_401B31:
add     [esi+16h], edx
or      byte ptr [esi], 4
retn
sub_401AD5 endp




sub_401B38 proc near
or      byte ptr [esi], 2
mov     dx, [esi+77h]
cmp     dl, dh
jbe     short loc_401B4B
mov     ecx, [esi+0Ah]
neg     ecx
mov     [esi+0Eh], ecx

loc_401B4B:
add     dh, [esi+79h]
cmp     dl, dh
jbe     short loc_401B54
mov     dl, 0FFh

loc_401B54:
inc     dl
mov     [esi+77h], dl
retn
sub_401B38 endp




sub_401B5A proc near
test    ecx, ecx
mov     eax, 1D4C0h
jz      short loc_401B66
cdq
div     ecx

loc_401B66:
mov     dword_41211C, eax
retn
sub_401B5A endp



; Attributes: bp-based frame

sub_401B6C proc near

var_78= dword ptr -78h
var_5D= byte ptr -5Dh
var_5B= dword ptr -5Bh
var_44= byte ptr -44h
var_3F= dword ptr -3Fh
var_38= dword ptr -38h
var_34= dword ptr -34h
var_30= dword ptr -30h
var_2A= byte ptr -2Ah
var_26= byte ptr -26h
var_14= byte ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4

mov     eax, offset unk_4120E0
push    ebp
mov     esi, eax
mov     ebp, esp
mov     edx, 150h
call    dword_41426C
xor     ecx, ecx
mov     eax, [esi+3Ch]
push    ecx
lea     eax, [eax+3Ch]
call    dword_414270
add     esp, 0FFFFFF8Ch
push    ebx
push    14h
lea     edx, [esi+11h]
mov     edi, offset unk_424320
pop     ecx

loc_401B9F:
mov     al, [edx]
inc     edx
cmp     al, 20h
jl      short loc_401BA7
stosb

loc_401BA7:
dec     ecx
jnz     short loc_401B9F
xchg    eax, ecx
stosd
movzx   ecx, word ptr [esi+40h]
movzx   ebx, word ptr [esi+46h]
neg     ebx
mov     edi, esi
sbb     edx, edx
and     ecx, edx
neg     ebx
dec     ecx
movzx   edx, dl
mov     [ebp+var_C], ebx
cmp     ecx, edx
ja      loc_401F5A

loc_401BCD:
mov     dl, [esi+50h]
cmp     edx, eax
jbe     short loc_401BD5
xchg    eax, edx

loc_401BD5:
inc     esi
dec     ecx
jns     short loc_401BCD
mov     [ebp+var_8], eax
inc     eax
mov     esi, edi
cmp     eax, ebx
jnb     short loc_401BE4
xchg    eax, ebx

loc_401BE4:
movzx   ecx, byte ptr [esi+48h]
imul    ecx, 110h
mov     [esi+46h], ax
lea     edi, [ecx+eax*8]
mov     eax, edi
sub     edi, ecx
movzx   ecx, byte ptr [esi+44h]
cmp     ecx, 40h
jle     short loc_401C04
xor     ecx, ecx

loc_401C04:
mov     [esi+30h], ecx
mov     ebx, ecx
shl     ebx, 7
jz      loc_401F5A
mov     [ebp+var_10], ecx
lea     eax, [eax+ebx*2]
call    sub_4011E8
lea     edx, [eax+ebx]
mov     [esi+34h], eax
mov     [esi+38h], edx
mov     ebx, 80h

loc_401C2B:
mov     byte ptr [eax+1Ch], 1
mov     [edx+4], eax
add     eax, ebx
add     edx, ebx
dec     [ebp+var_10]
jnz     short loc_401C2B
mov     [esi], edx
add     edi, edx
movzx   ecx, word ptr [esi+4Eh]
mov     [esi+4], edi
mov     edi, edx
call    sub_401B5A
push    40h
movzx   ecx, word ptr [esi+4Ch]
pop     dword ptr [esi+0Ch]
mov     [esi+14h], ecx
mov     eax, [ebp+var_C]

loc_401C5C:
push    9
lea     eax, [ebp+var_44]
pop     edx
call    dword_41426C
mov     eax, [ebp+var_3F]
mov     ecx, [esi+30h]
cmp     eax, 10000h
mov     [edi], eax
movzx   eax, ax
jb      loc_401D18
cmp     eax, 101h
sbb     edx, edx
and     eax, edx
jz      loc_401F5A
mul     ecx
mov     [ebp+var_10], eax
lea     eax, [eax+eax*4]
call    sub_4011E8
mov     [edi+4], eax
xchg    eax, ebx

loc_401C9E:
push    esi
mov     esi, dword_41426C
xor     edx, edx
lea     eax, [ebp+var_14]
inc     edx
call    esi ; dword_41426C
movzx   edx, [ebp+var_14]
test    dl, 80h
jz      short loc_401CF7
and     edx, 1
jz      short loc_401CBF
mov     eax, ebx
call    esi ; dword_41426C

loc_401CBF:
test    [ebp+var_14], 2
jz      short loc_401CCD
xor     edx, edx
lea     eax, [ebx+1]
inc     edx
call    esi ; dword_41426C

loc_401CCD:
test    [ebp+var_14], 4
jz      short loc_401CDB
xor     edx, edx
lea     eax, [ebx+2]
inc     edx
call    esi ; dword_41426C

loc_401CDB:
test    [ebp+var_14], 8
jz      short loc_401CE9
xor     edx, edx
lea     eax, [ebx+3]
inc     edx
call    esi ; dword_41426C

loc_401CE9:
test    [ebp+var_14], 10h
jz      short loc_401D04
xor     edx, edx
lea     eax, [ebx+4]
inc     edx
jmp     short loc_401D02

loc_401CF7:
test    edx, edx
jz      short loc_401CFD
mov     [ebx], dl

loc_401CFD:
lea     eax, [ebx+1]
mov     dl, 4

loc_401D02:
call    esi ; dword_41426C

loc_401D04:
pop     esi
inc     ebx
mov     dl, [esi+48h]
cmp     [ebx], dl
jbe     short loc_401D10
mov     byte ptr [ebx], 0

loc_401D10:
add     ebx, 4
dec     [ebp+var_10]
jnz     short loc_401C9E

loc_401D18:
inc     [ebp+var_4]
mov     eax, [ebp+var_C]
add     edi, 8
cmp     eax, [ebp+var_4]
ja      loc_401C5C
mov     ecx, [ebp+var_8]
cmp     ecx, eax
jb      short loc_401D5C
mov     ebx, [esi]
mov     eax, [esi+30h]
push    esi
lea     esi, [ebx+ecx*8]
lea     edi, [eax+eax*4]
shl     edi, 6

loc_401D40:
dec     [ebp+var_8]
mov     eax, edi
mov     byte ptr [esi], 40h
call    sub_4011E8
mov     [esi+4], eax
sub     esi, 8
mov     eax, [ebp+var_C]
cmp     [ebp+var_8], eax
jnb     short loc_401D40
pop     esi

loc_401D5C:
xor     eax, eax
mov     [esi+8], eax
mov     [esi+10h], eax
lea     edi, [esi+20h]
stosd
stosd
stosd
mov     al, [esi+48h]
test    al, al
jz      loc_401F59
mov     byte ptr [ebp+var_4], al
mov     ebx, [esi+4]

loc_401D7B:
push    21h
lea     eax, [ebp+var_78]
pop     edx
call    dword_41426C
mov     esi, [ebp+var_78]
mov     dl, [ebp+var_5D]
sub     esi, 21h
test    dl, dl
jz      short loc_401DB9
xor     eax, eax
cmp     [ebp+var_5B], 29h
sbb     ecx, ecx
not     ecx
or      edx, ecx
cmp     dl, 10h
ja      loc_401F5A
mov     edx, 0D0h
lea     eax, [ebx+40h]
sub     esi, edx
call    dword_41426C

loc_401DB9:
xor     ecx, ecx
xchg    eax, esi
inc     ecx
call    dword_414270
lea     edx, [ebx+10Eh]
xor     eax, eax
mov     cx, [edx]
shl     ecx, 1
cmp     byte ptr [edx-0Eh], 2
mov     [edx], cx
jnb     short loc_401DDC
mov     [edx-6], al

loc_401DDC:
cmp     byte ptr [edx-0Dh], 2
jnb     short loc_401DE5
mov     [edx-5], al

loc_401DE5:
cmp     [ebp+var_5D], al
jz      loc_401F4A
mov     [ebp+var_8], eax
mov     [ebp+var_C], ebx

loc_401DF4:
lea     eax, [ebp+var_38]
mov     edx, [ebp+var_5B]
call    dword_41426C
mov     esi, [ebp+var_34]
mov     edi, [ebp+var_30]
mov     al, [ebp+var_2A]
mov     ecx, eax
shr     eax, 4
and     al, 1
mov     [ebp+var_2A], al
jz      short loc_401E1C
shr     [ebp+var_38], 1
shr     esi, 1
shr     edi, 1

loc_401E1C:
mov     eax, [ebp+var_38]
cmp     eax, esi
jg      short loc_401E25
mov     esi, eax

loc_401E25:
lea     edx, [esi+edi]
sub     edx, eax
js      short loc_401E2E
sub     edi, edx

loc_401E2E:
and     ecx, 3
jz      short loc_401E37
test    edi, edi
jnz     short loc_401E3D

loc_401E37:
xor     esi, esi
xor     ecx, ecx
mov     edi, eax

loc_401E3D:
mov     [ebp+var_34], esi
mov     [ebp+var_30], edi
mov     [ebp+var_26], cl
lea     eax, [eax+eax+1Ah]
call    sub_4011E8
mov     ecx, [ebp+var_C]
mov     [ecx], eax
inc     [ebp+var_8]
add     [ebp+var_C], 4
push    5
xchg    eax, edi
mov     eax, [ebp+var_8]
pop     ecx
cmp     al, [ebp+var_5D]
lea     esi, [ebp+var_38]
rep movsd
jb      short loc_401DF4
mov     [ebp+var_8], ecx

loc_401E6F:
mov     esi, [ebx+ecx*4]
xor     eax, eax
mov     edx, [esi]
mov     ch, [esi+11h]
mov     cl, [esi+0Eh]
test    edx, 0FFC00000h
jnz     loc_401F5A
add     esi, 14h
cmp     ch, 0ADh
jnz     short loc_401EDF
inc     edx
mov     edi, esi
sar     edx, 1
push    ebx
push    edx
lea     edx, [edx+edx*2]
add     edi, edx
lea     edx, [eax+10h]
lea     eax, [ebp+var_38]
mov     ebx, eax
call    dword_41426C
pop     edx
mov     eax, edi
call    dword_41426C
mov     edx, esi
xor     ecx, ecx

loc_401EB7:
cmp     edx, edi
jge     short loc_401EDC
mov     al, [edi]
mov     ah, al
and     al, 0Fh
xlat
shr     ah, 4
inc     edi
add     ch, al
mov     al, ah
xlat
add     al, ch
shl     eax, 18h
or      ecx, eax
mov     [edx], ecx
shr     ecx, 10h
add     edx, 4
jmp     short loc_401EB7

loc_401EDC:
pop     ebx
jmp     short loc_401F17

loc_401EDF:
shl     edx, cl
mov     eax, esi
call    dword_41426C
mov     ecx, [esi-14h]
lea     edi, [ecx+esi]
lea     eax, [edi+ecx]
xor     edx, edx
cmp     [esi-6], dl
jnz     short loc_401F07

loc_401EF9:
dec     eax
dec     edi
dec     eax
mov     dh, [edi]
cmp     eax, edi
mov     [eax], dx
ja      short loc_401EF9
xor     edx, edx

loc_401F07:
mov     eax, esi

loc_401F09:
add     dx, [eax]
mov     [eax], dx
dec     ecx
lea     eax, [eax+2]
jg      short loc_401F09
js      short loc_401F3B

loc_401F17:
mov     eax, [esi-0Ch]
mov     ecx, [esi-10h]
add     eax, ecx
cmp     byte ptr [esi-2], 2
lea     eax, [esi+eax*2]
jnz     short loc_401F2E
mov     cx, [eax-2]
jmp     short loc_401F38

loc_401F2E:
cmp     byte ptr [esi-2], 1
jnz     short loc_401F3B
mov     cx, [esi+ecx*2]

loc_401F38:
mov     [eax], cx

loc_401F3B:
inc     [ebp+var_8]
mov     ecx, [ebp+var_8]
cmp     cl, [ebp+var_5D]
jb      loc_401E6F

loc_401F4A:
add     ebx, 110h
dec     byte ptr [ebp+var_4]
jnz     loc_401D7B

loc_401F59:
inc     eax

loc_401F5A:
pop     ebx

locret_401F5B:
leave
retn
sub_401B6C endp



; Attributes: bp-based frame

sub_401F5D proc near

var_1C= dword ptr -1Ch
var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= byte ptr -0Ch
var_A= byte ptr -0Ah
var_8= dword ptr -8
var_4= dword ptr -4

mov     eax, [esi-0Ch]
push    ebp
movzx   ebx, byte ptr [eax+esi+2Ch]
mov     ebp, esp
mov     eax, [esi-8]
lea     ebx, [ecx+ebx*8]
mov     ecx, [esi+0Ch]
mov     [ebp+var_A], ch
mul     ecx
lea     edi, [eax+eax*4]
push    esi
add     edi, [ebx+4]
sub     esp, 18h
shl     ecx, 7
jz      short locret_401F5B
push    esi
mov     esi, [esi+14h]
push    ebx
inc     esi
inc     esi
add     ecx, esi

loc_401F8E:
push    ecx
mov     bl, [edi+4]
mov     al, [edi+3]
and     ebx, 0Fh
cmp     al, 3
jz      short loc_401F9E
cmp     al, 5

loc_401F9E:
setz    [ebp+var_C]
mov     cl, [edi+1]
jz      short loc_401FB9
dec     cl
js      short loc_401FAE
mov     [esi+1], cl

loc_401FAE:
mov     cl, [edi]
dec     ecx
cmp     cl, 60h
jnb     short loc_401FB9
mov     [esi-2], cl

loc_401FB9:
movzx   ecx, byte ptr [esi+1]
mov     eax, [ebp+var_4]
imul    ecx, 110h
add     ecx, [eax-20h]
movzx   eax, byte ptr [esi-2]
cdq
mov     al, [eax+ecx+40h]
cmp     al, 10h
mov     [ebp+var_1C], ecx
jnb     short loc_401FDC
mov     edx, [ecx+eax*4]

loc_401FDC:
test    edx, edx
jnz     short loc_401FE5
mov     edx, offset unk_424338

loc_401FE5:
mov     [ebp+var_8], edx
mov     ecx, [esi+6]
mov     eax, [esi+0Ah]
mov     [ebp+var_18], ecx
mov     ecx, [esi+16h]
mov     [ebp+var_14], eax
mov     [ebp+var_10], ecx
mov     al, [edi+3]
cmp     al, 7
jz      short loc_40200D
cmp     byte ptr [esi+67h], 7
jnz     short loc_40200D
mov     ecx, [esi+0Eh]
add     [esi+0Ah], ecx

loc_40200D:
mov     [esi+67h], al
xor     ecx, ecx
mov     [esi+0Eh], ecx
mov     [esi+12h], ecx
mov     byte ptr [esi], 3
mov     al, [edi]
test    al, al
jz      short loc_402069
cmp     al, 61h
jnb     short loc_402069
mov     cl, [edx+10h]
add     cl, al
mov     eax, [ebp+var_4]
dec     ecx
mov     [esi+66h], cl
test    byte ptr [eax+26h], 1
jz      short loc_402051
mov     eax, [ebp+var_8]
movsx   eax, byte ptr [eax+0Dh]
cdq
shl     ecx, 6
sub     eax, edx
sar     eax, 1
lea     eax, [ecx+eax-1E00h]
neg     eax
jmp     short loc_40205A

loc_402051:
xchg    eax, ecx
mov     ecx, [ebp+var_8]
call    sub_401907

loc_40205A:
mov     [esi+52h], eax
cmp     [ebp+var_C], 0
jnz     short loc_402066
mov     [esi+6], eax

loc_402066:
or      byte ptr [esi], 8

loc_402069:
cmp     byte ptr [edi+1], 0
jz      short loc_4020B3
mov     eax, [ebp+var_8]
push    edi
push    9
movzx   ecx, byte ptr [eax+0Ch]
mov     [esi+0Ah], ecx
pop     ecx
movzx   eax, byte ptr [eax+0Fh]
mov     [esi+16h], eax
push    40h
xor     eax, eax
pop     dword ptr [esi+42h]
push    20h
lea     edi, [esi+1Ah]
pop     dword ptr [esi+4Eh]
mov     dword ptr [esi+46h], 10000h
rep stosd
mov     cl, [esi+7Ah]
pop     edi
cmp     cl, 4Fh
jge     short loc_4020A8
mov     [esi+74h], al

loc_4020A8:
test    cl, 0Ch
jnz     short loc_4020B0
mov     [esi+71h], al

loc_4020B0:
or      byte ptr [esi], 6

loc_4020B3:
movzx   edx, byte ptr [edi+2]
call    sub_401AD5
cmp     byte ptr [edi], 61h
jnb     short loc_4020C7
cmp     byte ptr [edi+3], 14h
jnz     short loc_4020CA

loc_4020C7:
inc     byte ptr [esi+3Ah]

loc_4020CA:
mov     ecx, [ebp+var_1C]
test    byte ptr [ecx+108h], 1
jz      short loc_4020DF
mov     al, 2
call    sub_4019D7
jmp     short loc_4020E9

loc_4020DF:
cmp     byte ptr [esi+3Ah], 0
jz      short loc_4020E9
and     dword ptr [esi+42h], 0

loc_4020E9:
mov     ecx, [ebp+var_1C]
test    byte ptr [ecx+109h], 1
jz      short loc_4020FC
mov     al, 4
call    sub_4019D7

loc_4020FC:
cmp     byte ptr [esi+3Ah], 0
mov     ecx, [ebp+var_1C]
jz      short loc_402115
movzx   eax, word ptr [ecx+10Eh]
sub     [esi+46h], eax
jns     short loc_402115
and     dword ptr [esi+46h], 0

loc_402115:
movzx   eax, byte ptr [edi+3]
dec     eax
movzx   edx, byte ptr [edi+4]
cmp     al, 20h
ja      short loc_40212B
test    edx, edx
call    ds:off_402149[eax*4]

loc_40212B:
push    [ebp+var_1C]
push    [ebp+var_8]
call    sub_4027E7
sub     esi, 0FFFFFF80h
pop     ecx
add     edi, 5
cmp     esi, ecx
jl      loc_401F8E
pop     ebx
pop     esi
leave
sub_401F5D endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
off_402149 dd offset sub_4021CD
dd offset sub_4021CD
dd offset sub_4021D4
dd offset sub_4021EA
dd offset sub_4021DB
dd offset sub_4021FB
dd offset sub_402205
dd offset sub_402726
dd offset sub_402215
dd offset sub_40223F
dd offset sub_402245
dd offset sub_402435
dd offset sub_40225D
dd offset sub_402362
dd offset sub_40227A
dd offset sub_402749
dd offset sub_40228D
dd offset nullsub_2
dd offset nullsub_2
dd offset nullsub_2
dd offset sub_402296
dd offset nullsub_2
dd offset nullsub_2
dd offset nullsub_2
dd offset sub_402317
dd offset nullsub_2
dd offset sub_402320
dd offset nullsub_2
dd offset sub_40232C
dd offset nullsub_2
dd offset nullsub_2
dd offset nullsub_2
dd offset sub_40233C



sub_4021CD proc near
jz      short locret_4021D3
mov     [esi+eax+68h], dl

locret_4021D3:
retn
sub_4021CD endp




sub_4021D4 proc near
jz      short loc_4021D9
mov     [esi+70h], dl

loc_4021D9:
jmp     short loc_4021E0
sub_4021D4 endp




sub_4021DB proc near
jz      short loc_4021E0
mov     [esi+6Ch], dl

loc_4021E0:
mov     eax, [esi+52h]
and     byte ptr [esi], 0F6h
mov     [esi+5Ah], eax
retn
sub_4021DB endp




sub_4021EA proc near
shr     edx, 4
jz      short loc_4021F2
mov     [esi+72h], dl

loc_4021F2:
test    ebx, ebx
jz      short loc_4021F9
mov     [esi+73h], bl

loc_4021F9:
xor     eax, eax
sub_4021EA endp




sub_4021FB proc near
jz      short loc_402200
mov     [esi+6Ch], dl

loc_402200:
jmp     sub_401994
sub_4021FB endp




sub_402205 proc near
shr     edx, 4
jz      short loc_40220D
mov     [esi+75h], dl

loc_40220D:
test    ebx, ebx
jz      short locret_402214
mov     [esi+76h], bl

locret_402214:
retn
sub_402205 endp




sub_402215 proc near
shl     edx, 8
jz      short loc_40221D
mov     [esi+56h], edx

loc_40221D:
mov     ecx, [ebp-8]
mov     edx, [ecx+4]
add     edx, [ecx+8]
mov     eax, [esi+56h]
cmp     eax, edx
mov     ecx, [esi+2]
jb      short loc_40223B
xor     eax, eax
and     byte ptr [esi], 0F7h
mov     [ecx+14h], eax
mov     [ecx+30h], eax

loc_40223B:
mov     [ecx+8], eax
retn
sub_402215 endp




sub_40223F proc near
jz      short locret_402244
mov     [esi+6Ch], dl

locret_402244:
retn
sub_40223F endp




sub_402245 proc near
mov     eax, [ebp-4]
and     dword ptr [eax+4], 0
mov     [eax], edx
inc     byte ptr [ebp-0Ah]

loc_402251:
movzx   ecx, word ptr [eax+1Ch]
cmp     [eax], ecx
jl      short locret_40225C
and     dword ptr [eax], 0

locret_40225C:
retn
sub_402245 endp




sub_40225D proc near
shr     edx, 4
lea     edx, [edx+edx*4]
lea     ecx, [ebx+edx*2]
mov     eax, [ebp-4]
mov     [eax+4], ecx
cmp     byte ptr [ebp-0Ah], 0
jnz     short locret_40225C
mov     ecx, [eax-0Ch]
inc     ecx
mov     [eax], ecx
jmp     short loc_402251
sub_40225D endp




sub_40227A proc near
cmp     dl, 20h
mov     ecx, edx
jnb     short loc_402288
mov     eax, [ebp-4]
mov     [eax-10h], ecx
retn

loc_402288:
jmp     sub_401B5A
sub_40227A endp




sub_40228D proc near
jz      short locret_402295
mov     ecx, [ebp-4]
mov     [ecx+21h], dl

locret_402295:
retn
sub_40228D endp




sub_402296 proc near
test    byte ptr [ecx+108h], 1
jz      short locret_4022D2
lea     ebx, [ecx+0A4h]
movzx   ecx, byte ptr [ecx+100h]
xor     eax, eax
cmp     dx, [ebx]
jbe     short loc_4022BE

loc_4022B3:
cmp     eax, ecx
jz      short loc_4022BE
inc     eax
cmp     dx, [ebx+eax*4]
ja      short loc_4022B3

loc_4022BE:
mov     [esi+1Eh], eax
dec     ecx
cmp     eax, ecx
setnl   byte ptr [esi+3Ch]
jl      short loc_4022D3
movzx   eax, word ptr [ebx+ecx*4-2]
mov     [esi+42h], eax

locret_4022D2:
retn

loc_4022D3:
mov     [esi+1Ah], edx
mov     ecx, [ebx+eax*4-4]
mov     edx, ecx
movzx   ecx, cx
mov     [ebp-14h], ecx
mov     ecx, [ebx+eax*4]
mov     eax, ecx
movzx   ecx, cx
xor     dx, dx
sub     ecx, [ebp-14h]
push    edx
jz      short loc_4022FC
xor     ax, ax
sub     eax, edx
cdq
idiv    ecx
xchg    eax, ecx

loc_4022FC:
mov     [esi+22h], ecx
mov     eax, [esi+1Ah]
sub     eax, [ebp-14h]
imul    ecx
pop     edx
add     eax, edx
mov     [esi+3Eh], eax
sar     eax, 10h
mov     [esi+42h], eax
inc     dword ptr [esi+1Eh]
retn
sub_402296 endp




sub_402317 proc near
jz      short locret_40231F
mov     [esi+6Dh], dl
or      byte ptr [esi], 4

locret_40231F:
retn
sub_402317 endp




sub_402320 proc near
jz      short locret_40232B
shr     edx, 4
mov     dh, bl
mov     [esi+6Eh], dx

locret_40232B:
retn
sub_402320 endp




sub_40232C proc near
jz      short loc_402337
shr     edx, 4
mov     dh, bl
mov     [esi+78h], dx

loc_402337:
jmp     sub_401B38
sub_40232C endp




sub_40233C proc near
shr     edx, 4
dec     edx
jnz     short loc_402350
test    ebx, ebx
jz      short loc_402349
mov     [esi+6Bh], bl

loc_402349:
movzx   eax, byte ptr [esi+6Bh]
sub     [esi+6], eax

loc_402350:
dec     edx
jnz     short locret_402361 ; jumptable 0040236D default case
test    ebx, ebx
jz      short loc_40235A
mov     [esi+6Ah], bl

loc_40235A:
movzx   eax, byte ptr [esi+6Ah]
add     [esi+6], eax

locret_402361:          ; jumptable 0040236D default case
retn
sub_40233C endp




sub_402362 proc near
shr     edx, 4
dec     edx
cmp     dl, 0Dh         ; switch 14 cases
ja      short locret_402361 ; jumptable 0040236D default case
test    ebx, ebx
jmp     ds:off_402374[edx*4] ; switch jump
off_402374 dd offset loc_4023AC ; jump table for switch statement
dd offset loc_4023BC
dd offset locret_402361
dd offset loc_4023CC
dd offset loc_4023D4
dd offset loc_4023DB
dd offset loc_4023FF
dd offset loc_40240A
dd offset locret_402361
dd offset loc_402414
dd offset loc_402416
dd offset locret_402361
dd offset loc_402423
dd offset loc_402439

loc_4023AC:             ; jumptable 0040236D case 0
jz      short loc_4023B1
mov     [esi+7Ch], bl

loc_4023B1:
movzx   eax, byte ptr [esi+7Ch]
shl     eax, 2
sub     [esi+6], eax
retn

loc_4023BC:             ; jumptable 0040236D case 1
jz      short loc_4023C1
mov     [esi+7Dh], bl

loc_4023C1:
movzx   eax, byte ptr [esi+7Dh]
shl     eax, 2
add     [esi+6], eax
retn

loc_4023CC:             ; jumptable 0040236D case 3
and     byte ptr [esi+7Ah], 0F0h
or      [esi+7Ah], bl
retn

loc_4023D4:             ; jumptable 0040236D case 4
mov     eax, [ebp-8]
mov     [eax+0Dh], bl
retn

loc_4023DB:             ; jumptable 0040236D case 5
jnz     short loc_4023E7
mov     eax, [ebp-4]
mov     eax, [eax-8]
mov     [esi+62h], eax
retn

loc_4023E7:
mov     cl, [esi+5Eh]
dec     cl
jns     short loc_4023F0
mov     ecx, ebx

loc_4023F0:
mov     [esi+5Eh], cl
jz      short locret_4023FE
mov     eax, [esi+62h]
mov     ecx, [ebp-4]
mov     [ecx+4], eax

locret_4023FE:
retn

loc_4023FF:             ; jumptable 0040236D case 6
and     byte ptr [esi+7Ah], 0Fh
shl     ebx, 4
or      [esi+7Ah], bl
retn

loc_40240A:             ; jumptable 0040236D case 7
shl     ebx, 4
mov     [esi+16h], ebx
or      byte ptr [esi], 4
retn

loc_402414:             ; jumptable 0040236D case 9
neg     ebx

loc_402416:             ; jumptable 0040236D case 10
jz      short loc_40241B
mov     [esi+7Bh], bl

loc_40241B:
movsx   eax, byte ptr [esi+7Bh]
sub     [esi+0Ah], eax
retn

loc_402423:             ; jumptable 0040236D case 12
mov     eax, [ebp-18h]
mov     edx, [ebp-14h]
mov     [esi+6], eax
mov     eax, [ebp-10h]
mov     [esi+16h], eax
mov     byte ptr [esi], 0
sub_402362 endp




sub_402435 proc near
mov     [esi+0Ah], edx
retn
sub_402435 endp


loc_402439:             ; jumptable 0040236D case 13
mov     ecx, [ebp-4]
imul    ebx, [ecx-10h]
mov     [ecx-4], ebx
retn


; Attributes: bp-based frame

sub_402444 proc near

var_8= dword ptr -8
var_4= dword ptr -4

mov     eax, [esi-0Ch]
push    ebp
mov     bl, [eax+esi+2Ch]
mov     eax, [esi-8]
mul     dword ptr [esi+0Ch]
lea     eax, [eax+eax*4]
mov     ebp, esp
add     eax, [ecx+ebx*8+4]
push    esi
push    eax
mov     eax, [esi+0Ch]
shl     eax, 7
push    esi
mov     esi, [esi+14h]
inc     esi
inc     esi
add     eax, esi

loc_40246B:
push    eax
movzx   edi, byte ptr [esi+1]
mov     edx, [ebp+var_4]
imul    edi, 110h
movzx   eax, byte ptr [esi-2]
add     edi, [edx-20h]
cdq
mov     al, [eax+edi+40h]
cmp     al, 10h
jnb     short loc_40248C
mov     edx, [edi+eax*4]

loc_40248C:
test    edx, edx
jnz     short loc_402495
mov     edx, offset unk_424338

loc_402495:
xor     ebx, ebx
push    edi
push    edx
mov     [esi+0Eh], ebx
mov     [esi+12h], ebx
mov     [esi], bl
test    byte ptr [edi+108h], 1
jz      short loc_4024B3
mov     al, 2
mov     ecx, edi
call    sub_4019D7

loc_4024B3:
test    byte ptr [edi+109h], 1
jz      short loc_4024C5
mov     al, 4
mov     ecx, edi
call    sub_4019D7

loc_4024C5:
cmp     [esi+3Ah], bl
jz      short loc_4024DC
movzx   eax, word ptr [edi+10Eh]
sub     [esi+46h], eax
jns     short loc_4024D9
mov     [esi+46h], ebx

loc_4024D9:
or      byte ptr [esi], 2

loc_4024DC:
mov     eax, [ebp+var_8]
movzx   eax, byte ptr [eax+2]
mov     ecx, eax
shr     eax, 4
and     cl, 0Fh
sub     al, 6
jz      short loc_40251B
dec     eax
jz      short loc_40251D
sub     al, 4
jz      short loc_402511
dec     eax
dec     eax
jz      short loc_402509
dec     eax
jz      short loc_402507
dec     eax
jnz     short loc_402523
call    sub_4019B3
jmp     short loc_402523

loc_402507:
neg     ecx

loc_402509:
sub     [esi+16h], ecx
or      byte ptr [esi], 4
jmp     short loc_402523

loc_402511:
mov     [esi+73h], cl
call    sub_401994
jmp     short loc_402523

loc_40251B:
neg     ecx

loc_40251D:
add     [esi+0Ah], ecx
or      byte ptr [esi], 2

loc_402523:
mov     edx, [ebp+var_8]
movzx   ebx, byte ptr [edx+4]
mov     ecx, ebx
and     ebx, 0Fh
movzx   eax, byte ptr [edx+3]
shr     cl, 4
cmp     al, 1Dh
ja      short loc_402541
call    ds:off_402559[eax*4]

loc_402541:
call    sub_4027E7
sub     esi, 0FFFFFF80h
pop     eax
add     [ebp+var_8], 5
cmp     esi, eax
jl      loc_40246B
pop     esi
leave
sub_402444 endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_3. PRESS CTRL-NUMPAD+ TO EXPAND]
off_402559 dd offset sub_40261D
dd offset sub_402607
dd offset sub_4025F6
dd offset sub_4019B3
dd offset sub_401994
dd offset sub_4025D8
dd offset sub_4025D1
dd offset sub_4019A2
dd offset nullsub_3
dd offset nullsub_3
dd offset sub_4025DF
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset sub_402758
dd offset nullsub_3
dd offset nullsub_3
dd offset sub_40272D
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset nullsub_3
dd offset sub_402703
dd offset nullsub_3
dd offset sub_40266B
dd offset nullsub_3
dd offset sub_401B38



sub_4025D1 proc near
call    sub_401994
jmp     short sub_4025DF
sub_4025D1 endp




sub_4025D8 proc near
call    sub_4019B3
xor     ecx, ecx
sub_4025D8 endp




sub_4025DF proc near
mov     cl, [esi+6Ch]
mov     eax, ecx
and     eax, 0Fh
shr     ecx, 4
jz      short loc_4025EF
xchg    eax, ecx
neg     eax

loc_4025EF:
sub     [esi+0Ah], eax
or      byte ptr [esi], 2
retn
sub_4025DF endp




sub_4025F6 proc near
mov     cl, [esi+69h]
shl     ecx, 2
add     [esi+6], ecx

loc_4025FF:
and     dword ptr [esi+12h], 0
or      byte ptr [esi], 1
retn
sub_4025F6 endp




sub_402607 proc near
mov     cl, [esi+68h]
shl     ecx, 2
sub     [esi+6], ecx
cmp     dword ptr [esi+6], 38h
jge     short loc_4025FF
push    38h
pop     dword ptr [esi+6]
jmp     short loc_4025FF
sub_402607 endp




sub_40261D proc near

arg_0= dword ptr  4

cmp     [edx+4], ch
jbe     short locret_40266A
mov     eax, [ebp-4]
mov     eax, [eax-14h]
push    3
cdq
pop     edi
idiv    edi
dec     edx
jz      short loc_402636
dec     edx
jnz     short loc_402667
mov     ecx, ebx

loc_402636:
mov     eax, [ebp-4]
test    byte ptr [eax+26h], 1
jz      short loc_402647
shl     ecx, 6
mov     [esi+12h], ecx
jmp     short loc_402667

loc_402647:
movzx   eax, byte ptr [esi+66h]
mov     edi, eax
add     eax, ecx
mov     ecx, [esp+arg_0]
call    sub_401907
xchg    eax, edi
mov     ecx, [esp+arg_0]
call    sub_401907
sub     edi, eax
mov     [esi+12h], edi

loc_402667:
or      byte ptr [esi], 1

locret_40266A:
retn
sub_40261D endp




sub_40266B proc near
mov     cl, [esi+6Fh]
test    ecx, ecx
jz      short locret_40269D
mov     eax, [ebp-4]
mov     eax, [eax-14h]
cdq
idiv    ecx
test    edx, edx
jnz     short locret_40269D
mov     cl, [esi+6Eh]
and     ecx, 0Fh
or      byte ptr [esi], 8
dec     ecx
mov     eax, [esi+0Ah]
js      short locret_40269D
or      byte ptr [esi], 2
call    ds:off_4026C7[ecx*4]
mov     [esi+0Ah], eax
sub_40266B endp




sub_40269B proc near
dec     eax
sub_40269B endp




sub_40269C proc near
dec     eax

locret_40269D:
retn
sub_40269C endp




sub_40269E proc near
sub     eax, 8
sub_40269E endp




sub_4026A1 proc near
sub     eax, 4
sub_4026A1 endp




sub_4026A4 proc near
sub     eax, 4
retn
sub_4026A4 endp




sub_4026A8 proc near
shl     eax, 1
push    3
cdq
pop     ecx
idiv    ecx
retn
sub_4026A8 endp




sub_4026B1 proc near
lea     eax, [eax+eax*2]
sub_4026B1 endp




sub_4026B4 proc near
sar     eax, 1
retn
sub_4026B4 endp




sub_4026B7 proc near
inc     eax
sub_4026B7 endp




sub_4026B8 proc near
inc     eax
retn
sub_4026B8 endp




sub_4026BA proc near
add     eax, 8
sub_4026BA endp




sub_4026BD proc near
add     eax, 4
sub_4026BD endp




sub_4026C0 proc near
add     eax, 4
retn
sub_4026C0 endp




sub_4026C4 proc near
shl     eax, 1
sub_4026C4 endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_4. PRESS CTRL-NUMPAD+ TO EXPAND]
off_4026C7 dd offset sub_40269C
dd offset sub_40269B
dd offset sub_4026A4
dd offset sub_4026A1
dd offset sub_40269E
dd offset sub_4026A8
dd offset sub_4026B4
dd offset nullsub_4
dd offset sub_4026B8
dd offset sub_4026B7
dd offset sub_4026C0
dd offset sub_4026BD
dd offset sub_4026BA
dd offset sub_4026B1
dd offset sub_4026C4



sub_402703 proc near
mov     cl, [esi+6Dh]
mov     eax, ecx
and     eax, 0Fh
mov     edx, [esi+16h]
shr     ecx, 4
jnz     short loc_40271B
sub     edx, eax
jns     short sub_402726
mov     edx, ecx
jmp     short sub_402726

loc_40271B:
add     ecx, edx
cdq
dec     dl
cmp     ecx, edx
jg      short sub_402726
mov     edx, ecx
sub_402703 endp




sub_402726 proc near
mov     [esi+16h], edx
or      byte ptr [esi], 4
retn
sub_402726 endp




sub_40272D proc near
mov     ecx, [ebp-4]
mov     edx, [ecx-18h]
mov     al, [ecx+21h]
test    al, 0F0h
jnz     short loc_402744
and     eax, 0Fh
sub     edx, eax
jns     short sub_402749
cdq
xor     eax, eax

loc_402744:
shr     eax, 4
add     edx, eax
sub_40272D endp




sub_402749 proc near
cmp     edx, 40h
mov     ecx, [ebp-4]
jle     short loc_402754
push    40h
pop     edx

loc_402754:
mov     [ecx-18h], edx
retn
sub_402749 endp




sub_402758 proc near

arg_0= dword ptr  4

cmp     cl, 9
jz      short loc_4027D2
sub     cl, 0Ch
jz      short loc_4027C2
dec     cl
jnz     short locret_4027C1
mov     ecx, [ebp-4]
xor     eax, eax
cmp     [ecx-14h], ebx
jnz     short loc_4027BF
mov     edx, [esp+arg_0]
mov     dword ptr [esi+46h], 10000h
movzx   edx, byte ptr [edx+0Ch]
lea     ecx, [eax+9]
mov     [esi+0Ah], edx
mov     edx, [esi+42h]
lea     edi, [esi+1Ah]
cmp     ecx, edx
sbb     edx, edx
and     edx, 40h
mov     [esi+42h], edx
rep stosd
mov     cl, [esi+7Ah]
cmp     cl, 4Fh
jge     short loc_4027A2
mov     [esi+74h], al

loc_4027A2:
test    cl, 0Ch
jnz     short loc_4027AA
mov     [esi+71h], al

loc_4027AA:
mov     eax, [esi+52h]
or      byte ptr [esi], 0Bh
mov     [esi+6], eax
mov     eax, [ebp-8]
movzx   edx, byte ptr [eax+2]
jmp     sub_401AD5

loc_4027BF:
mov     [esi], al

locret_4027C1:
retn

loc_4027C2:
mov     ecx, [ebp-4]
cmp     [ecx-14h], ebx
jnz     short locret_4027D1
and     dword ptr [esi+0Ah], 0
or      byte ptr [esi], 2

locret_4027D1:
retn

loc_4027D2:
test    ebx, ebx
jz      short locret_4027E6
mov     eax, [ebp-4]
mov     eax, [eax-14h]
cdq
idiv    ebx
test    edx, edx
jnz     short locret_4027E6
or      byte ptr [esi], 0Bh

locret_4027E6:
retn
sub_402758 endp




sub_4027E7 proc near

var_C= dword ptr -0Ch
arg_0= dword ptr  4
arg_4= dword ptr  8

mov     ebx, esi
push    esi
push    edi
mov     esi, [esp+8+arg_4]
xor     eax, eax
movzx   edx, byte ptr [esi+10Ah]
mov     al, 80h
lea     edi, [ebx+36h]
dec     edx
js      short loc_402824
jz      short loc_402819
dec     edx
jz      short loc_402813
push    0FFFFFF80h
pop     edx
sub     edx, [edi]

loc_40280A:
movzx   edx, dl
sub     eax, edx
sar     eax, 1
jmp     short loc_402839

loc_402813:
mov     edx, [edi]
sub     edx, eax
jmp     short loc_40280A

loc_402819:
cmp     [edi], eax
sbb     edx, edx
and     edx, eax
lea     eax, [edx-40h]
jmp     short loc_402839

loc_402824:
push    eax
fild    dword ptr [edi]
fmul    ds:flt_401620
fsin
fmul    ds:flt_401624
fistp   [esp+0Ch+var_C]
pop     eax

loc_402839:
movzx   edx, byte ptr [esi+10Ch]
imul    edx, eax
movzx   eax, byte ptr [esi+10Bh]
test    eax, eax
jz      short loc_40285A
push    edi
xchg    eax, edi
mov     eax, [ebx+32h]
imul    edx
idiv    edi
xchg    eax, edx
xchg    eax, edi
pop     edi

loc_40285A:
sar     edx, 6
add     [ebx+12h], edx
mov     edx, [ebx+32h]
inc     edx
cmp     edx, eax
jle     short loc_402869
xchg    eax, edx

loc_402869:
mov     [ebx+32h], edx
or      byte ptr [ebx], 1
movzx   eax, byte ptr [esi+10Dh]
add     [edi], eax
mov     eax, [edi]
sub     eax, 100h
jl      short loc_402883
mov     [edi], eax

loc_402883:
mov     esi, [ebx+2]
test    byte ptr [ebx], 8
jz      short loc_4028CF
cmp     dword ptr [esi+2Ch], 0
jz      short loc_4028B8
mov     ecx, esi
sub     ecx, dword_412114
shr     ecx, 7
sbb     edi, edi
and     edi, 0FFFFFF80h
lea     edi, [esi+edi+40h]
push    edi
push    0Bh
mov     [ebx+2], edi
pop     ecx
rep movsd
mov     [esi-2Ch], ecx
mov     [esi-20h], ecx
mov     [esi-1Ch], ecx
pop     esi

loc_4028B8:
lea     edi, [esi+2Ch]
mov     eax, [esp+8+arg_0]
stosd
xor     eax, eax
mov     edx, [esi+8]
stosd
stosd
stosd
stosd
mov     [esi+8], eax
mov     [esi+14h], edx

loc_4028CF:
mov     eax, [ebx+0Ah]
xor     ecx, ecx
cdq
not     edx
and     eax, edx
cmp     eax, 40h
jle     short loc_4028E1
lea     eax, [ecx+40h]

loc_4028E1:
dec     cl
mov     [ebx+0Ah], eax
test    byte ptr [ebx], 2
jz      short loc_402919
add     eax, [ebx+0Eh]
imul    dword ptr [ebx+42h]
imul    dword_4120EC
imul    ecx
imul    dword ptr [ebx+46h]
sar     edx, 3
mov     eax, [esi+4]
mov     [esi], edx
mov     edi, edx
imul    edx
idiv    ecx
mov     [esi+0Ch], eax
mov     eax, ecx
sub     eax, [esi+4]
imul    edi
idiv    ecx
mov     [esi+10h], eax

loc_402919:
test    byte ptr [ebx], 4
jz      short loc_402961
mov     edi, 80h
mov     eax, [ebx+16h]
sub     eax, edi
cdq
xor     eax, edx
sub     eax, edx
sub     edi, eax
mov     eax, [ebx+4Eh]
sar     edi, 5
sub     eax, 20h
imul    edi
add     eax, [ebx+16h]
cdq
not     edx
and     eax, edx
mov     edi, [esi]
cmp     eax, ecx
mov     edx, ecx
xchg    eax, edi
jnb     short loc_402951
imul    edi
idiv    ecx
mov     edx, edi

loc_402951:
xchg    eax, edx
mov     [esi+4], eax
mov     [esi+0Ch], edx
not     al
imul    dword ptr [esi]
idiv    ecx
mov     [esi+10h], eax

loc_402961:
test    byte ptr [ebx], 1
jz      short loc_4029D3
mov     ecx, [ebx+6]
xor     edx, edx
add     ecx, [ebx+12h]
jz      short loc_4029C1
test    byte_41212A, 1
jnz     short loc_402982
mov     eax, 0DA7790h
idiv    ecx
jmp     short loc_4029B3

loc_402982:
mov     eax, 1200h
sub     eax, [ebx+6]
add     eax, [ebx+12h]
push    eax
fild    [esp+0Ch+var_C]
fmul    ds:flt_401610
fld     st
frndint
fsub    st(1), st
fxch    st(1)
f2xm1
fld1
faddp   st(1), st
fscale
fstp    st(1)
fmul    ds:flt_401614
fistp   [esp+0Ch+var_C]
pop     eax

loc_4029B3:
xor     edx, edx
cmp     eax, 64h
jl      short loc_4029C1
cmp     eax, 0BB800h
jle     short loc_4029C4

loc_4029C1:
lea     eax, [edx+64h]

loc_4029C4:
mov     ebx, 0BB80h
div     ebx
mov     [esi+1Ch], eax
div     ebx
mov     [esi+18h], eax

loc_4029D3:
pop     edi
pop     esi
retn    8
sub_4027E7 endp




anti_debug proc near
cmp     ecx, dword_411004
jnz     short loc_4029E2
rep retn

loc_4029E2:
jmp     sub_403629
anti_debug endp

align 10h


; Attributes: bp-based frame

sub_4029F0 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
push    edi
push    esi
mov     esi, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     edi, [ebp+arg_0]
mov     eax, ecx
mov     edx, ecx
add     eax, esi
cmp     edi, esi
jbe     short loc_402A10
cmp     edi, eax
jb      loc_402BB4

loc_402A10:
cmp     ecx, 100h
jb      short loc_402A37
cmp     dword_425F24, 0
jz      short loc_402A37
push    edi
push    esi
and     edi, 0Fh
and     esi, 0Fh
cmp     edi, esi
pop     esi
pop     edi
jnz     short loc_402A37
pop     esi
pop     edi
pop     ebp
jmp     sub_4037B6

loc_402A37:
test    edi, 3
jnz     short loc_402A54
shr     ecx, 2
and     edx, 3
cmp     ecx, 8          ; switch 8 cases
jb      short loc_402A74
rep movsd               ; jumptable 00402A74 default case
jmp     ds:off_402B64[edx*4]
align 4

loc_402A54:
mov     eax, edi
mov     edx, 3
sub     ecx, 4
jb      short loc_402A6C
and     eax, 3
add     ecx, eax
jmp     dword ptr ds:loc_402A74+4[eax*4]

loc_402A6C:
jmp     dword ptr ds:loc_402B74[ecx*4]
align 4

loc_402A74:             ; switch jump
jmp     ds:off_402AF8[ecx*4]
align 4
dd offset loc_402A88
mov     ah, 2Ah
inc     eax
add     al, bl
sub     al, [eax+0]

loc_402A88:
and     edx, ecx
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     al, [esi+2]
shr     ecx, 2
mov     [edi+2], al
add     esi, 3
add     edi, 3
cmp     ecx, 8
jb      short loc_402A74
rep movsd
jmp     ds:off_402B64[edx*4]
align 4
and     edx, ecx
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
shr     ecx, 2
mov     [edi+1], al
add     esi, 2
add     edi, 2
cmp     ecx, 8
jb      short loc_402A74
rep movsd
jmp     ds:off_402B64[edx*4]
align 4
and     edx, ecx
mov     al, [esi]
mov     [edi], al
add     esi, 1
shr     ecx, 2
add     edi, 1
cmp     ecx, 8
jb      short loc_402A74
rep movsd
jmp     ds:off_402B64[edx*4]
align 4
off_402AF8 dd offset loc_402B5B ; jump table for switch statement
dd offset loc_402B48
dd offset loc_402B40
dd offset loc_402B38
dd offset loc_402B30
dd offset loc_402B28
dd offset loc_402B20
dd offset loc_402B18

loc_402B18:             ; jumptable 00402A74 case 7
mov     eax, [esi+ecx*4-1Ch]
mov     [edi+ecx*4-1Ch], eax

loc_402B20:             ; jumptable 00402A74 case 6
mov     eax, [esi+ecx*4-18h]
mov     [edi+ecx*4-18h], eax

loc_402B28:             ; jumptable 00402A74 case 5
mov     eax, [esi+ecx*4-14h]
mov     [edi+ecx*4-14h], eax

loc_402B30:             ; jumptable 00402A74 case 4
mov     eax, [esi+ecx*4-10h]
mov     [edi+ecx*4-10h], eax

loc_402B38:             ; jumptable 00402A74 case 3
mov     eax, [esi+ecx*4-0Ch]
mov     [edi+ecx*4-0Ch], eax

loc_402B40:             ; jumptable 00402A74 case 2
mov     eax, [esi+ecx*4-8]
mov     [edi+ecx*4-8], eax

loc_402B48:             ; jumptable 00402A74 case 1
mov     eax, [esi+ecx*4-4]
mov     [edi+ecx*4-4], eax
lea     eax, ds:0[ecx*4]
add     esi, eax
add     edi, eax

loc_402B5B:             ; jumptable 00402A74 case 0
jmp     ds:off_402B64[edx*4]
align 4
off_402B64 dd offset loc_402B74
dd offset loc_402B7C
dd offset loc_402B88
dd offset loc_402B9C

loc_402B74:
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402B7C:
mov     al, [esi]
mov     [edi], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402B88:
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402B9C:
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     al, [esi+2]
mov     [edi+2], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402BB4:
lea     esi, [ecx+esi-4]
lea     edi, [ecx+edi-4]
test    edi, 3
jnz     short loc_402BE8
shr     ecx, 2
and     edx, 3
cmp     ecx, 8
jb      short loc_402BDC
std
rep movsd
cld
jmp     ds:off_402D00[edx*4] ; jumptable 00402C00 case 0
align 4

loc_402BDC:
neg     ecx
jmp     ds:off_402CB0[ecx*4]
align 4

loc_402BE8:
mov     eax, edi
mov     edx, 3
cmp     ecx, 4          ; switch 4 cases
jb      short loc_402C00
and     eax, 3          ; jumptable 00402C00 default case
sub     ecx, eax
jmp     dword ptr ds:loc_402C00+4[eax*4]

loc_402C00:             ; switch jump
jmp     ds:off_402D00[ecx*4]
align 4
adc     al, 2Ch
inc     eax
add     [eax], bh
sub     al, 40h
add     [eax+2Ch], ah
inc     eax
add     [edx-2EDCFCBAh], cl
mov     [edi+3], al
sub     esi, 1
shr     ecx, 2
sub     edi, 1
cmp     ecx, 8
jb      short loc_402BDC
std
rep movsd
cld
jmp     ds:off_402D00[edx*4] ; jumptable 00402C00 case 0
align 4
mov     al, [esi+3]
and     edx, ecx
mov     [edi+3], al
mov     al, [esi+2]
shr     ecx, 2
mov     [edi+2], al
sub     esi, 2
sub     edi, 2
cmp     ecx, 8
jb      short loc_402BDC
std
rep movsd
cld
jmp     ds:off_402D00[edx*4] ; jumptable 00402C00 case 0
align 10h
mov     al, [esi+3]
and     edx, ecx
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     al, [esi+1]
shr     ecx, 2
mov     [edi+1], al
sub     esi, 3
sub     edi, 3
cmp     ecx, 8
jb      loc_402BDC
std
rep movsd
cld
jmp     ds:off_402D00[edx*4] ; jumptable 00402C00 case 0
align 4
dd offset loc_402CB4
dd offset loc_402CBC
dd offset loc_402CC4
dd offset loc_402CCC
dd offset loc_402CD4
dd offset loc_402CDC
dd offset loc_402CE4
off_402CB0 dd offset loc_402CF7

loc_402CB4:
mov     eax, [esi+ecx*4+1Ch]
mov     [edi+ecx*4+1Ch], eax

loc_402CBC:
mov     eax, [esi+ecx*4+18h]
mov     [edi+ecx*4+18h], eax

loc_402CC4:
mov     eax, [esi+ecx*4+14h]
mov     [edi+ecx*4+14h], eax

loc_402CCC:
mov     eax, [esi+ecx*4+10h]
mov     [edi+ecx*4+10h], eax

loc_402CD4:
mov     eax, [esi+ecx*4+0Ch]
mov     [edi+ecx*4+0Ch], eax

loc_402CDC:
mov     eax, [esi+ecx*4+8]
mov     [edi+ecx*4+8], eax

loc_402CE4:
mov     eax, [esi+ecx*4+4]
mov     [edi+ecx*4+4], eax
lea     eax, ds:0[ecx*4]
add     esi, eax
add     edi, eax

loc_402CF7:             ; jumptable 00402C00 case 0
jmp     ds:off_402D00[edx*4]
align 10h
off_402D00 dd offset loc_402D10 ; jump table for switch statement
dd offset loc_402D18    ; jumptable 00402C00 case 1
dd offset loc_402D28    ; jumptable 00402C00 case 2
dd offset loc_402D3C    ; jumptable 00402C00 case 3

loc_402D10:             ; jumptable 00402C00 case 0
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402D18:             ; jumptable 00402C00 case 1
mov     al, [esi+3]
mov     [edi+3], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402D28:             ; jumptable 00402C00 case 2
mov     al, [esi+3]
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_402D3C:             ; jumptable 00402C00 case 3
mov     al, [esi+3]
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     al, [esi+1]
mov     [edi+1], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
sub_4029F0 endp



; Attributes: bp-based frame

public snprintf ; weak
snprintf proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
var_18= dword ptr -18h
var_14= dword ptr -14h
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= byte ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
xor     ebx, ebx
cmp     [ebp+arg_4], ebx
jnz     short loc_402D82

loc_402D65:
call    sub_404899
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     short loc_402DCF

loc_402D82:
mov     eax, [ebp+arg_0]
cmp     eax, ebx
jz      short loc_402D65
push    esi
mov     [ebp+var_18], eax
mov     [ebp+var_20], eax
lea     eax, [ebp+arg_8]
push    eax
push    ebx
push    [ebp+arg_4]
lea     eax, [ebp+var_20]
push    eax
mov     [ebp+var_1C], 7FFFFFFFh
mov     [ebp+var_14], 42h
call    sub_403B62
add     esp, 10h
dec     [ebp+var_1C]
mov     esi, eax
js      short loc_402DC0
mov     eax, [ebp+var_20]
mov     [eax], bl
jmp     short loc_402DCC

loc_402DC0:
lea     eax, [ebp+var_20]
push    eax
push    ebx
call    sub_403958
pop     ecx
pop     ecx

loc_402DCC:
mov     eax, esi
pop     esi

loc_402DCF:
pop     ebx
leave
retn
snprintf endp

align 10h



sub_402DE0 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch

mov     ecx, [esp+arg_8]
push    edi
test    ecx, ecx
jz      loc_402EA4
mov     edi, [esp+4+arg_0]
push    esi
test    edi, 3
push    ebx
jz      short loc_402E0C

loc_402DFB:
mov     al, [edi]
add     edi, 1
test    al, al
jz      short loc_402E3D
test    edi, 3
jnz     short loc_402DFB

loc_402E0C:
mov     eax, [edi]
mov     edx, 7EFEFEFFh
add     edx, eax
xor     eax, 0FFFFFFFFh
xor     eax, edx
add     edi, 4
test    eax, 81010100h
jz      short loc_402E0C
mov     eax, [edi-4]
test    al, al
jz      short loc_402E4C
test    ah, ah
jz      short loc_402E47
test    eax, 0FF0000h
jz      short loc_402E42
test    eax, 0FF000000h
jnz     short loc_402E0C

loc_402E3D:
sub     edi, 1
jmp     short loc_402E4F

loc_402E42:
sub     edi, 2
jmp     short loc_402E4F

loc_402E47:
sub     edi, 3
jmp     short loc_402E4F

loc_402E4C:
sub     edi, 4

loc_402E4F:
mov     esi, [esp+0Ch+arg_4]
test    esi, 3
jnz     short loc_402E64
mov     ebx, ecx
shr     ecx, 2
jnz     short loc_402EBE
jmp     short loc_402E86

loc_402E64:
mov     dl, [esi]
add     esi, 1
test    dl, dl
jz      short loc_402EAA
mov     [edi], dl
add     edi, 1
sub     ecx, 1
jz      short loc_402EA0
test    esi, 3
jnz     short loc_402E64
mov     ebx, ecx
shr     ecx, 2
jnz     short loc_402EBE

loc_402E86:
mov     ecx, ebx
and     ecx, 3
jz      short loc_402EA0

loc_402E8D:
mov     dl, [esi]
add     esi, 1
mov     [edi], dl
add     edi, 1
test    dl, dl
jz      short loc_402EA2
sub     ecx, 1
jnz     short loc_402E8D

loc_402EA0:
mov     [edi], cl

loc_402EA2:
pop     ebx
pop     esi

loc_402EA4:
mov     eax, [esp+4+arg_0]
pop     edi
retn

loc_402EAA:
mov     [edi], dl
mov     eax, [esp+0Ch+arg_0]
pop     ebx
pop     esi
pop     edi
retn

loc_402EB4:
mov     [edi], edx
add     edi, 4
sub     ecx, 1
jz      short loc_402E86

loc_402EBE:
mov     edx, 7EFEFEFFh
mov     eax, [esi]
add     edx, eax
xor     eax, 0FFFFFFFFh
xor     eax, edx
mov     edx, [esi]
add     esi, 4
test    eax, 81010100h
jz      short loc_402EB4
test    dl, dl
jz      short loc_402EAA
test    dh, dh
jz      short loc_402F0A
test    edx, 0FF0000h
jz      short loc_402EFA
test    edx, 0FF000000h
jnz     short loc_402EB4
mov     [edi], edx
mov     eax, [esp+0Ch+arg_0]
pop     ebx
pop     esi
pop     edi
retn

loc_402EFA:
mov     [edi], dx
xor     edx, edx
mov     eax, [esp+0Ch+arg_0]
mov     [edi+2], dl
pop     ebx
pop     esi
pop     edi
retn

loc_402F0A:
mov     [edi], dx
mov     eax, [esp+0Ch+arg_0]
pop     ebx
pop     esi
pop     edi
retn
sub_402DE0 endp

align 10h


; length -> eax
;

strlen_to_eax proc near

arg_0= dword ptr  4

mov     ecx, [esp+arg_0]
test    ecx, 3
jz      short loc_402F50

loc_402F2C:
mov     al, [ecx]
add     ecx, 1
test    al, al
jz      short loc_402F83
test    ecx, 3
jnz     short loc_402F2C
add     eax, 0
lea     esp, [esp+0]
lea     esp, [esp+0]

loc_402F50:
mov     eax, [ecx]
mov     edx, 7EFEFEFFh
add     edx, eax
xor     eax, 0FFFFFFFFh
xor     eax, edx
add     ecx, 4
test    eax, 81010100h
jz      short loc_402F50
mov     eax, [ecx-4]
test    al, al
jz      short loc_402FA1
test    ah, ah
jz      short loc_402F97
test    eax, 0FF0000h
jz      short loc_402F8D
test    eax, 0FF000000h
jz      short loc_402F83
jmp     short loc_402F50

loc_402F83:
lea     eax, [ecx-1]
mov     ecx, [esp+arg_0]
sub     eax, ecx
retn

loc_402F8D:
lea     eax, [ecx-2]
mov     ecx, [esp+arg_0]
sub     eax, ecx
retn

loc_402F97:
lea     eax, [ecx-3]
mov     ecx, [esp+arg_0]
sub     eax, ecx
retn

loc_402FA1:
lea     eax, [ecx-4]
mov     ecx, [esp+arg_0]
sub     eax, ecx
retn
strlen_to_eax endp

align 10h



sub_402FB0 proc near

arg_0= dword ptr  4
arg_4= byte ptr  8
arg_8= dword ptr  0Ch

mov     edx, [esp+arg_8]
mov     ecx, [esp+arg_0]
test    edx, edx
jz      short loc_403025
xor     eax, eax
mov     al, [esp+arg_4]
test    al, al
jnz     short loc_402FDC
cmp     edx, 100h
jb      short loc_402FDC
cmp     dword_425F24, 0
jz      short loc_402FDC
jmp     sub_404E36

loc_402FDC:
push    edi
mov     edi, ecx
cmp     edx, 4
jb      short loc_403015
neg     ecx
and     ecx, 3
jz      short loc_402FF7
sub     edx, ecx

loc_402FED:
mov     [edi], al
add     edi, 1
sub     ecx, 1
jnz     short loc_402FED

loc_402FF7:
mov     ecx, eax
shl     eax, 8
add     eax, ecx
mov     ecx, eax
shl     eax, 10h
add     eax, ecx
mov     ecx, edx
and     edx, 3
shr     ecx, 2
jz      short loc_403015
rep stosd
test    edx, edx
jz      short loc_40301F

loc_403015:
mov     [edi], al
add     edi, 1
sub     edx, 1
jnz     short loc_403015

loc_40301F:
mov     eax, [esp+4+arg_0]
pop     edi
retn

loc_403025:
mov     eax, [esp+arg_0]
retn
sub_402FB0 endp



; Attributes: bp-based frame

sub_40302A proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
xor     edi, edi
or      ebx, 0FFFFFFFFh
cmp     esi, edi
jnz     short loc_40305A
call    sub_404899
push    edi
push    edi
push    edi
push    edi
push    edi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
or      eax, ebx
jmp     short loc_40309C

loc_40305A:
test    byte ptr [esi+0Ch], 83h
jz      short loc_403097
push    esi
call    sub_40511F
push    esi
mov     ebx, eax
call    sub_4050EE
push    esi
call    sub_404EC5
push    eax
call    sub_405021
add     esp, 10h
test    eax, eax
jge     short loc_403086
or      ebx, 0FFFFFFFFh
jmp     short loc_403097

loc_403086:
mov     eax, [esi+1Ch]
cmp     eax, edi
jz      short loc_403097
push    eax             ; lpMem
call    sub_404EF7
pop     ecx
mov     [esi+1Ch], edi

loc_403097:
mov     [esi+0Ch], edi
mov     eax, ebx

loc_40309C:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_40302A endp



; Attributes: bp-based frame

sub_4030A1 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    0Ch
push    offset stru_40F5A0
call    __SEH_prolog4
or      [ebp+var_1C], 0FFFFFFFFh
xor     eax, eax
mov     esi, [ebp+arg_0]
xor     edi, edi
cmp     esi, edi
setnz   al
cmp     eax, edi
jnz     short loc_4030DE
call    sub_404899
mov     dword ptr [eax], 16h
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     short loc_4030EA

loc_4030DE:
test    byte ptr [esi+0Ch], 40h
jz      short loc_4030F0
mov     [esi+0Ch], edi

loc_4030E7:
mov     eax, [ebp+var_1C]

loc_4030EA:
call    __SEH_epilog4
retn

loc_4030F0:
push    esi
call    sub_4049B9
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
push    esi
call    sub_40302A
pop     ecx
mov     [ebp+var_1C], eax
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_403115

loc_403110:
jmp     short loc_4030E7

loc_403112:
mov     esi, [ebp+arg_0]

loc_403115:
push    esi
call    sub_404A2C
pop     ecx
retn
sub_4030A1 endp

align 10h



sub_403120 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     edx, [esp+arg_0]
mov     ecx, [esp+arg_4]
test    edx, 3
jnz     short loc_40316C

loc_403130:
mov     eax, [edx]
cmp     al, [ecx]
jnz     short loc_403164
or      al, al
jz      short loc_403160
cmp     ah, [ecx+1]
jnz     short loc_403164
or      ah, ah
jz      short loc_403160
shr     eax, 10h
cmp     al, [ecx+2]
jnz     short loc_403164
or      al, al
jz      short loc_403160
cmp     ah, [ecx+3]
jnz     short loc_403164
add     ecx, 4
add     edx, 4
or      ah, ah
jnz     short loc_403130
mov     edi, edi

loc_403160:
xor     eax, eax
retn
align 4

loc_403164:
sbb     eax, eax
shl     eax, 1
add     eax, 1
retn

loc_40316C:
test    edx, 1
jz      short loc_40318C
mov     al, [edx]
add     edx, 1
cmp     al, [ecx]
jnz     short loc_403164
add     ecx, 1
or      al, al
jz      short loc_403160
test    edx, 2
jz      short loc_403130

loc_40318C:
mov     ax, [edx]
add     edx, 2
cmp     al, [ecx]
jnz     short loc_403164
or      al, al
jz      short loc_403160
cmp     ah, [ecx+1]
jnz     short loc_403164
or      ah, ah
jz      short loc_403160
add     ecx, 2
jmp     short loc_403130
sub_403120 endp



; Attributes: bp-based frame

sub_4031A8 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     byte ptr [esi+0Ch], 0
test    eax, eax
jnz     short loc_40321E
call    sub_405F81
mov     [esi+8], eax
mov     ecx, [eax+6Ch]
mov     [esi], ecx
mov     ecx, [eax+68h]
mov     [esi+4], ecx
mov     ecx, [esi]
cmp     ecx, off_411B10
jz      short loc_4031EA
mov     ecx, dword_411A2C
test    [eax+70h], ecx
jnz     short loc_4031EA
call    sub_405C44
mov     [esi], eax

loc_4031EA:
mov     eax, [esi+4]
cmp     eax, lpAddend
jz      short loc_40320B
mov     eax, [esi+8]
mov     ecx, dword_411A2C
test    [eax+70h], ecx
jnz     short loc_40320B
call    sub_4054D8
mov     [esi+4], eax

loc_40320B:
mov     eax, [esi+8]
test    byte ptr [eax+70h], 2
jnz     short loc_403228
or      dword ptr [eax+70h], 2
mov     byte ptr [esi+0Ch], 1
jmp     short loc_403228

loc_40321E:
mov     ecx, [eax]
mov     [esi], ecx
mov     eax, [eax+4]
mov     [esi+4], eax

loc_403228:
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_4031A8 endp



; Attributes: bp-based frame

sub_40322F proc near

var_18= dword ptr -18h
var_10= dword ptr -10h
var_C= byte ptr -0Ch
DestStr= word ptr -8
MultiByteStr= byte ptr -4
var_3= byte ptr -3
var_2= byte ptr -2
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    [ebp+arg_4]
lea     ecx, [ebp+var_18]
call    sub_4031A8
mov     ebx, [ebp+arg_0]
cmp     ebx, 100h
jnb     short loc_4032A2
mov     ecx, [ebp+var_18]
cmp     dword ptr [ecx+0ACh], 1
jle     short loc_40326E
lea     eax, [ebp+var_18]
push    eax
push    2
push    ebx
call    sub_4066AC
mov     ecx, [ebp+var_18]
add     esp, 0Ch
jmp     short loc_40327B

loc_40326E:
mov     eax, [ecx+0C8h]
movzx   eax, word ptr [eax+ebx*2]
and     eax, 2

loc_40327B:
test    eax, eax
jz      short loc_40328E
mov     eax, [ecx+0D0h]
movzx   eax, byte ptr [eax+ebx]
jmp     loc_403335

loc_40328E:
cmp     [ebp+var_C], 0
jz      short loc_40329B
mov     eax, [ebp+var_10]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40329B:
mov     eax, ebx
jmp     loc_403342

loc_4032A2:
mov     eax, [ebp+var_18]
cmp     dword ptr [eax+0ACh], 1
jle     short loc_4032DF
mov     [ebp+arg_0], ebx
sar     [ebp+arg_0], 8
lea     eax, [ebp+var_18]
push    eax
mov     eax, [ebp+arg_0]
and     eax, 0FFh
push    eax
call    sub_406661
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_4032DF
mov     al, byte ptr [ebp+arg_0]
push    2
mov     [ebp+MultiByteStr], al
mov     [ebp+var_3], bl
mov     [ebp+var_2], 0
pop     ecx
jmp     short loc_4032F4

loc_4032DF:
call    sub_404899
mov     dword ptr [eax], 2Ah
xor     ecx, ecx
mov     [ebp+MultiByteStr], bl
mov     [ebp+var_3], 0
inc     ecx

loc_4032F4:
mov     eax, [ebp+var_18]
push    1               ; int
push    dword ptr [eax+4] ; CodePage
lea     edx, [ebp+DestStr]
push    3               ; cchDest
push    edx             ; lpDestStr
push    ecx             ; cbMultiByte
lea     ecx, [ebp+MultiByteStr]
push    ecx             ; lpMultiByteStr
push    200h            ; dwMapFlags
push    dword ptr [eax+14h] ; Locale
lea     eax, [ebp+var_18]
push    eax             ; int
call    sub_40661C
add     esp, 24h
test    eax, eax
jz      loc_40328E
cmp     eax, 1
movzx   eax, byte ptr [ebp+DestStr]
jz      short loc_403335
movzx   ecx, byte ptr [ebp+DestStr+1]
shl     eax, 8
or      eax, ecx

loc_403335:
cmp     [ebp+var_C], 0
jz      short loc_403342
mov     ecx, [ebp+var_10]
and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_403342:
pop     ebx
leave
retn
sub_40322F endp



; Attributes: bp-based frame

sub_403345 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
cmp     dword_4246A8, 0
jnz     short loc_403363
mov     eax, [ebp+arg_0]
lea     ecx, [eax-61h]
cmp     ecx, 19h
ja      short loc_40336F
add     eax, 0FFFFFFE0h
pop     ebp
retn

loc_403363:
push    0
push    [ebp+arg_0]
call    sub_40322F
pop     ecx
pop     ecx

loc_40336F:
pop     ebp
retn
sub_403345 endp

align 10h
push    edi
mov     edi, [esp+8]
jmp     short loc_4033F5
align 10h



sub_403390 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     ecx, [esp+arg_0]
push    edi
test    ecx, 3
jz      short loc_4033B0

loc_40339D:
mov     al, [ecx]
add     ecx, 1
test    al, al
jz      short loc_4033E3
test    ecx, 3
jnz     short loc_40339D
mov     edi, edi

loc_4033B0:
mov     eax, [ecx]
mov     edx, 7EFEFEFFh
add     edx, eax
xor     eax, 0FFFFFFFFh
xor     eax, edx
add     ecx, 4
test    eax, 81010100h
jz      short loc_4033B0
mov     eax, [ecx-4]
test    al, al
jz      short loc_4033F2
test    ah, ah
jz      short loc_4033ED
test    eax, 0FF0000h
jz      short loc_4033E8
test    eax, 0FF000000h
jz      short loc_4033E3
jmp     short loc_4033B0

loc_4033E3:
lea     edi, [ecx-1]
jmp     short loc_4033F5

loc_4033E8:
lea     edi, [ecx-2]
jmp     short loc_4033F5

loc_4033ED:
lea     edi, [ecx-3]
jmp     short loc_4033F5

loc_4033F2:
lea     edi, [ecx-4]

loc_4033F5:
mov     ecx, [esp+4+arg_4]
test    ecx, 3
jz      short loc_40341E

loc_403401:
mov     dl, [ecx]
add     ecx, 1
test    dl, dl
jz      short loc_403470
mov     [edi], dl
add     edi, 1
test    ecx, 3
jnz     short loc_403401
jmp     short loc_40341E

loc_403419:
mov     [edi], edx
add     edi, 4

loc_40341E:
mov     edx, 7EFEFEFFh
mov     eax, [ecx]
add     edx, eax
xor     eax, 0FFFFFFFFh
xor     eax, edx
mov     edx, [ecx]
add     ecx, 4
test    eax, 81010100h
jz      short loc_403419
test    dl, dl
jz      short loc_403470
test    dh, dh
jz      short loc_403467
test    edx, 0FF0000h
jz      short loc_40345A
test    edx, 0FF000000h
jz      short loc_403452
jmp     short loc_403419

loc_403452:
mov     [edi], edx
mov     eax, [esp+4+arg_0]
pop     edi
retn

loc_40345A:
mov     [edi], dx
mov     eax, [esp+4+arg_0]
mov     byte ptr [edi+2], 0
pop     edi
retn

loc_403467:
mov     [edi], dx
mov     eax, [esp+4+arg_0]
pop     edi
retn

loc_403470:
mov     [edi], dl
mov     eax, [esp+4+arg_0]
pop     edi
retn
sub_403390 endp



; Attributes: noreturn bp-based frame

sub_403478 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
cmp     dword_424358, 1
jnz     short loc_40348B
call    sub_406C97

loc_40348B:
push    [ebp+arg_0]
call    sub_406AEC
push    0FFh            ; uExitCode
call    sub_406838
sub_403478 endp

db  59h ; Y
db  59h ; Y
db  5Dh ; ]
db 0C3h ; Ã
; START OF FUNCTION CHUNK FOR start

loc_4034A1:
push    58h
push    offset unk_40F5C0
call    __SEH_prolog4
xor     esi, esi
mov     [ebp-4], esi
lea     eax, [ebp-68h]
push    eax             ; lpStartupInfo
call    ds:GetStartupInfoA
push    0FFFFFFFEh
pop     edi
mov     [ebp-4], edi
mov     eax, 5A4Dh
cmp     ds:400000h, ax
jnz     short loc_403508
mov     eax, ds:40003Ch
cmp     dword ptr [eax+400000h], 4550h
jnz     short loc_403508
mov     ecx, 10Bh
cmp     [eax+400018h], cx
jnz     short loc_403508
cmp     dword ptr [eax+400074h], 0Eh
jbe     short loc_403508
xor     ecx, ecx
cmp     [eax+4000E8h], esi
setnz   cl
mov     [ebp-1Ch], ecx
jmp     short loc_40350B

loc_403508:
mov     [ebp-1Ch], esi

loc_40350B:
xor     ebx, ebx
inc     ebx
push    ebx
call    sub_40759A
pop     ecx
test    eax, eax
jnz     short loc_403521
push    1Ch
call    sub_403478
; END OF FUNCTION CHUNK FOR start
pop     ecx
; START OF FUNCTION CHUNK FOR start

loc_403521:
call    sub_4060CA
test    eax, eax
jnz     short loc_403532
push    10h
call    sub_403478
; END OF FUNCTION CHUNK FOR start
pop     ecx
; START OF FUNCTION CHUNK FOR start

loc_403532:
call    sub_40754E
mov     [ebp-4], ebx
call    sub_4072FA
test    eax, eax
jge     short loc_40354B
push    1Bh
call    sub_4067E4
pop     ecx

loc_40354B:
call    ds:GetCommandLineA
mov     dword_425F28, eax
call    sub_4071C3
mov     dword_424350, eax
call    sub_407108
test    eax, eax
jge     short loc_403571
push    8
call    sub_4067E4
pop     ecx

loc_403571:
call    sub_406E90
test    eax, eax
jge     short loc_403582
push    9
call    sub_4067E4
pop     ecx

loc_403582:
push    ebx
call    sub_4068A3
pop     ecx
cmp     eax, esi
jz      short loc_403594
push    eax
call    sub_4067E4
pop     ecx

loc_403594:
call    sub_406E31
test    [ebp-3Ch], bl
jz      short loc_4035A4
movzx   ecx, word ptr [ebp-38h]
jmp     short loc_4035A7

loc_4035A4:
push    0Ah
pop     ecx

loc_4035A7:             ; int
push    ecx
push    eax             ; int
push    esi             ; int
push    400000h         ; hInstance
call    sub_40BE40
mov     [ebp-20h], eax
cmp     [ebp-1Ch], esi
jnz     short loc_4035C2
push    eax             ; uExitCode
call    sub_406A54

loc_4035C2:
call    sub_406A80
mov     [ebp-4], edi
jmp     short loc_403601
; END OF FUNCTION CHUNK FOR start
mov     eax, [ebp-14h]
mov     ecx, [eax]
mov     ecx, [ecx]
mov     [ebp-24h], ecx
push    eax
push    ecx
call    sub_406CD1
pop     ecx
pop     ecx
retn
mov     esp, [ebp-18h]
mov     eax, [ebp-24h]
mov     [ebp-20h], eax
cmp     dword ptr [ebp-1Ch], 0
jnz     short loc_4035F5
push    eax
call    sub_406A6A

loc_4035F5:
call    sub_406A8F
mov     dword ptr [ebp-4], 0FFFFFFFEh
; START OF FUNCTION CHUNK FOR start

loc_403601:
mov     eax, [ebp-20h]
jmp     short loc_403619
; END OF FUNCTION CHUNK FOR start
xor     eax, eax
inc     eax
retn
mov     esp, [ebp-18h]
mov     dword ptr [ebp-4], 0FFFFFFFEh
mov     eax, 0FFh
; START OF FUNCTION CHUNK FOR start

loc_403619:
call    __SEH_epilog4
retn
; END OF FUNCTION CHUNK FOR start



public start
start proc near

; FUNCTION CHUNK AT 004034A1 SIZE 0000007F BYTES
; FUNCTION CHUNK AT 00403521 SIZE 00000010 BYTES
; FUNCTION CHUNK AT 00403532 SIZE 0000009A BYTES
; FUNCTION CHUNK AT 00403601 SIZE 00000005 BYTES
; FUNCTION CHUNK AT 00403619 SIZE 00000006 BYTES

call    sub_4075CA
jmp     loc_4034A1
start endp ; sp-analysis failed



; Attributes: bp-based frame

sub_403629 proc near

var_328= dword ptr -328h
var_324= dword ptr -324h
var_320= dword ptr -320h
var_s0= dword ptr  0
arg_0= byte ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 328h
mov     dword_424468, eax
mov     dword_424464, ecx
mov     dword_424460, edx
mov     dword_42445C, ebx
mov     dword_424458, esi
mov     dword_424454, edi
mov     word_424480, ss
mov     word_424474, cs
mov     word_424450, ds
mov     word_42444C, es
mov     word_424448, fs
mov     word_424444, gs
pushf
pop     dword_424478
mov     eax, [ebp+var_s0]
mov     dword_42446C, eax
mov     eax, [ebp+4]
mov     dword_424470, eax
lea     eax, [ebp+arg_0]
mov     dword_42447C, eax
mov     eax, [ebp+var_320]
mov     dword_4243B8, 10001h
mov     eax, dword_424470
mov     dword_42436C, eax
mov     dword_424360, 0C0000409h
mov     dword_424364, 1
mov     eax, dword_411004
mov     [ebp+var_328], eax
mov     eax, dword_411008
mov     [ebp+var_324], eax
call    ds:IsDebuggerPresent
mov     dword_4243B0, eax
push    1
call    sub_407660
pop     ecx
push    0               ; lpTopLevelExceptionFilter
call    ds:SetUnhandledExceptionFilter
push    offset ExceptionInfo ; ExceptionInfo
call    ds:UnhandledExceptionFilter
cmp     dword_4243B0, 0
jnz     short loc_40371B
push    1
call    sub_407660
pop     ecx

loc_40371B:             ; uExitCode
push    0C0000409h
call    ds:GetCurrentProcess
push    eax             ; hProcess
call    ds:TerminateProcess
leave
retn
sub_403629 endp



; Attributes: bp-based frame

sub_40372F proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_4], edi
mov     [ebp+var_8], esi
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
shr     ecx, 7
jmp     short loc_40374F
db 8Dh, 9Bh, 4 dup(0)

loc_40374F:
movdqa  xmm0, xmmword ptr [esi]
movdqa  xmm1, xmmword ptr [esi+10h]
movdqa  xmm2, xmmword ptr [esi+20h]
movdqa  xmm3, xmmword ptr [esi+30h]
movdqa  xmmword ptr [edi], xmm0
movdqa  xmmword ptr [edi+10h], xmm1
movdqa  xmmword ptr [edi+20h], xmm2
movdqa  xmmword ptr [edi+30h], xmm3
movdqa  xmm4, xmmword ptr [esi+40h]
movdqa  xmm5, xmmword ptr [esi+50h]
movdqa  xmm6, xmmword ptr [esi+60h]
movdqa  xmm7, xmmword ptr [esi+70h]
movdqa  xmmword ptr [edi+40h], xmm4
movdqa  xmmword ptr [edi+50h], xmm5
movdqa  xmmword ptr [edi+60h], xmm6
movdqa  xmmword ptr [edi+70h], xmm7
lea     esi, [esi+80h]
lea     edi, [edi+80h]
dec     ecx
jnz     short loc_40374F
mov     esi, [ebp+var_8]
mov     edi, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
sub_40372F endp



; Attributes: bp-based frame

sub_4037B6 proc near

var_1C= dword ptr -1Ch
var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 1Ch
mov     [ebp+var_C], edi
mov     [ebp+var_8], esi
mov     [ebp+var_4], ebx
mov     ebx, [ebp+arg_4]
mov     eax, ebx
cdq
mov     ecx, eax
mov     eax, [ebp+arg_0]
xor     ecx, edx
sub     ecx, edx
and     ecx, 0Fh
xor     ecx, edx
sub     ecx, edx
cdq
mov     edi, eax
xor     edi, edx
sub     edi, edx
and     edi, 0Fh
xor     edi, edx
sub     edi, edx
mov     edx, ecx
or      edx, edi
jnz     short loc_403839
mov     esi, [ebp+arg_8]
mov     ecx, esi
and     ecx, 7Fh
mov     [ebp+var_18], ecx
cmp     esi, ecx
jz      short loc_403811
sub     esi, ecx
push    esi
push    ebx
push    eax
call    sub_40372F
add     esp, 0Ch
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_18]

loc_403811:
test    ecx, ecx
jz      short loc_40388C
mov     ebx, [ebp+arg_8]
mov     edx, [ebp+arg_4]
add     edx, ebx
sub     edx, ecx
mov     [ebp+var_14], edx
add     ebx, eax
sub     ebx, ecx
mov     [ebp+var_10], ebx
mov     esi, [ebp+var_14]
mov     edi, [ebp+var_10]
mov     ecx, [ebp+var_18]
rep movsb
mov     eax, [ebp+arg_0]
jmp     short loc_40388C

loc_403839:
cmp     ecx, edi
jnz     short loc_403872
neg     ecx
add     ecx, 10h
mov     [ebp+var_1C], ecx
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+var_1C]
rep movsb
mov     ecx, [ebp+arg_0]
add     ecx, [ebp+var_1C]
mov     edx, [ebp+arg_4]
add     edx, [ebp+var_1C]
mov     eax, [ebp+arg_8]
sub     eax, [ebp+var_1C]
push    eax
push    edx
push    ecx
call    sub_4037B6
add     esp, 0Ch
mov     eax, [ebp+arg_0]
jmp     short loc_40388C

loc_403872:
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+arg_8]
mov     edx, ecx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [ebp+arg_0]

loc_40388C:
mov     ebx, [ebp+var_4]
mov     esi, [ebp+var_8]
mov     edi, [ebp+var_C]
mov     esp, ebp
pop     ebp
retn
sub_4037B6 endp



; Attributes: bp-based frame

sub_403899 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    0Ch
push    offset stru_40F5E8
call    __SEH_prolog4
and     [ebp+ms_exc.registration.TryLevel], 0
movapd  xmm0, xmm1
mov     [ebp+var_1C], 1
jmp     short loc_4038D9

loc_4038B6:
mov     eax, [ebp+ms_exc.exc_ptr]
mov     eax, [eax]
mov     eax, [eax]
cmp     eax, 0C0000005h
jz      short loc_4038CE
cmp     eax, 0C000001Dh
jz      short loc_4038CE
xor     eax, eax
retn

loc_4038CE:
xor     eax, eax
inc     eax
retn

loc_4038D2:
mov     esp, [ebp+ms_exc.old_esp]
and     [ebp+var_1C], 0

loc_4038D9:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn
sub_403899 endp



; Attributes: bp-based frame

sub_4038E9 proc near

var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
xor     eax, eax
push    ebx
mov     [ebp+var_4], eax
mov     [ebp+var_C], eax
mov     [ebp+var_8], eax
push    ebx
pushf
pop     eax
mov     ecx, eax
xor     eax, 200000h
push    eax
popf
pushf
pop     edx
sub     edx, ecx
jz      short loc_40392E
push    ecx
popf
xor     eax, eax
cpuid
mov     [ebp+var_C], eax
mov     [ebp+var_18], ebx
mov     [ebp+var_14], edx
mov     [ebp+var_10], ecx
mov     eax, 1
cpuid
mov     [ebp+var_4], edx
mov     [ebp+var_8], eax

loc_40392E:
pop     ebx
test    [ebp+var_4], 4000000h
jz      short loc_403946
call    sub_403899
test    eax, eax
jz      short loc_403946
xor     eax, eax
inc     eax
jmp     short loc_403948

loc_403946:
xor     eax, eax

loc_403948:
pop     ebx
leave
retn
sub_4038E9 endp

call    sub_4038E9
mov     dword_425F24, eax
xor     eax, eax
retn


; Attributes: bp-based frame

sub_403958 proc near

var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_4]
push    esi
call    sub_404EC5
mov     [ebp+arg_4], eax
mov     eax, [esi+0Ch]
pop     ecx
test    al, 82h
jnz     short loc_40398A
call    sub_404899
mov     dword ptr [eax], 9

loc_40397E:
or      dword ptr [esi+0Ch], 20h
or      eax, 0FFFFFFFFh
jmp     loc_403AB9

loc_40398A:
test    al, 40h
jz      short loc_40399B
call    sub_404899
mov     dword ptr [eax], 22h
jmp     short loc_40397E

loc_40399B:
push    ebx
xor     ebx, ebx
test    al, 1
jz      short loc_4039B8
mov     [esi+4], ebx
test    al, 10h
jz      loc_403A34
mov     ecx, [esi+8]
and     eax, 0FFFFFFFEh
mov     [esi], ecx
mov     [esi+0Ch], eax

loc_4039B8:
mov     eax, [esi+0Ch]
and     eax, 0FFFFFFEFh
or      eax, 2
mov     [esi+0Ch], eax
mov     [esi+4], ebx
mov     [ebp+var_4], ebx
test    eax, 10Ch
jnz     short loc_4039FD
call    sub_4048E2
add     eax, 20h
cmp     esi, eax
jz      short loc_4039E9
call    sub_4048E2
add     eax, 40h
cmp     esi, eax
jnz     short loc_4039F6

loc_4039E9:
push    [ebp+arg_4]
call    sub_40805E
pop     ecx
test    eax, eax
jnz     short loc_4039FD

loc_4039F6:
push    esi
call    sub_408015
pop     ecx

loc_4039FD:
test    dword ptr [esi+0Ch], 108h
push    edi
jz      loc_403A8B
mov     eax, [esi+8]
mov     edi, [esi]
lea     ecx, [eax+1]
mov     [esi], ecx
mov     ecx, [esi+18h]
sub     edi, eax
dec     ecx
cmp     edi, ebx
mov     [esi+4], ecx
jle     short loc_403A3F
push    edi             ; nNumberOfBytesToWrite
push    eax             ; int
push    [ebp+arg_4]     ; int
call    sub_407F39
add     esp, 0Ch
mov     [ebp+var_4], eax
jmp     short loc_403A81

loc_403A34:
or      eax, 20h
mov     [esi+0Ch], eax
or      eax, 0FFFFFFFFh
jmp     short loc_403AB8

loc_403A3F:
mov     ecx, [ebp+arg_4]
cmp     ecx, 0FFFFFFFFh
jz      short loc_403A62
cmp     ecx, 0FFFFFFFEh
jz      short loc_403A62
mov     eax, ecx
and     eax, 1Fh
mov     edx, ecx
sar     edx, 5
shl     eax, 6
add     eax, dword_424E00[edx*4]
jmp     short loc_403A67

loc_403A62:
mov     eax, offset unk_411C70

loc_403A67:
test    byte ptr [eax+4], 20h
jz      short loc_403A81
push    2               ; dwMoveMethod
push    ebx             ; int
push    ebx             ; int
push    ecx             ; int
call    sub_4076ED
and     eax, edx
add     esp, 10h
cmp     eax, 0FFFFFFFFh
jz      short loc_403AA6

loc_403A81:
mov     eax, [esi+8]
mov     cl, byte ptr [ebp+arg_0]
mov     [eax], cl
jmp     short loc_403AA1

loc_403A8B:
xor     edi, edi
inc     edi
push    edi             ; nNumberOfBytesToWrite
lea     eax, [ebp+arg_0]
push    eax             ; int
push    [ebp+arg_4]     ; int
call    sub_407F39
add     esp, 0Ch
mov     [ebp+var_4], eax

loc_403AA1:
cmp     [ebp+var_4], edi
jz      short loc_403AAF

loc_403AA6:
or      dword ptr [esi+0Ch], 20h
or      eax, 0FFFFFFFFh
jmp     short loc_403AB7

loc_403AAF:
mov     eax, [ebp+arg_0]
and     eax, 0FFh

loc_403AB7:
pop     edi

loc_403AB8:
pop     ebx

loc_403AB9:
pop     esi
leave
retn
sub_403958 endp




sub_403ABC proc near
test    byte ptr [ecx+0Ch], 40h
jz      short loc_403AC8
cmp     dword ptr [ecx+8], 0
jz      short loc_403AEC

loc_403AC8:
dec     dword ptr [ecx+4]
js      short loc_403AD8
mov     edx, [ecx]
mov     [edx], al
inc     dword ptr [ecx]
movzx   eax, al
jmp     short loc_403AE4

loc_403AD8:
movsx   eax, al
push    ecx
push    eax
call    sub_403958
pop     ecx
pop     ecx

loc_403AE4:
cmp     eax, 0FFFFFFFFh
jnz     short loc_403AEC
or      [esi], eax
retn

loc_403AEC:
inc     dword ptr [esi]
retn
sub_403ABC endp



; Attributes: bp-based frame

sub_403AEF proc near

arg_0= byte ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, eax
jmp     short loc_403B0C

loc_403AF9:
mov     ecx, [ebp+arg_8]
mov     al, [ebp+arg_0]
dec     [ebp+arg_4]
call    sub_403ABC
cmp     dword ptr [esi], 0FFFFFFFFh
jz      short loc_403B12

loc_403B0C:
cmp     [ebp+arg_4], 0
jg      short loc_403AF9

loc_403B12:
pop     esi
pop     ebp
retn
sub_403AEF endp



; Attributes: bp-based frame

sub_403B15 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
test    byte ptr [edi+0Ch], 40h
push    ebx
push    esi
mov     esi, eax
mov     ebx, ecx
jz      short loc_403B58
cmp     dword ptr [edi+8], 0
jnz     short loc_403B58
mov     eax, [ebp+arg_0]
add     [esi], eax
jmp     short loc_403B5E

loc_403B33:
mov     al, [ebx]
dec     [ebp+arg_0]
mov     ecx, edi
call    sub_403ABC
inc     ebx
cmp     dword ptr [esi], 0FFFFFFFFh
jnz     short loc_403B58
call    sub_404899
cmp     dword ptr [eax], 2Ah
jnz     short loc_403B5E
mov     ecx, edi
mov     al, 3Fh
call    sub_403ABC

loc_403B58:
cmp     [ebp+arg_0], 0
jg      short loc_403B33

loc_403B5E:
pop     esi
pop     ebx
pop     ebp
retn
sub_403B15 endp



; Attributes: bp-based frame

sub_403B62 proc near

var_278= dword ptr -278h
var_274= dword ptr -274h
var_270= dword ptr -270h
var_26C= dword ptr -26Ch
var_268= dword ptr -268h
var_260= dword ptr -260h
var_25C= byte ptr -25Ch
var_254= dword ptr -254h
var_250= byte ptr -250h
var_24C= dword ptr -24Ch
var_248= dword ptr -248h
lpMem= dword ptr -244h
var_240= dword ptr -240h
var_23C= dword ptr -23Ch
var_238= dword ptr -238h
var_234= dword ptr -234h
var_230= dword ptr -230h
var_22C= byte ptr -22Ch
var_22B= byte ptr -22Bh
var_228= dword ptr -228h
var_224= dword ptr -224h
var_220= dword ptr -220h
var_21C= dword ptr -21Ch
var_218= dword ptr -218h
var_211= byte ptr -211h
var_210= dword ptr -210h
MultiByteStr= byte ptr -20Ch
var_D= byte ptr -0Dh
var_C= byte ptr -0Ch
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 278h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
push    edi
mov     edi, [ebp+arg_C]
push    [ebp+arg_8]
lea     ecx, [ebp+var_25C]
mov     [ebp+var_24C], esi
mov     [ebp+var_224], edi
mov     [ebp+var_248], eax
mov     [ebp+var_210], eax
mov     [ebp+var_234], eax
mov     [ebp+var_218], eax
mov     [ebp+var_230], eax
mov     [ebp+var_240], eax
mov     [ebp+var_238], eax
call    sub_4031A8
test    esi, esi
jnz     short loc_403C02

loc_403BCD:
call    sub_404899
mov     dword ptr [eax], 16h
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    sub_404831
add     esp, 14h
cmp     [ebp+var_250], 0
jz      short loc_403BFA
mov     eax, [ebp+var_254]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_403BFA:
or      eax, 0FFFFFFFFh
jmp     loc_4046CA

loc_403C02:
test    byte ptr [esi+0Ch], 40h
jnz     short loc_403C66
push    esi
call    sub_404EC5
pop     ecx
mov     edx, offset unk_411C70
cmp     eax, 0FFFFFFFFh
jz      short loc_403C34
cmp     eax, 0FFFFFFFEh
jz      short loc_403C34
mov     ecx, eax
and     ecx, 1Fh
mov     esi, eax
sar     esi, 5
shl     ecx, 6
add     ecx, dword_424E00[esi*4]
jmp     short loc_403C36

loc_403C34:
mov     ecx, edx

loc_403C36:
test    byte ptr [ecx+24h], 7Fh
jnz     short loc_403BCD
cmp     eax, 0FFFFFFFFh
jz      short loc_403C5A
cmp     eax, 0FFFFFFFEh
jz      short loc_403C5A
mov     ecx, eax
and     eax, 1Fh
sar     ecx, 5
shl     eax, 6
add     eax, dword_424E00[ecx*4]
jmp     short loc_403C5C

loc_403C5A:
mov     eax, edx

loc_403C5C:
test    byte ptr [eax+24h], 80h
jnz     loc_403BCD

loc_403C66:
xor     ecx, ecx
cmp     ebx, ecx
jz      loc_403BCD
mov     dl, [ebx]
mov     [ebp+var_228], ecx
mov     [ebp+var_220], ecx
mov     [ebp+lpMem], ecx
mov     [ebp+var_211], dl
test    dl, dl
jz      loc_4046B1

loc_403C92:
inc     ebx
cmp     [ebp+var_228], 0
mov     [ebp+var_23C], ebx
jl      loc_4046B1
mov     al, dl
sub     al, 20h
cmp     al, 58h
ja      short loc_403CBF
movsx   eax, dl
movsx   eax, byte ptr ds:ExceptionInfo.ExceptionRecord[eax]
and     eax, 0Fh
xor     esi, esi
jmp     short loc_403CC3

loc_403CBF:
xor     esi, esi
xor     eax, eax

loc_403CC3:
movsx   eax, ds:byte_40E1F0[ecx+eax*8]
push    7
sar     eax, 4
pop     ecx
mov     [ebp+var_26C], eax
cmp     eax, ecx        ; switch 8 cases
ja      loc_40468C      ; jumptable 00403CDF default case
jmp     ds:off_4046DA[eax*4] ; switch jump

loc_403CE6:             ; jumptable 00403CDF case 1
or      [ebp+var_218], 0FFFFFFFFh
mov     [ebp+var_270], esi
mov     [ebp+var_240], esi
mov     [ebp+var_234], esi
mov     [ebp+var_230], esi
mov     [ebp+var_210], esi
mov     [ebp+var_238], esi
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D16:             ; jumptable 00403CDF case 2
movsx   eax, dl
sub     eax, 20h
jz      short loc_403D68
sub     eax, 3
jz      short loc_403D59
sub     eax, 8
jz      short loc_403D4D
dec     eax
dec     eax
jz      short loc_403D41
sub     eax, 3
jnz     loc_40468C      ; jumptable 00403CDF default case
or      [ebp+var_210], 8
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D41:
or      [ebp+var_210], 4
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D4D:
or      [ebp+var_210], 1
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D59:
or      [ebp+var_210], 80h
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D68:
or      [ebp+var_210], 2
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403D74:             ; jumptable 00403CDF case 3
cmp     dl, 2Ah
jnz     short loc_403DA5
add     edi, 4
mov     [ebp+var_224], edi
mov     edi, [edi-4]
cmp     edi, esi
mov     [ebp+var_234], edi
jge     loc_40468C      ; jumptable 00403CDF default case
or      [ebp+var_210], 4
neg     [ebp+var_234]
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403DA5:
mov     eax, [ebp+var_234]
imul    eax, 0Ah
movsx   ecx, dl
lea     eax, [eax+ecx-30h]
mov     [ebp+var_234], eax
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403DC0:             ; jumptable 00403CDF case 4
mov     [ebp+var_218], esi
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403DCB:             ; jumptable 00403CDF case 5
cmp     dl, 2Ah
jnz     short loc_403DF6
add     edi, 4
mov     [ebp+var_224], edi
mov     edi, [edi-4]
cmp     edi, esi
mov     [ebp+var_218], edi
jge     loc_40468C      ; jumptable 00403CDF default case
or      [ebp+var_218], 0FFFFFFFFh
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403DF6:
mov     eax, [ebp+var_218]
imul    eax, 0Ah
movsx   ecx, dl
lea     eax, [eax+ecx-30h]
mov     [ebp+var_218], eax
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E11:             ; jumptable 00403CDF case 6
cmp     dl, 49h
jz      short loc_403E6B
cmp     dl, 68h
jz      short loc_403E5F
cmp     dl, 6Ch
jz      short loc_403E38
cmp     dl, 77h
jnz     loc_40468C      ; jumptable 00403CDF default case
or      [ebp+var_210], 800h
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E38:
cmp     byte ptr [ebx], 6Ch
jnz     short loc_403E53
inc     ebx
or      [ebp+var_210], 1000h
mov     [ebp+var_23C], ebx
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E53:
or      [ebp+var_210], 10h
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E5F:
or      [ebp+var_210], 20h
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E6B:
mov     al, [ebx]
cmp     al, 36h
jnz     short loc_403E8E
cmp     byte ptr [ebx+1], 34h
jnz     short loc_403E8E
inc     ebx
inc     ebx
or      [ebp+var_210], 8000h
mov     [ebp+var_23C], ebx
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403E8E:
cmp     al, 33h
jnz     short loc_403EAF
cmp     byte ptr [ebx+1], 32h
jnz     short loc_403EAF
inc     ebx
inc     ebx
and     [ebp+var_210], 0FFFF7FFFh
mov     [ebp+var_23C], ebx
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403EAF:
cmp     al, 64h
jz      loc_40468C      ; jumptable 00403CDF default case
cmp     al, 69h
jz      loc_40468C      ; jumptable 00403CDF default case
cmp     al, 6Fh
jz      loc_40468C      ; jumptable 00403CDF default case
cmp     al, 75h
jz      loc_40468C      ; jumptable 00403CDF default case
cmp     al, 78h
jz      loc_40468C      ; jumptable 00403CDF default case
cmp     al, 58h
jz      loc_40468C      ; jumptable 00403CDF default case
mov     [ebp+var_26C], esi

loc_403EE5:             ; jumptable 00403CDF case 0
lea     eax, [ebp+var_25C]
push    eax
movzx   eax, dl
push    eax
mov     [ebp+var_238], esi
call    sub_406661
pop     ecx
test    eax, eax
mov     al, [ebp+var_211]
pop     ecx
jz      short loc_403F29
mov     ecx, [ebp+var_24C]
lea     esi, [ebp+var_228]
call    sub_403ABC
mov     al, [ebx]
inc     ebx
mov     [ebp+var_23C], ebx
test    al, al
jz      loc_403BCD

loc_403F29:
mov     ecx, [ebp+var_24C]
lea     esi, [ebp+var_228]
call    sub_403ABC
jmp     loc_40468C      ; jumptable 00403CDF default case

loc_403F3F:             ; jumptable 00403CDF case 7
movsx   eax, dl
cmp     eax, 64h
jg      loc_404133
jz      loc_4041CA
cmp     eax, 53h
jg      loc_40404C
jz      loc_403FE0
sub     eax, 41h
jz      short loc_403F75
dec     eax
dec     eax
jz      short loc_403FC1
dec     eax
dec     eax
jz      short loc_403F75
dec     eax
dec     eax
jnz     loc_404507

loc_403F75:
add     dl, 20h
mov     [ebp+var_270], 1
mov     [ebp+var_211], dl

loc_403F88:
or      [ebp+var_210], 40h
cmp     [ebp+var_218], esi
lea     ebx, [ebp+MultiByteStr]
mov     eax, 200h
mov     [ebp+var_21C], ebx
mov     [ebp+var_260], eax
jge     loc_4041FA
mov     [ebp+var_218], 6
jmp     loc_404266

loc_403FC1:
test    [ebp+var_210], 830h
jnz     loc_404069
or      [ebp+var_210], 800h
jmp     loc_404069

loc_403FE0:
test    [ebp+var_210], 830h
jnz     short loc_403FF6
or      [ebp+var_210], 800h

loc_403FF6:
mov     ecx, [ebp+var_218]
cmp     ecx, 0FFFFFFFFh
jnz     short loc_404006
mov     ecx, 7FFFFFFFh

loc_404006:
add     edi, 4
test    [ebp+var_210], 810h
mov     [ebp+var_224], edi
mov     edi, [edi-4]
mov     [ebp+var_21C], edi
jz      loc_4044D9
cmp     edi, esi
jnz     short loc_404037
mov     eax, off_411010
mov     [ebp+var_21C], eax

loc_404037:
mov     eax, [ebp+var_21C]
mov     [ebp+var_238], 1
jmp     loc_4044CB

loc_40404C:
sub     eax, 58h
jz      loc_40432F
dec     eax
dec     eax
jz      short loc_4040D2
sub     eax, ecx
jz      loc_403F88
dec     eax
dec     eax
jnz     loc_404507

loc_404069:
add     edi, 4
test    [ebp+var_210], 810h
mov     [ebp+var_224], edi
jz      short loc_4040AE
movzx   eax, word ptr [edi-4]
push    eax             ; WideCharStr
push    200h            ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
lea     eax, [ebp+var_220]
push    eax             ; int
call    sub_408344
add     esp, 10h
test    eax, eax
jz      short loc_4040C1
mov     [ebp+var_240], 1
jmp     short loc_4040C1

loc_4040AE:
mov     al, [edi-4]
mov     [ebp+MultiByteStr], al
mov     [ebp+var_220], 1

loc_4040C1:
lea     eax, [ebp+MultiByteStr]
mov     [ebp+var_21C], eax
jmp     loc_404507

loc_4040D2:
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_224], edi
cmp     eax, esi
jz      short loc_40411C
mov     ecx, [eax+4]
cmp     ecx, esi
jz      short loc_40411C
test    [ebp+var_210], 800h
movsx   eax, word ptr [eax]
mov     [ebp+var_21C], ecx
jz      short loc_404111
cdq
sub     eax, edx
sar     eax, 1
mov     [ebp+var_238], 1
jmp     loc_404501

loc_404111:
mov     [ebp+var_238], esi
jmp     loc_404501

loc_40411C:
mov     eax, off_41100C
mov     [ebp+var_21C], eax
push    eax

loc_404128:             ; length -> eax
call    strlen_to_eax   ;
pop     ecx
jmp     loc_404501

loc_404133:
cmp     eax, 70h
jg      loc_404337
jz      loc_404325
cmp     eax, 65h
jl      loc_404507
cmp     eax, 67h
jle     loc_403F88
cmp     eax, 69h
jz      short loc_4041CA
cmp     eax, 6Eh
jz      short loc_404186
cmp     eax, 6Fh
jnz     loc_404507
test    byte ptr [ebp+var_210], 80h
mov     [ebp+var_220], 8
jz      short loc_4041DB
or      [ebp+var_210], 200h
jmp     short loc_4041DB

loc_404186:
mov     esi, [edi]
add     edi, 4
mov     [ebp+var_224], edi
call    sub_4081C2
test    eax, eax
jz      loc_403BCD
test    byte ptr [ebp+var_210], 20h
jz      short loc_4041B3
mov     ax, word ptr [ebp+var_228]
mov     [esi], ax
jmp     short loc_4041BB

loc_4041B3:
mov     eax, [ebp+var_228]
mov     [esi], eax

loc_4041BB:
mov     [ebp+var_240], 1
jmp     loc_404670

loc_4041CA:
or      [ebp+var_210], 40h

loc_4041D1:
mov     [ebp+var_220], 0Ah

loc_4041DB:
mov     ecx, [ebp+var_210]
test    ecx, 8000h
jz      loc_404396

loc_4041ED:
mov     eax, [edi]
mov     edx, [edi+4]
add     edi, 8
jmp     loc_4043CF

loc_4041FA:
jnz     short loc_40420D
cmp     dl, 67h
jnz     short loc_404266
mov     [ebp+var_218], 1
jmp     short loc_404266

loc_40420D:
cmp     [ebp+var_218], eax
jle     short loc_40421B
mov     [ebp+var_218], eax

loc_40421B:
cmp     [ebp+var_218], 0A3h
jle     short loc_404266
mov     esi, [ebp+var_218]
add     esi, 15Dh
push    esi
call    sub_4080E3
mov     dl, [ebp+var_211]
pop     ecx
mov     [ebp+lpMem], eax
test    eax, eax
jz      short loc_40425A
mov     [ebp+var_21C], eax
mov     [ebp+var_260], esi
mov     ebx, eax
jmp     short loc_404264

loc_40425A:
mov     [ebp+var_218], 0A3h

loc_404264:
xor     esi, esi

loc_404266:
mov     eax, [edi]
add     edi, 8
mov     [ebp+var_278], eax
mov     eax, [edi-4]
mov     [ebp+var_274], eax
lea     eax, [ebp+var_25C]
push    eax
push    [ebp+var_270]
movsx   eax, dl
push    [ebp+var_218]
mov     [ebp+var_224], edi
push    eax
push    [ebp+var_260]
lea     eax, [ebp+var_278]
push    ebx
push    eax
push    off_411CCC
call    sub_405D35
pop     ecx
call    eax
mov     edi, [ebp+var_210]
add     esp, 1Ch
and     edi, 80h
jz      short loc_4042E4
cmp     [ebp+var_218], esi
jnz     short loc_4042E4
lea     eax, [ebp+var_25C]
push    eax
push    ebx
push    off_411CD8
call    sub_405D35
pop     ecx
call    eax
pop     ecx
pop     ecx

loc_4042E4:
cmp     [ebp+var_211], 67h
jnz     short loc_404309
cmp     edi, esi
jnz     short loc_404309
lea     eax, [ebp+var_25C]
push    eax
push    ebx
push    off_411CD4
call    sub_405D35
pop     ecx
call    eax
pop     ecx
pop     ecx

loc_404309:
cmp     byte ptr [ebx], 2Dh
jnz     short loc_40431F
or      [ebp+var_210], 100h
inc     ebx
mov     [ebp+var_21C], ebx

loc_40431F:
push    ebx
jmp     loc_404128

loc_404325:
mov     [ebp+var_218], 8

loc_40432F:
mov     [ebp+var_248], ecx
jmp     short loc_40435B

loc_404337:
sub     eax, 73h
jz      loc_403FF6
dec     eax
dec     eax
jz      loc_4041D1
sub     eax, 3
jnz     loc_404507
mov     [ebp+var_248], 27h

loc_40435B:
test    byte ptr [ebp+var_210], 80h
mov     [ebp+var_220], 10h
jz      loc_4041DB
mov     al, byte ptr [ebp+var_248]
add     al, 51h
mov     [ebp+var_22C], 30h
mov     [ebp+var_22B], al
mov     [ebp+var_230], 2
jmp     loc_4041DB

loc_404396:
test    ecx, 1000h
jnz     loc_4041ED
add     edi, 4
test    cl, 20h
jz      short loc_4043C2
mov     [ebp+var_224], edi
test    cl, 40h
jz      short loc_4043BB
movsx   eax, word ptr [edi-4]
jmp     short loc_4043BF

loc_4043BB:
movzx   eax, word ptr [edi-4]

loc_4043BF:
cdq
jmp     short loc_4043D5

loc_4043C2:
mov     eax, [edi-4]
test    cl, 40h
jz      short loc_4043CD
cdq
jmp     short loc_4043CF

loc_4043CD:
xor     edx, edx

loc_4043CF:
mov     [ebp+var_224], edi

loc_4043D5:
test    cl, 40h
jz      short loc_4043F5
cmp     edx, esi
jg      short loc_4043F5
jl      short loc_4043E4
cmp     eax, esi
jnb     short loc_4043F5

loc_4043E4:
neg     eax
adc     edx, 0
neg     edx
or      [ebp+var_210], 100h

loc_4043F5:
test    [ebp+var_210], 9000h
mov     ebx, edx
mov     edi, eax
jnz     short loc_404407
xor     ebx, ebx

loc_404407:
cmp     [ebp+var_218], 0
jge     short loc_40441C
mov     [ebp+var_218], 1
jmp     short loc_404436

loc_40441C:
and     [ebp+var_210], 0FFFFFFF7h
mov     eax, 200h
cmp     [ebp+var_218], eax
jle     short loc_404436
mov     [ebp+var_218], eax

loc_404436:
mov     eax, edi
or      eax, ebx
jnz     short loc_404442
and     [ebp+var_230], eax

loc_404442:
lea     esi, [ebp+var_D]

loc_404445:
mov     eax, [ebp+var_218]
dec     [ebp+var_218]
test    eax, eax
jg      short loc_40445B
mov     eax, edi
or      eax, ebx
jz      short loc_404488

loc_40445B:
mov     eax, [ebp+var_220]
cdq
push    edx
push    eax
push    ebx
push    edi
call    sub_408370
add     ecx, 30h
cmp     ecx, 39h
mov     [ebp+var_260], ebx
mov     edi, eax
mov     ebx, edx
jle     short loc_404483
add     ecx, [ebp+var_248]

loc_404483:
mov     [esi], cl
dec     esi
jmp     short loc_404445

loc_404488:
lea     eax, [ebp+var_D]
sub     eax, esi
inc     esi
test    [ebp+var_210], 200h
mov     [ebp+var_220], eax
mov     [ebp+var_21C], esi
jz      short loc_404507
test    eax, eax
jz      short loc_4044B1
mov     ecx, esi
cmp     byte ptr [ecx], 30h
jz      short loc_404507

loc_4044B1:
dec     [ebp+var_21C]
mov     ecx, [ebp+var_21C]
mov     byte ptr [ecx], 30h
inc     eax
jmp     short loc_404501

loc_4044C3:
dec     ecx
cmp     [eax], si
jz      short loc_4044CF
inc     eax
inc     eax

loc_4044CB:
cmp     ecx, esi
jnz     short loc_4044C3

loc_4044CF:
sub     eax, [ebp+var_21C]
sar     eax, 1
jmp     short loc_404501

loc_4044D9:
cmp     edi, esi
jnz     short loc_4044E8
mov     eax, off_41100C
mov     [ebp+var_21C], eax

loc_4044E8:
mov     eax, [ebp+var_21C]
jmp     short loc_4044F7

loc_4044F0:
dec     ecx
cmp     byte ptr [eax], 0
jz      short loc_4044FB
inc     eax

loc_4044F7:
cmp     ecx, esi
jnz     short loc_4044F0

loc_4044FB:
sub     eax, [ebp+var_21C]

loc_404501:
mov     [ebp+var_220], eax

loc_404507:
cmp     [ebp+var_240], 0
jnz     loc_404670
mov     eax, [ebp+var_210]
test    al, 40h
jz      short loc_404550
test    eax, 100h
jz      short loc_40452E
mov     [ebp+var_22C], 2Dh
jmp     short loc_404546

loc_40452E:
test    al, 1
jz      short loc_40453B
mov     [ebp+var_22C], 2Bh
jmp     short loc_404546

loc_40453B:
test    al, 2
jz      short loc_404550
mov     [ebp+var_22C], 20h

loc_404546:
mov     [ebp+var_230], 1

loc_404550:
mov     ebx, [ebp+var_234]
sub     ebx, [ebp+var_220]
sub     ebx, [ebp+var_230]
test    byte ptr [ebp+var_210], 0Ch
jnz     short loc_404582
push    [ebp+var_24C]
lea     eax, [ebp+var_228]
push    ebx
push    20h
call    sub_403AEF
add     esp, 0Ch

loc_404582:
push    [ebp+var_230]
mov     edi, [ebp+var_24C]
lea     eax, [ebp+var_228]
lea     ecx, [ebp+var_22C]
call    sub_403B15
test    byte ptr [ebp+var_210], 8
pop     ecx
jz      short loc_4045C4
test    byte ptr [ebp+var_210], 4
jnz     short loc_4045C4
push    edi
push    ebx
push    30h
lea     eax, [ebp+var_228]
call    sub_403AEF
add     esp, 0Ch

loc_4045C4:
cmp     [ebp+var_238], 0
mov     eax, [ebp+var_220]
jz      short loc_404639
test    eax, eax
jle     short loc_404639
mov     esi, [ebp+var_21C]
mov     [ebp+var_260], eax

loc_4045E3:
movzx   eax, word ptr [esi]
dec     [ebp+var_260]
push    eax             ; WideCharStr
push    6               ; cbMultiByte
lea     eax, [ebp+var_C]
push    eax             ; lpMultiByteStr
lea     eax, [ebp+var_268]
inc     esi
push    eax             ; int
inc     esi
call    sub_408344
add     esp, 10h
test    eax, eax
jnz     short loc_404630
cmp     [ebp+var_268], eax
jz      short loc_404630
push    [ebp+var_268]
lea     eax, [ebp+var_228]
lea     ecx, [ebp+var_C]
call    sub_403B15
cmp     [ebp+var_260], 0
pop     ecx
jnz     short loc_4045E3
jmp     short loc_40464C

loc_404630:
or      [ebp+var_228], 0FFFFFFFFh
jmp     short loc_40464C

loc_404639:
mov     ecx, [ebp+var_21C]
push    eax
lea     eax, [ebp+var_228]
call    sub_403B15
pop     ecx

loc_40464C:
cmp     [ebp+var_228], 0
jl      short loc_404670
test    byte ptr [ebp+var_210], 4
jz      short loc_404670
push    edi
push    ebx
push    20h
lea     eax, [ebp+var_228]
call    sub_403AEF
add     esp, 0Ch

loc_404670:
cmp     [ebp+lpMem], 0
jz      short loc_40468C ; jumptable 00403CDF default case
push    [ebp+lpMem]     ; lpMem
call    sub_404EF7
and     [ebp+lpMem], 0
pop     ecx

loc_40468C:             ; jumptable 00403CDF default case
mov     ebx, [ebp+var_23C]
mov     al, [ebx]
mov     [ebp+var_211], al
test    al, al
jz      short loc_4046B1
mov     ecx, [ebp+var_26C]
mov     edi, [ebp+var_224]
mov     dl, al
jmp     loc_403C92

loc_4046B1:
cmp     [ebp+var_250], 0
jz      short loc_4046C4
mov     eax, [ebp+var_254]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_4046C4:
mov     eax, [ebp+var_228]

loc_4046CA:
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    anti_debug
leave
retn
sub_403B62 endp

align 2
off_4046DA dd offset loc_403EE5 ; jump table for switch statement
dd offset loc_403CE6
dd offset loc_403D16
dd offset loc_403D74
dd offset loc_403DC0
dd offset loc_403DCB
dd offset loc_403E11
dd offset loc_403F3F


; Attributes: bp-based frame

sub_4046FA proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424684, eax
pop     ebp
retn
sub_4046FA endp



; Attributes: bp-based frame

sub_404709 proc near

var_328= dword ptr -328h
var_324= dword ptr -324h
var_31C= dword ptr -31Ch
ExceptionInfo= _EXCEPTION_POINTERS ptr -2D8h
var_2D0= dword ptr -2D0h
var_244= word ptr -244h
var_240= word ptr -240h
var_23C= word ptr -23Ch
var_238= word ptr -238h
var_234= dword ptr -234h
var_230= dword ptr -230h
var_22C= dword ptr -22Ch
var_228= dword ptr -228h
var_224= dword ptr -224h
var_220= dword ptr -220h
var_21C= dword ptr -21Ch
var_218= dword ptr -218h
var_214= word ptr -214h
var_210= dword ptr -210h
var_20C= dword ptr -20Ch
var_208= word ptr -208h
var_4= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 328h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
and     [ebp+var_328], 0
push    ebx
push    4Ch
lea     eax, [ebp+var_324]
push    0
push    eax
call    sub_402FB0
lea     eax, [ebp+var_328]
mov     [ebp+ExceptionInfo.ExceptionRecord], eax
lea     eax, [ebp+var_2D0]
add     esp, 0Ch
mov     [ebp+ExceptionInfo.ContextRecord], eax
mov     [ebp+var_220], eax
mov     [ebp+var_224], ecx
mov     [ebp+var_228], edx
mov     [ebp+var_22C], ebx
mov     [ebp+var_230], esi
mov     [ebp+var_234], edi
mov     [ebp+var_208], ss
mov     [ebp+var_214], cs
mov     [ebp+var_238], ds
mov     [ebp+var_23C], es
mov     [ebp+var_240], fs
mov     [ebp+var_244], gs
pushf
pop     [ebp+var_210]
mov     eax, [ebp+4]
lea     ecx, [ebp+4]
mov     [ebp+var_2D0], 10001h
mov     [ebp+var_218], eax
mov     [ebp+var_20C], ecx
mov     ecx, [ecx-4]
mov     [ebp+var_21C], ecx
mov     [ebp+var_328], 0C0000417h
mov     [ebp+var_324], 1
mov     [ebp+var_31C], eax
call    ds:IsDebuggerPresent
push    0               ; lpTopLevelExceptionFilter
mov     ebx, eax
call    ds:SetUnhandledExceptionFilter
lea     eax, [ebp+ExceptionInfo]
push    eax             ; ExceptionInfo
call    ds:UnhandledExceptionFilter
test    eax, eax
jnz     short loc_404812
test    ebx, ebx
jnz     short loc_404812
push    2
call    sub_407660
pop     ecx

loc_404812:             ; uExitCode
push    0C0000417h
call    ds:GetCurrentProcess
push    eax             ; hProcess
call    ds:TerminateProcess
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    anti_debug
leave
retn
sub_404709 endp



; Attributes: bp-based frame

sub_404831 proc near
mov     edi, edi
push    ebp
mov     ebp, esp
push    dword_424684
call    sub_405D35
pop     ecx
test    eax, eax
jz      short loc_404849
pop     ebp
jmp     eax

loc_404849:
push    2
call    sub_407660
pop     ecx
pop     ebp
jmp     sub_404709
sub_404831 endp



; Attributes: bp-based frame

sub_404857 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
xor     ecx, ecx

loc_404861:
cmp     eax, dword_411018[ecx*8]
jz      short loc_40487D
inc     ecx
cmp     ecx, 2Dh
jb      short loc_404861
lea     ecx, [eax-13h]
cmp     ecx, 11h
ja      short loc_404886
push    0Dh
pop     eax
pop     ebp
retn

loc_40487D:
mov     eax, dword_41101C[ecx*8]
pop     ebp
retn

loc_404886:
add     eax, 0FFFFFF44h
push    0Eh
pop     ecx
cmp     ecx, eax
sbb     eax, eax
and     eax, ecx
add     eax, 8
pop     ebp
retn
sub_404857 endp




sub_404899 proc near
call    sub_405F08
test    eax, eax
jnz     short loc_4048A8
mov     eax, offset unk_411180
retn

loc_4048A8:
add     eax, 8
retn
sub_404899 endp




sub_4048AC proc near
call    sub_405F08
test    eax, eax
jnz     short loc_4048BB
mov     eax, offset unk_411184
retn

loc_4048BB:
add     eax, 0Ch
retn
sub_4048AC endp



; Attributes: bp-based frame

sub_4048BF proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
call    sub_4048AC
mov     ecx, [ebp+arg_0]
push    ecx
mov     [eax], ecx
call    sub_404857
pop     ecx
mov     esi, eax
call    sub_404899
mov     [eax], esi
pop     esi
pop     ebp
retn
sub_4048BF endp




sub_4048E2 proc near
mov     eax, offset off_411188
retn
sub_4048E2 endp

mov     eax, dword_425F20
push    esi
push    14h
pop     esi
test    eax, eax
jnz     short loc_4048FC
mov     eax, 200h
jmp     short loc_404902

loc_4048FC:
cmp     eax, esi
jge     short loc_404907
mov     eax, esi

loc_404902:
mov     dword_425F20, eax

loc_404907:
push    4
push    eax
call    sub_408128
pop     ecx
pop     ecx
mov     dword_424F1C, eax
test    eax, eax
jnz     short loc_404938
push    4
push    esi
mov     dword_425F20, esi
call    sub_408128
pop     ecx
pop     ecx
mov     dword_424F1C, eax
test    eax, eax
jnz     short loc_404938
push    1Ah
pop     eax
pop     esi
retn

loc_404938:
xor     edx, edx
mov     ecx, offset off_411188
jmp     short loc_404946

loc_404941:
mov     eax, dword_424F1C

loc_404946:
mov     [edx+eax], ecx
add     ecx, 20h
add     edx, 4
cmp     ecx, offset unk_411408
jl      short loc_404941
push    0FFFFFFFEh
pop     esi
xor     edx, edx
mov     ecx, offset unk_411198
push    edi

loc_404962:
mov     eax, edx
sar     eax, 5
mov     eax, dword_424E00[eax*4]
mov     edi, edx
and     edi, 1Fh
shl     edi, 6
mov     eax, [edi+eax]
cmp     eax, 0FFFFFFFFh
jz      short loc_404986
cmp     eax, esi
jz      short loc_404986
test    eax, eax
jnz     short loc_404988

loc_404986:
mov     [ecx], esi

loc_404988:
add     ecx, 20h
inc     edx
cmp     ecx, offset unk_4111F8
jl      short loc_404962
pop     edi
xor     eax, eax
pop     esi
retn
call    sub_4052A9
cmp     byte_424708, 0
jz      short loc_4049AC
call    sub_408405

loc_4049AC:
push    dword_424F1C
call    sub_404EF7
pop     ecx
retn


; Attributes: bp-based frame

sub_4049B9 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, offset off_411188
cmp     esi, eax
jb      short loc_4049ED
cmp     esi, offset unk_4113E8
ja      short loc_4049ED
mov     ecx, esi
sub     ecx, eax
sar     ecx, 5
add     ecx, 10h
push    ecx
call    sub_408620
or      dword ptr [esi+0Ch], 8000h
pop     ecx
jmp     short loc_4049F7

loc_4049ED:
add     esi, 20h
push    esi             ; lpCriticalSection
call    ds:EnterCriticalSection

loc_4049F7:
pop     esi
pop     ebp
retn
sub_4049B9 endp



; Attributes: bp-based frame

sub_4049FA proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 14h
jge     short loc_404A1D
add     eax, 10h
push    eax
call    sub_408620
mov     eax, [ebp+arg_4]
or      dword ptr [eax+0Ch], 8000h
pop     ecx
pop     ebp
retn

loc_404A1D:
mov     eax, [ebp+arg_4]
add     eax, 20h
push    eax             ; lpCriticalSection
call    ds:EnterCriticalSection
pop     ebp
retn
sub_4049FA endp



; Attributes: bp-based frame

sub_404A2C proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, offset off_411188
cmp     eax, ecx
jb      short loc_404A5C
cmp     eax, offset unk_4113E8
ja      short loc_404A5C
and     dword ptr [eax+0Ch], 0FFFF7FFFh
sub     eax, ecx
sar     eax, 5
add     eax, 10h
push    eax
call    sub_408546
pop     ecx
pop     ebp
retn

loc_404A5C:
add     eax, 20h
push    eax             ; lpCriticalSection
call    ds:LeaveCriticalSection
pop     ebp
retn
sub_404A2C endp



; Attributes: bp-based frame

sub_404A68 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
cmp     ecx, 14h
mov     eax, [ebp+arg_4]
jge     short loc_404A8B
and     dword ptr [eax+0Ch], 0FFFF7FFFh
add     ecx, 10h
push    ecx
call    sub_408546
pop     ecx
pop     ebp
retn

loc_404A8B:
add     eax, 20h
push    eax             ; lpCriticalSection
call    ds:LeaveCriticalSection
pop     ebp
retn
sub_404A68 endp

align 4
; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4. PRESS CTRL-NUMPAD+ TO EXPAND]
align 10h


; Attributes: bp-based frame

; int __cdecl SEH_401060(int, PVOID TargetFrame, int)
SEH_401060 proc near

var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_1= byte ptr -1
arg_0= dword ptr  8
TargetFrame= dword ptr  0Ch
arg_8= dword ptr  10h

; FUNCTION CHUNK AT 00404D95 SIZE 00000019 BYTES

SEH_40B960:
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
mov     ebx, [ebp+TargetFrame]
push    esi
mov     esi, [ebx+8]
xor     esi, dword_411004
push    edi
mov     eax, [esi]
mov     [ebp+var_1], 0
mov     [ebp+var_C], 1
lea     edi, [ebx+10h]
cmp     eax, 0FFFFFFFEh
jz      short loc_404B39
mov     ecx, [esi+4]
add     ecx, edi
xor     ecx, [eax+edi]
call    anti_debug

loc_404B39:
mov     ecx, [esi+0Ch]
mov     eax, [esi+8]
add     ecx, edi
xor     ecx, [eax+edi]
call    anti_debug
mov     eax, [ebp+arg_0]
test    byte ptr [eax+4], 66h
jnz     loc_404C6C
mov     ecx, [ebp+arg_8]
lea     edx, [ebp+var_18]
mov     [ebx-4], edx
mov     ebx, [ebx+0Ch]
mov     [ebp+var_18], eax
mov     [ebp+var_14], ecx
cmp     ebx, 0FFFFFFFEh
jz      short loc_404BCC
lea     ecx, [ecx+0]

loc_404B70:
lea     eax, [ebx+ebx*2]
mov     ecx, [esi+eax*4+14h]
lea     eax, [esi+eax*4+10h]
mov     [ebp+var_10], eax
mov     eax, [eax]
mov     [ebp+var_8], eax
test    ecx, ecx
jz      short loc_404B9B
mov     edx, edi
call    sub_404D7E
mov     [ebp+var_1], 1
test    eax, eax
jl      short loc_404BD6
jg      short loc_404BDF
mov     eax, [ebp+var_8]

loc_404B9B:
mov     ebx, eax
cmp     eax, 0FFFFFFFEh
jnz     short loc_404B70
cmp     [ebp+var_1], 0
jz      short loc_404BCC

loc_404BA8:
mov     eax, [esi]
cmp     eax, 0FFFFFFFEh
jz      short loc_404BBC
mov     ecx, [esi+4]
add     ecx, edi
xor     ecx, [eax+edi]
call    anti_debug

loc_404BBC:
mov     ecx, [esi+0Ch]
mov     edx, [esi+8]
add     ecx, edi
xor     ecx, [edx+edi]
call    anti_debug

loc_404BCC:
mov     eax, [ebp+var_C]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn

loc_404BD6:
mov     [ebp+var_C], 0
jmp     short loc_404BA8

loc_404BDF:
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx], 0E06D7363h
jnz     short loc_404C13
cmp     dword_424F18, 0
jz      short loc_404C13
push    offset dword_424F18
call    sub_408760
add     esp, 4
test    eax, eax
jz      short loc_404C13
mov     edx, [ebp+arg_0]
push    1
push    edx
call    dword_424F18
add     esp, 8

loc_404C13:             ; TargetFrame
mov     ecx, [ebp+TargetFrame]
call    sub_404DAE
mov     eax, [ebp+TargetFrame]
cmp     [eax+0Ch], ebx
jz      short loc_404C35
push    offset dword_411004
push    edi
mov     edx, ebx
mov     ecx, eax
call    sub_404DC8
mov     eax, [ebp+TargetFrame]

loc_404C35:
mov     ecx, [ebp+var_8]
mov     [eax+0Ch], ecx
mov     eax, [esi]
cmp     eax, 0FFFFFFFEh
jz      short loc_404C4F
mov     ecx, [esi+4]
add     ecx, edi
xor     ecx, [eax+edi]
call    anti_debug

loc_404C4F:
mov     ecx, [esi+0Ch]
mov     edx, [esi+8]
add     ecx, edi
xor     ecx, [edx+edi]
call    anti_debug
mov     eax, [ebp+var_10]
mov     ecx, [eax+8]
mov     edx, edi
jmp     loc_404D95

loc_404C6C:
mov     edx, 0FFFFFFFEh
cmp     [ebx+0Ch], edx
jz      loc_404BCC
push    offset dword_411004
push    edi
mov     ecx, ebx
call    sub_404DC8
jmp     loc_404BA8
SEH_401060 endp




sub_404C8C proc near

var_20= dword ptr -20h
arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch
arg_C= dword ptr  10h

push    ebx
push    esi
push    edi
mov     edx, [esp+0Ch+arg_0]
mov     eax, [esp+0Ch+arg_4]
mov     ecx, [esp+0Ch+arg_8]
push    ebp
push    edx
push    eax
push    ecx
push    ecx
push    offset loc_404D1C
push    large dword ptr fs:0
mov     eax, dword_411004
xor     eax, esp
mov     [esp+28h+var_20], eax
mov     large fs:0, esp

loc_404CBE:
mov     eax, [esp+28h+arg_4]
mov     ebx, [eax+8]
mov     ecx, [esp+28h+arg_0]
xor     ebx, [ecx]
mov     esi, [eax+0Ch]
cmp     esi, 0FFFFFFFEh
jz      short loc_404D0E
mov     edx, [esp+28h+arg_8]
cmp     edx, 0FFFFFFFEh
jz      short loc_404CE0
cmp     esi, edx
jbe     short loc_404D0E

loc_404CE0:
lea     esi, [esi+esi*2]
lea     ebx, [ebx+esi*4+10h]
mov     ecx, [ebx]
mov     [eax+0Ch], ecx
cmp     dword ptr [ebx+4], 0
jnz     short loc_404CBE
push    101h
mov     eax, [ebx+8]
call    sub_408935
mov     ecx, 1
mov     eax, [ebx+8]
call    sub_408954
jmp     short loc_404CBE

loc_404D0E:
pop     large dword ptr fs:0
add     esp, 18h
pop     edi
pop     esi
pop     ebx
retn

loc_404D1C:
mov     ecx, [esp+arg_0]
test    dword ptr [ecx+4], 6
mov     eax, 1
jz      short locret_404D61
mov     eax, [esp+arg_4]
mov     ecx, [eax+8]
xor     ecx, eax
call    anti_debug
push    ebp
mov     ebp, [eax+18h]
push    dword ptr [eax+0Ch]
push    dword ptr [eax+10h]
push    dword ptr [eax+14h]
call    sub_404C8C
add     esp, 0Ch
pop     ebp
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_C]
mov     [edx], eax
mov     eax, 3

locret_404D61:
retn
sub_404C8C endp

push    ebp
mov     ecx, [esp+8]
mov     ebp, [ecx]
push    dword ptr [ecx+1Ch]
push    dword ptr [ecx+18h]
push    dword ptr [ecx+28h]
call    sub_404C8C
add     esp, 0Ch
pop     ebp
retn    4



sub_404D7E proc near
push    ebp
push    esi
push    edi
push    ebx
mov     ebp, edx
xor     eax, eax
xor     ebx, ebx
xor     edx, edx
xor     esi, esi
xor     edi, edi
call    ecx
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
sub_404D7E endp

; START OF FUNCTION CHUNK FOR SEH_401060

loc_404D95:
mov     ebp, edx
mov     esi, ecx
mov     eax, ecx
push    1
call    sub_408935
xor     eax, eax
xor     ebx, ebx
xor     ecx, ecx
xor     edx, edx
xor     edi, edi
jmp     esi
; END OF FUNCTION CHUNK FOR SEH_401060


; Attributes: bp-based frame

; int __thiscall sub_404DAE(PVOID TargetFrame)
sub_404DAE proc near
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
push    0               ; ReturnValue
push    0               ; ExceptionRecord
push    offset loc_404DC3 ; TargetIp
push    ecx             ; TargetFrame
call    RtlUnwind

loc_404DC3:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_404DAE endp




sub_404DC8 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

push    ebp
mov     ebp, [esp+4+arg_0]
push    edx
push    ecx
push    [esp+0Ch+arg_4]
call    sub_404C8C
add     esp, 0Ch
pop     ebp
retn    8
sub_404DC8 endp



; Attributes: bp-based frame

sub_404DDF proc near

var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
sub     esp, 4
mov     [ebp+var_4], edi
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
shr     ecx, 7
pxor    xmm0, xmm0
jmp     short loc_404DFF
db 8Dh, 0A4h, 24h, 4 dup(0)
db 90h

loc_404DFF:
movdqa  xmmword ptr [edi], xmm0
movdqa  xmmword ptr [edi+10h], xmm0
movdqa  xmmword ptr [edi+20h], xmm0
movdqa  xmmword ptr [edi+30h], xmm0
movdqa  xmmword ptr [edi+40h], xmm0
movdqa  xmmword ptr [edi+50h], xmm0
movdqa  xmmword ptr [edi+60h], xmm0
movdqa  xmmword ptr [edi+70h], xmm0
lea     edi, [edi+80h]
dec     ecx
jnz     short loc_404DFF
mov     edi, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
sub_404DDF endp



; Attributes: bp-based frame

sub_404E36 proc near

var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_4], edi
mov     eax, [ebp+arg_0]
cdq
mov     edi, eax
xor     edi, edx
sub     edi, edx
and     edi, 0Fh
xor     edi, edx
sub     edi, edx
test    edi, edi
jnz     short loc_404E90
mov     ecx, [ebp+arg_8]
mov     edx, ecx
and     edx, 7Fh
mov     [ebp+var_C], edx
cmp     ecx, edx
jz      short loc_404E75
sub     ecx, edx
push    ecx
push    eax
call    sub_404DDF
add     esp, 8
mov     eax, [ebp+arg_0]
mov     edx, [ebp+var_C]

loc_404E75:
test    edx, edx
jz      short loc_404EBE
add     eax, [ebp+arg_8]
sub     eax, edx
mov     [ebp+var_8], eax
xor     eax, eax
mov     edi, [ebp+var_8]
mov     ecx, [ebp+var_C]
rep stosb
mov     eax, [ebp+arg_0]
jmp     short loc_404EBE

loc_404E90:
neg     edi
add     edi, 10h
mov     [ebp+var_10], edi
xor     eax, eax
mov     edi, [ebp+arg_0]
mov     ecx, [ebp+var_10]
rep stosb
mov     eax, [ebp+var_10]
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_8]
add     ecx, eax
sub     edx, eax
push    edx
push    0
push    ecx
call    sub_404E36
add     esp, 0Ch
mov     eax, [ebp+arg_0]

loc_404EBE:
mov     edi, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
sub_404E36 endp



; Attributes: bp-based frame

sub_404EC5 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
xor     esi, esi
cmp     eax, esi
jnz     short loc_404EF1
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     short loc_404EF4

loc_404EF1:
mov     eax, [eax+10h]

loc_404EF4:
pop     esi
pop     ebp
retn
sub_404EC5 endp



; Attributes: bp-based frame

; int __cdecl sub_404EF7(LPVOID lpMem)
sub_404EF7 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
lpMem= dword ptr  8

push    0Ch
push    offset stru_40F608
call    __SEH_prolog4
mov     esi, [ebp+lpMem]
test    esi, esi
jz      short loc_404F7F
cmp     dword_424DE4, 3
jnz     short loc_404F56
push    4
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
push    esi
call    sub_408B1B
pop     ecx
mov     [ebp+var_1C], eax
test    eax, eax
jz      short loc_404F36
push    esi
push    eax
call    sub_408B4B
pop     ecx
pop     ecx

loc_404F36:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_404F4D

loc_404F42:
cmp     [ebp+var_1C], 0
jnz     short loc_404F7F
push    [ebp+lpMem]
jmp     short loc_404F57

loc_404F4D:
push    4
call    sub_408546
pop     ecx
retn

loc_404F56:             ; lpMem
push    esi

loc_404F57:             ; dwFlags
push    0
push    hHeap           ; hHeap
call    ds:HeapFree
test    eax, eax
jnz     short loc_404F7F
call    sub_404899
mov     esi, eax
call    ds:GetLastError
push    eax
call    sub_404857
mov     [esi], eax
pop     ecx

loc_404F7F:
call    __SEH_epilog4
retn
sub_404EF7 endp



; Attributes: bp-based frame

sub_404F85 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    esi
call    sub_4089DD
pop     ecx
cmp     eax, 0FFFFFFFFh
jz      short loc_404FEB
mov     eax, dword_424E00
cmp     esi, 1
jnz     short loc_404FAE
test    byte ptr [eax+84h], 1
jnz     short loc_404FB9

loc_404FAE:
cmp     esi, 2
jnz     short loc_404FCF
test    byte ptr [eax+44h], 1
jz      short loc_404FCF

loc_404FB9:
push    2
call    sub_4089DD
push    1
mov     edi, eax
call    sub_4089DD
pop     ecx
pop     ecx
cmp     eax, edi
jz      short loc_404FEB

loc_404FCF:
push    esi
call    sub_4089DD
pop     ecx
push    eax             ; hObject
call    ds:CloseHandle
test    eax, eax
jnz     short loc_404FEB
call    ds:GetLastError
mov     edi, eax
jmp     short loc_404FED

loc_404FEB:
xor     edi, edi

loc_404FED:
push    esi
call    sub_408957
mov     eax, esi
sar     eax, 5
mov     eax, dword_424E00[eax*4]
and     esi, 1Fh
shl     esi, 6
pop     ecx
mov     byte ptr [eax+esi+4], 0
test    edi, edi
jz      short loc_40501B
push    edi
call    sub_4048BF
pop     ecx
or      eax, 0FFFFFFFFh
jmp     short loc_40501D

loc_40501B:
xor     eax, eax

loc_40501D:
pop     edi
pop     esi
pop     ebp
retn
sub_404F85 endp



; Attributes: bp-based frame

sub_405021 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    10h
push    offset stru_40F628
call    __SEH_prolog4
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_405050
call    sub_4048AC
and     dword ptr [eax], 0
call    sub_404899
mov     dword ptr [eax], 9

loc_405048:
or      eax, 0FFFFFFFFh
jmp     loc_4050DE

loc_405050:
xor     edi, edi
cmp     eax, edi
jl      short loc_40505E
cmp     eax, uNumber
jb      short loc_40507F

loc_40505E:
call    sub_4048AC
mov     [eax], edi
call    sub_404899
mov     dword ptr [eax], 9
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
jmp     short loc_405048

loc_40507F:
mov     ecx, eax
sar     ecx, 5
lea     ebx, ds:424E00h[ecx*4]
mov     esi, eax
and     esi, 1Fh
shl     esi, 6
mov     ecx, [ebx]
movsx   ecx, byte ptr [ecx+esi+4]
and     ecx, 1
jz      short loc_40505E
push    eax
call    sub_408A54
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
mov     eax, [ebx]
test    byte ptr [eax+esi+4], 1
jz      short loc_4050C0
push    [ebp+arg_0]
call    sub_404F85
pop     ecx
mov     [ebp+var_1C], eax
jmp     short loc_4050CF

loc_4050C0:
call    sub_404899
mov     dword ptr [eax], 9
or      [ebp+var_1C], 0FFFFFFFFh

loc_4050CF:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4050E4

loc_4050DB:
mov     eax, [ebp+var_1C]

loc_4050DE:
call    __SEH_epilog4
retn

loc_4050E4:
push    [ebp+arg_0]
call    sub_408AF4
pop     ecx
retn
sub_405021 endp



; Attributes: bp-based frame

sub_4050EE proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0Ch]
test    al, 83h
jz      short loc_40511C
test    al, 8
jz      short loc_40511C
push    dword ptr [esi+8] ; lpMem
call    sub_404EF7
and     dword ptr [esi+0Ch], 0FFFFFBF7h
xor     eax, eax
pop     ecx
mov     [esi], eax
mov     [esi+8], eax
mov     [esi+4], eax

loc_40511C:
pop     esi
pop     ebp
retn
sub_4050EE endp



; Attributes: bp-based frame

sub_40511F proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0Ch]
mov     ecx, eax
and     cl, 3
xor     ebx, ebx
cmp     cl, 2
jnz     short loc_405178
test    eax, 108h
jz      short loc_405178
mov     eax, [esi+8]
push    edi
mov     edi, [esi]
sub     edi, eax
test    edi, edi
jle     short loc_405177
push    edi             ; nNumberOfBytesToWrite
push    eax             ; int
push    esi
call    sub_404EC5
pop     ecx
push    eax             ; int
call    sub_407F39
add     esp, 0Ch
cmp     eax, edi
jnz     short loc_405170
mov     eax, [esi+0Ch]
test    al, al
jns     short loc_405177
and     eax, 0FFFFFFFDh
mov     [esi+0Ch], eax
jmp     short loc_405177

loc_405170:
or      dword ptr [esi+0Ch], 20h
or      ebx, 0FFFFFFFFh

loc_405177:
pop     edi

loc_405178:
mov     eax, [esi+8]
and     dword ptr [esi+4], 0
mov     [esi], eax
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
sub_40511F endp



; Attributes: bp-based frame

sub_405187 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jnz     short loc_40519D
push    esi
call    sub_4051CF
pop     ecx
jmp     short loc_4051CC

loc_40519D:
push    esi
call    sub_40511F
pop     ecx
test    eax, eax
jz      short loc_4051AD
or      eax, 0FFFFFFFFh
jmp     short loc_4051CC

loc_4051AD:
test    dword ptr [esi+0Ch], 4000h
jz      short loc_4051CA
push    esi
call    sub_404EC5
push    eax
call    sub_4095DF
pop     ecx
neg     eax
pop     ecx
sbb     eax, eax
jmp     short loc_4051CC

loc_4051CA:
xor     eax, eax

loc_4051CC:
pop     esi
pop     ebp
retn
sub_405187 endp



; Attributes: bp-based frame

sub_4051CF proc near

var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    14h
push    offset stru_40F648
call    __SEH_prolog4
xor     edi, edi
mov     [ebp+var_1C], edi
mov     [ebp+var_24], edi
push    1
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
xor     esi, esi

loc_4051F0:
mov     [ebp+var_20], esi
cmp     esi, dword_425F20
jge     loc_405282
mov     eax, dword_424F1C
lea     eax, [eax+esi*4]
cmp     [eax], edi
jz      short loc_405269
mov     eax, [eax]
test    byte ptr [eax+0Ch], 83h
jz      short loc_405269
push    eax
push    esi
call    sub_4049FA
pop     ecx
pop     ecx
xor     edx, edx
inc     edx
mov     [ebp+ms_exc.registration.TryLevel], edx
mov     eax, dword_424F1C
mov     eax, [eax+esi*4]
mov     ecx, [eax+0Ch]
test    cl, 83h
jz      short loc_405261
cmp     [ebp+arg_0], edx
jnz     short loc_405248
push    eax
call    sub_405187
pop     ecx
cmp     eax, 0FFFFFFFFh
jz      short loc_405261
inc     [ebp+var_1C]
jmp     short loc_405261

loc_405248:
cmp     [ebp+arg_0], edi
jnz     short loc_405261
test    cl, 2
jz      short loc_405261
push    eax
call    sub_405187
pop     ecx
cmp     eax, 0FFFFFFFFh
jnz     short loc_405261
or      [ebp+var_24], eax

loc_405261:
mov     [ebp+ms_exc.registration.TryLevel], edi
call    loc_405271

loc_405269:
inc     esi
jmp     short loc_4051F0

loc_40526C:
xor     edi, edi
mov     esi, [ebp+var_20]

loc_405271:
mov     eax, dword_424F1C
push    dword ptr [eax+esi*4]
push    esi
call    sub_404A68
pop     ecx
pop     ecx
retn

loc_405282:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4052A0

loc_40528E:
cmp     [ebp+arg_0], 1
mov     eax, [ebp+var_1C]
jz      short loc_40529A
mov     eax, [ebp+var_24]

loc_40529A:
call    __SEH_epilog4
retn

loc_4052A0:
push    1
call    sub_408546
pop     ecx
retn
sub_4051CF endp




sub_4052A9 proc near
push    1
call    sub_4051CF
pop     ecx
retn
sub_4052A9 endp




sub_4052B2 proc near
sub     eax, 3A4h
jz      short loc_4052DB
sub     eax, 4
jz      short loc_4052D5
sub     eax, 0Dh
jz      short loc_4052CF
dec     eax
jz      short loc_4052C9
xor     eax, eax
retn

loc_4052C9:
mov     eax, 404h
retn

loc_4052CF:
mov     eax, 412h
retn

loc_4052D5:
mov     eax, 804h
retn

loc_4052DB:
mov     eax, 411h
retn
sub_4052B2 endp




sub_4052E1 proc near
mov     edi, edi
push    esi
push    edi
mov     esi, eax
push    101h
xor     edi, edi
lea     eax, [esi+1Ch]
push    edi
push    eax
call    sub_402FB0
xor     eax, eax
movzx   ecx, ax
mov     eax, ecx
mov     [esi+4], edi
mov     [esi+8], edi
mov     [esi+0Ch], edi
shl     ecx, 10h
or      eax, ecx
lea     edi, [esi+10h]
stosd
stosd
stosd
mov     ecx, offset unk_411508
add     esp, 0Ch
lea     eax, [esi+1Ch]
sub     ecx, esi
mov     edi, 101h

loc_405325:
mov     dl, [ecx+eax]
mov     [eax], dl
inc     eax
dec     edi
jnz     short loc_405325
lea     eax, [esi+11Dh]
mov     esi, 100h

loc_405339:
mov     dl, [eax+ecx]
mov     [eax], dl
inc     eax
dec     esi
jnz     short loc_405339
pop     edi
pop     esi
retn
sub_4052E1 endp



; Attributes: bp-based frame

sub_405345 proc near

var_51C= dword ptr -51Ch
CPInfo= _cpinfo ptr -518h
CharType= word ptr -504h
var_304= word ptr -304h
DestStr= word ptr -204h
MultiByteStr= byte ptr -104h
var_4= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 51Ch
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    edi
lea     eax, [ebp+CPInfo]
push    eax             ; lpCPInfo
push    dword ptr [esi+4] ; CodePage
call    ds:GetCPInfo
mov     edi, 100h
test    eax, eax
jz      loc_405474
xor     eax, eax

loc_40537B:
mov     [ebp+eax+MultiByteStr], al
inc     eax
cmp     eax, edi
jb      short loc_40537B
mov     al, [ebp+CPInfo.LeadByte]
mov     [ebp+MultiByteStr], 20h
test    al, al
jz      short loc_4053C6
lea     ebx, [ebp+CPInfo.LeadByte+1]

loc_40539E:
movzx   ecx, al
movzx   eax, byte ptr [ebx]
cmp     ecx, eax
ja      short loc_4053BE
sub     eax, ecx
inc     eax
push    eax
lea     edx, [ebp+ecx+MultiByteStr]
push    20h
push    edx
call    sub_402FB0
add     esp, 0Ch

loc_4053BE:
inc     ebx
mov     al, [ebx]
inc     ebx
test    al, al
jnz     short loc_40539E

loc_4053C6:             ; int
push    0
push    dword ptr [esi+0Ch] ; Locale
lea     eax, [ebp+CharType]
push    dword ptr [esi+4] ; CodePage
push    eax             ; lpCharType
push    edi             ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
push    1               ; dwInfoType
push    0               ; int
call    sub_40987A
xor     ebx, ebx
push    ebx             ; int
push    dword ptr [esi+4] ; CodePage
lea     eax, [ebp+DestStr]
push    edi             ; cchDest
push    eax             ; lpDestStr
push    edi             ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
push    edi             ; dwMapFlags
push    dword ptr [esi+0Ch] ; Locale
push    ebx             ; int
call    sub_40661C
add     esp, 44h
push    ebx             ; int
push    dword ptr [esi+4] ; CodePage
lea     eax, [ebp+var_304]
push    edi             ; cchDest
push    eax             ; lpDestStr
push    edi             ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
push    200h            ; dwMapFlags
push    dword ptr [esi+0Ch] ; Locale
push    ebx             ; int
call    sub_40661C
add     esp, 24h
xor     eax, eax

loc_405430:
movzx   ecx, [ebp+eax*2+CharType]
test    cl, 1
jz      short loc_40544B
or      byte ptr [esi+eax+1Dh], 10h
mov     cl, byte ptr [ebp+eax+DestStr]
jmp     short loc_40545C

loc_40544B:
test    cl, 2
jz      short loc_405465
or      byte ptr [esi+eax+1Dh], 20h
mov     cl, byte ptr [ebp+eax+var_304]

loc_40545C:
mov     [esi+eax+11Dh], cl
jmp     short loc_40546D

loc_405465:
mov     byte ptr [esi+eax+11Dh], 0

loc_40546D:
inc     eax
cmp     eax, edi
jb      short loc_405430
jmp     short loc_4054CA

loc_405474:
lea     eax, [esi+11Dh]
mov     [ebp+var_51C], 0FFFFFF9Fh
xor     ecx, ecx
sub     [ebp+var_51C], eax

loc_40548C:
mov     edx, [ebp+var_51C]
lea     eax, [esi+ecx+11Dh]
add     edx, eax
lea     ebx, [edx+20h]
cmp     ebx, 19h
ja      short loc_4054AF
or      byte ptr [esi+ecx+1Dh], 10h
mov     dl, cl
add     dl, 20h
jmp     short loc_4054BE

loc_4054AF:
cmp     edx, 19h
ja      short loc_4054C2
or      byte ptr [esi+ecx+1Dh], 20h
mov     dl, cl
sub     dl, 20h

loc_4054BE:
mov     [eax], dl
jmp     short loc_4054C5

loc_4054C2:
mov     byte ptr [eax], 0

loc_4054C5:
inc     ecx
cmp     ecx, edi
jb      short loc_40548C

loc_4054CA:
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     ebx
call    anti_debug
leave
retn
sub_405345 endp



; Attributes: bp-based frame

sub_4054D8 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    0Ch
push    offset stru_40F670
call    __SEH_prolog4
call    sub_405F81
mov     edi, eax
mov     eax, dword_411A2C
test    [edi+70h], eax
jz      short loc_405512
cmp     dword ptr [edi+6Ch], 0
jz      short loc_405512
mov     esi, [edi+68h]

loc_4054FE:
test    esi, esi
jnz     short loc_40550A
push    20h
call    sub_4067E4
pop     ecx

loc_40550A:
mov     eax, esi
call    __SEH_epilog4
retn

loc_405512:
push    0Dh
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
mov     esi, [edi+68h]
mov     [ebp+var_1C], esi
cmp     esi, lpAddend
jz      short loc_405562
test    esi, esi
jz      short loc_40554A
push    esi             ; lpAddend
call    ds:InterlockedDecrement
test    eax, eax
jnz     short loc_40554A
cmp     esi, offset unk_411508
jz      short loc_40554A
push    esi             ; lpMem
call    sub_404EF7
pop     ecx

loc_40554A:
mov     eax, lpAddend
mov     [edi+68h], eax
mov     esi, lpAddend
mov     [ebp+var_1C], esi
push    esi             ; lpAddend
call    ds:InterlockedIncrement

loc_405562:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_405573

loc_40556E:
jmp     short loc_4054FE

loc_405570:
mov     esi, [ebp+var_1C]

loc_405573:
push    0Dh
call    sub_408546
pop     ecx
retn
sub_4054D8 endp



; Attributes: bp-based frame

sub_40557C proc near

var_10= dword ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
xor     ebx, ebx
push    ebx
lea     ecx, [ebp+var_10]
call    sub_4031A8
mov     dword_42468C, ebx
cmp     esi, 0FFFFFFFEh
jnz     short loc_4055B9
mov     dword_42468C, 1
call    ds:GetOEMCP

loc_4055AB:
cmp     [ebp+var_4], bl
jz      short loc_4055F5
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh
jmp     short loc_4055F5

loc_4055B9:
cmp     esi, 0FFFFFFFDh
jnz     short loc_4055D0
mov     dword_42468C, 1
call    ds:GetACP
jmp     short loc_4055AB

loc_4055D0:
cmp     esi, 0FFFFFFFCh
jnz     short loc_4055E7
mov     eax, [ebp+var_10]
mov     eax, [eax+4]
mov     dword_42468C, 1
jmp     short loc_4055AB

loc_4055E7:
cmp     [ebp+var_4], bl
jz      short loc_4055F3
mov     eax, [ebp+var_8]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_4055F3:
mov     eax, esi

loc_4055F5:
pop     ebx
leave
retn
sub_40557C endp



; Attributes: bp-based frame

sub_4055F8 proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
CPInfo= _cpinfo ptr -18h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
push    edi
call    sub_40557C
mov     edi, eax
xor     esi, esi
mov     [ebp+arg_0], edi
cmp     edi, esi
jnz     short loc_405631

loc_405623:
mov     eax, ebx
call    sub_4052E1

loc_40562A:
xor     eax, eax
jmp     loc_4057CE

loc_405631:
mov     [ebp+var_1C], esi
xor     eax, eax

loc_405636:
cmp     dword_411938[eax], edi
jz      loc_4056D3
inc     [ebp+var_1C]
add     eax, 30h
cmp     eax, 0F0h
jb      short loc_405636
cmp     edi, 0FDE8h
jz      loc_4057CB
cmp     edi, 0FDE9h
jz      loc_4057CB
movzx   eax, di
push    eax             ; CodePage
call    ds:IsValidCodePage
test    eax, eax
jz      loc_4057CB
lea     eax, [ebp+CPInfo]
push    eax             ; lpCPInfo
push    edi             ; CodePage
call    ds:GetCPInfo
test    eax, eax
jz      loc_4057BF
push    101h
lea     eax, [ebx+1Ch]
push    esi
push    eax
call    sub_402FB0
xor     edx, edx
inc     edx
add     esp, 0Ch
mov     [ebx+4], edi
mov     [ebx+0Ch], esi
cmp     [ebp+CPInfo.MaxCharSize], edx
jbe     loc_4057A8
cmp     [ebp+CPInfo.LeadByte], 0
jz      loc_405789
lea     esi, [ebp+CPInfo.LeadByte+1]

loc_4056BD:
mov     cl, [esi]
test    cl, cl
jz      loc_405789
movzx   eax, byte ptr [esi-1]
movzx   ecx, cl
jmp     loc_405779

loc_4056D3:
push    101h
lea     eax, [ebx+1Ch]
push    esi
push    eax
call    sub_402FB0
mov     ecx, [ebp+var_1C]
add     esp, 0Ch
imul    ecx, 30h
mov     [ebp+var_20], esi
lea     esi, unk_411948[ecx]
mov     [ebp+var_1C], esi
jmp     short loc_405723

loc_4056F9:
mov     al, [esi+1]
test    al, al
jz      short loc_405728
movzx   edi, byte ptr [esi]
movzx   eax, al
jmp     short loc_40571A

loc_405708:
mov     eax, [ebp+var_20]
mov     al, byte_411934[eax]
or      [ebx+edi+1Dh], al
movzx   eax, byte ptr [esi+1]
inc     edi

loc_40571A:
cmp     edi, eax
jbe     short loc_405708
mov     edi, [ebp+arg_0]
inc     esi
inc     esi

loc_405723:
cmp     byte ptr [esi], 0
jnz     short loc_4056F9

loc_405728:
mov     esi, [ebp+var_1C]
inc     [ebp+var_20]
add     esi, 8
cmp     [ebp+var_20], 4
mov     [ebp+var_1C], esi
jb      short loc_405723
mov     eax, edi
mov     [ebx+4], edi
mov     dword ptr [ebx+8], 1
call    sub_4052B2
push    6
mov     [ebx+0Ch], eax
lea     eax, [ebx+10h]
lea     ecx, unk_41193C[ecx]
pop     edx

loc_40575A:
mov     si, [ecx]
inc     ecx
mov     [eax], si
inc     ecx
inc     eax
inc     eax
dec     edx
jnz     short loc_40575A

loc_405767:
mov     esi, ebx
call    sub_405345
jmp     loc_40562A

loc_405773:
or      byte ptr [ebx+eax+1Dh], 4
inc     eax

loc_405779:
cmp     eax, ecx
jbe     short loc_405773
inc     esi
inc     esi
cmp     byte ptr [esi-1], 0
jnz     loc_4056BD

loc_405789:
lea     eax, [ebx+1Eh]
mov     ecx, 0FEh

loc_405791:
or      byte ptr [eax], 8
inc     eax
dec     ecx
jnz     short loc_405791
mov     eax, [ebx+4]
call    sub_4052B2
mov     [ebx+0Ch], eax
mov     [ebx+8], edx
jmp     short loc_4057AB

loc_4057A8:
mov     [ebx+8], esi

loc_4057AB:
xor     eax, eax
movzx   ecx, ax
mov     eax, ecx
shl     ecx, 10h
or      eax, ecx
lea     edi, [ebx+10h]
stosd
stosd
stosd
jmp     short loc_405767

loc_4057BF:
cmp     dword_42468C, esi
jnz     loc_405623

loc_4057CB:
or      eax, 0FFFFFFFFh

loc_4057CE:
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    anti_debug
leave
retn
sub_4055F8 endp



; Attributes: bp-based frame

sub_4057DD proc near

var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

; FUNCTION CHUNK AT 00405949 SIZE 0000002E BYTES

push    14h
push    offset stru_40F690
call    __SEH_prolog4
or      [ebp+var_20], 0FFFFFFFFh
call    sub_405F81
mov     edi, eax
mov     [ebp+var_24], edi
call    sub_4054D8
mov     ebx, [edi+68h]
mov     esi, [ebp+arg_0]
call    sub_40557C
mov     [ebp+arg_0], eax
cmp     eax, [ebx+4]
jz      loc_40596A
push    220h
call    sub_4080E3
pop     ecx
mov     ebx, eax
test    ebx, ebx
jz      loc_40596E
mov     ecx, 88h
mov     esi, [edi+68h]
mov     edi, ebx
rep movsd
and     dword ptr [ebx], 0
push    ebx
push    [ebp+arg_0]
call    sub_4055F8
pop     ecx
pop     ecx
mov     [ebp+var_20], eax
test    eax, eax
jnz     loc_405949
mov     esi, [ebp+var_24]
push    dword ptr [esi+68h] ; lpAddend
call    ds:InterlockedDecrement
test    eax, eax
jnz     short loc_40586E
mov     eax, [esi+68h]
cmp     eax, offset unk_411508
jz      short loc_40586E
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_40586E:
mov     [esi+68h], ebx
push    ebx             ; lpAddend
mov     edi, ds:InterlockedIncrement
call    edi ; InterlockedIncrement
test    byte ptr [esi+70h], 2
jnz     loc_40596E
test    byte ptr dword_411A2C, 1
jnz     loc_40596E
push    0Dh
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
mov     eax, [ebx+4]
mov     dword_42469C, eax
mov     eax, [ebx+8]
mov     dword_4246A0, eax
mov     eax, [ebx+0Ch]
mov     dword_4246A4, eax
xor     eax, eax

loc_4058B7:
mov     [ebp+var_1C], eax
cmp     eax, 5
jge     short loc_4058CF
mov     cx, [ebx+eax*2+10h]
mov     word_424690[eax*2], cx
inc     eax
jmp     short loc_4058B7

loc_4058CF:
xor     eax, eax

loc_4058D1:
mov     [ebp+var_1C], eax
cmp     eax, 101h
jge     short loc_4058E8
mov     cl, [eax+ebx+1Ch]
mov     byte_411728[eax], cl
inc     eax
jmp     short loc_4058D1

loc_4058E8:
xor     eax, eax

loc_4058EA:
mov     [ebp+var_1C], eax
cmp     eax, 100h
jge     short loc_405904
mov     cl, [eax+ebx+11Dh]
mov     byte_411830[eax], cl
inc     eax
jmp     short loc_4058EA

loc_405904:             ; lpAddend
push    lpAddend
call    ds:InterlockedDecrement
test    eax, eax
jnz     short loc_405927
mov     eax, lpAddend
cmp     eax, offset unk_411508
jz      short loc_405927
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405927:
mov     lpAddend, ebx
push    ebx             ; lpAddend
call    edi ; InterlockedIncrement
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40593E

loc_40593C:
jmp     short loc_40596E

loc_40593E:
push    0Dh
call    sub_408546
pop     ecx
retn
sub_4057DD endp

jmp     short loc_40596E
; START OF FUNCTION CHUNK FOR sub_4057DD

loc_405949:
cmp     eax, 0FFFFFFFFh
jnz     short loc_40596E
cmp     ebx, offset unk_411508
jz      short loc_40595D
push    ebx             ; lpMem
call    sub_404EF7
pop     ecx

loc_40595D:
call    sub_404899
mov     dword ptr [eax], 16h
jmp     short loc_40596E

loc_40596A:
and     [ebp+var_20], 0

loc_40596E:
mov     eax, [ebp+var_20]
call    __SEH_epilog4
retn
; END OF FUNCTION CHUNK FOR sub_4057DD



sub_405977 proc near
cmp     dword_424F0C, 0
jnz     short loc_405992
push    0FFFFFFFDh
call    sub_4057DD
pop     ecx
mov     dword_424F0C, 1

loc_405992:
xor     eax, eax
retn
sub_405977 endp



; Attributes: bp-based frame

; int __cdecl sub_405995(LPVOID lpMem)
sub_405995 proc near

lpMem= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+lpMem]
mov     eax, [esi+0BCh]
xor     ebx, ebx
push    edi
cmp     eax, ebx
jz      short loc_405A1B
cmp     eax, offset off_411ED8
jz      short loc_405A1B
mov     eax, [esi+0B0h]
cmp     eax, ebx
jz      short loc_405A1B
cmp     [eax], ebx
jnz     short loc_405A1B
mov     eax, [esi+0B8h]
cmp     eax, ebx
jz      short loc_4059E2
cmp     [eax], ebx
jnz     short loc_4059E2
push    eax             ; lpMem
call    sub_404EF7
push    dword ptr [esi+0BCh]
call    sub_409A96
pop     ecx
pop     ecx

loc_4059E2:
mov     eax, [esi+0B4h]
cmp     eax, ebx
jz      short loc_405A03
cmp     [eax], ebx
jnz     short loc_405A03
push    eax             ; lpMem
call    sub_404EF7
push    dword ptr [esi+0BCh]
call    sub_409A51
pop     ecx
pop     ecx

loc_405A03:             ; lpMem
push    dword ptr [esi+0B0h]
call    sub_404EF7
push    dword ptr [esi+0BCh] ; lpMem
call    sub_404EF7
pop     ecx
pop     ecx

loc_405A1B:
mov     eax, [esi+0C0h]
cmp     eax, ebx
jz      short loc_405A69
cmp     [eax], ebx
jnz     short loc_405A69
mov     eax, [esi+0C4h]
sub     eax, 0FEh
push    eax             ; lpMem
call    sub_404EF7
mov     eax, [esi+0CCh]
mov     edi, 80h
sub     eax, edi
push    eax             ; lpMem
call    sub_404EF7
mov     eax, [esi+0D0h]
sub     eax, edi
push    eax             ; lpMem
call    sub_404EF7
push    dword ptr [esi+0C0h] ; lpMem
call    sub_404EF7
add     esp, 10h

loc_405A69:
lea     edi, [esi+0D4h]
mov     eax, [edi]
cmp     eax, offset off_411E18
jz      short loc_405A8F
cmp     [eax+0B4h], ebx
jnz     short loc_405A8F
push    eax
call    sub_4098BC
push    dword ptr [edi] ; lpMem
call    sub_404EF7
pop     ecx
pop     ecx

loc_405A8F:
lea     edi, [esi+50h]
mov     [ebp+lpMem], 6

loc_405A99:
cmp     dword ptr [edi-8], offset unk_411A30
jz      short loc_405AB3
mov     eax, [edi]
cmp     eax, ebx
jz      short loc_405AB3
cmp     [eax], ebx
jnz     short loc_405AB3
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405AB3:
cmp     [edi-4], ebx
jz      short loc_405ACA
mov     eax, [edi+4]
cmp     eax, ebx
jz      short loc_405ACA
cmp     [eax], ebx
jnz     short loc_405ACA
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405ACA:
add     edi, 10h
dec     [ebp+lpMem]
jnz     short loc_405A99
push    esi             ; lpMem
call    sub_404EF7
pop     ecx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_405995 endp



; Attributes: bp-based frame

; int __cdecl sub_405ADE(volatile LONG *lpAddend)
sub_405ADE proc near

lpAddend= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ds:InterlockedIncrement
push    edi
mov     edi, [ebp+lpAddend]
push    edi             ; lpAddend
call    esi ; InterlockedIncrement
mov     eax, [edi+0B0h]
test    eax, eax
jz      short loc_405AFF
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405AFF:
mov     eax, [edi+0B8h]
test    eax, eax
jz      short loc_405B0C
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405B0C:
mov     eax, [edi+0B4h]
test    eax, eax
jz      short loc_405B19
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405B19:
mov     eax, [edi+0C0h]
test    eax, eax
jz      short loc_405B26
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405B26:
lea     ebx, [edi+50h]
mov     [ebp+lpAddend], 6

loc_405B30:
cmp     dword ptr [ebx-8], offset unk_411A30
jz      short loc_405B42
mov     eax, [ebx]
test    eax, eax
jz      short loc_405B42
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405B42:
cmp     dword ptr [ebx-4], 0
jz      short loc_405B52
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_405B52
push    eax             ; lpAddend
call    esi ; InterlockedIncrement

loc_405B52:
add     ebx, 10h
dec     [ebp+lpAddend]
jnz     short loc_405B30
mov     eax, [edi+0D4h]
add     eax, 0B4h
push    eax             ; lpAddend
call    esi ; InterlockedIncrement
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_405ADE endp



; Attributes: bp-based frame

; int __cdecl sub_405B6D(volatile LONG *lpAddend)
sub_405B6D proc near

lpAddend= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+lpAddend]
test    edi, edi
jz      loc_405C01
push    ebx
push    esi
mov     esi, ds:InterlockedDecrement
push    edi             ; lpAddend
call    esi ; InterlockedDecrement
mov     eax, [edi+0B0h]
test    eax, eax
jz      short loc_405B96
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405B96:
mov     eax, [edi+0B8h]
test    eax, eax
jz      short loc_405BA3
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405BA3:
mov     eax, [edi+0B4h]
test    eax, eax
jz      short loc_405BB0
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405BB0:
mov     eax, [edi+0C0h]
test    eax, eax
jz      short loc_405BBD
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405BBD:
lea     ebx, [edi+50h]
mov     [ebp+lpAddend], 6

loc_405BC7:
cmp     dword ptr [ebx-8], offset unk_411A30
jz      short loc_405BD9
mov     eax, [ebx]
test    eax, eax
jz      short loc_405BD9
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405BD9:
cmp     dword ptr [ebx-4], 0
jz      short loc_405BE9
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_405BE9
push    eax             ; lpAddend
call    esi ; InterlockedDecrement

loc_405BE9:
add     ebx, 10h
dec     [ebp+lpAddend]
jnz     short loc_405BC7
mov     eax, [edi+0D4h]
add     eax, 0B4h
push    eax             ; lpAddend
call    esi ; InterlockedDecrement
pop     esi
pop     ebx

loc_405C01:
mov     eax, edi
pop     edi
pop     ebp
retn
sub_405B6D endp




sub_405C06 proc near
test    edi, edi
jz      short loc_405C41
test    eax, eax
jz      short loc_405C41
push    esi
mov     esi, [eax]
cmp     esi, edi
jz      short loc_405C3D
push    edi             ; lpAddend
mov     [eax], edi
call    sub_405ADE
pop     ecx
test    esi, esi
jz      short loc_405C3D
push    esi             ; lpAddend
call    sub_405B6D
cmp     dword ptr [esi], 0
pop     ecx
jnz     short loc_405C3D
cmp     esi, offset unk_411A38
jz      short loc_405C3D
push    esi             ; lpMem
call    sub_405995
pop     ecx

loc_405C3D:
mov     eax, edi
pop     esi
retn

loc_405C41:
xor     eax, eax
retn
sub_405C06 endp



; Attributes: bp-based frame

sub_405C44 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    0Ch
push    offset stru_40F6B0
call    __SEH_prolog4
call    sub_405F81
mov     esi, eax
mov     eax, dword_411A2C
test    [esi+70h], eax
jz      short loc_405C83
cmp     dword ptr [esi+6Ch], 0
jz      short loc_405C83
call    sub_405F81
mov     esi, [eax+6Ch]

loc_405C6F:
test    esi, esi
jnz     short loc_405C7B
push    20h
call    sub_4067E4
pop     ecx

loc_405C7B:
mov     eax, esi
call    __SEH_epilog4
retn

loc_405C83:
push    0Ch
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
lea     eax, [esi+6Ch]
mov     edi, off_411B10
call    sub_405C06
mov     [ebp+var_1C], eax
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_405CAE

loc_405CAC:
jmp     short loc_405C6F

loc_405CAE:
push    0Ch
call    sub_408546
pop     ecx
mov     esi, [ebp+var_1C]
retn
sub_405C44 endp



; Attributes: bp-based frame

sub_405CBA proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    dwTlsIndex      ; dwTlsIndex
mov     esi, ds:TlsGetValue
call    esi ; TlsGetValue
test    eax, eax
jz      short loc_405CF3
mov     eax, dword_411B20
cmp     eax, 0FFFFFFFFh
jz      short loc_405CF3
push    eax
push    dwTlsIndex      ; dwTlsIndex
call    esi ; TlsGetValue
call    eax
test    eax, eax
jz      short loc_405CF3
mov     eax, [eax+1F8h]
jmp     short loc_405D1A

loc_405CF3:
mov     esi, offset ModuleName ; "KERNEL32.DLL"
push    esi             ; lpModuleName
call    ds:GetModuleHandleW
test    eax, eax
jnz     short loc_405D0E
push    esi             ; lpModuleName
call    sub_4067B4
pop     ecx
test    eax, eax
jz      short loc_405D26

loc_405D0E:
push    offset ProcName ; "EncodePointer"
push    eax             ; hModule
call    ds:GetProcAddress

loc_405D1A:
test    eax, eax
jz      short loc_405D26
push    [ebp+arg_0]
call    eax
mov     [ebp+arg_0], eax

loc_405D26:
mov     eax, [ebp+arg_0]
pop     esi
pop     ebp
retn
sub_405CBA endp




sub_405D2C proc near
push    0
call    sub_405CBA
pop     ecx
retn
sub_405D2C endp



; Attributes: bp-based frame

sub_405D35 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    dwTlsIndex      ; dwTlsIndex
mov     esi, ds:TlsGetValue
call    esi ; TlsGetValue
test    eax, eax
jz      short loc_405D6E
mov     eax, dword_411B20
cmp     eax, 0FFFFFFFFh
jz      short loc_405D6E
push    eax
push    dwTlsIndex      ; dwTlsIndex
call    esi ; TlsGetValue
call    eax
test    eax, eax
jz      short loc_405D6E
mov     eax, [eax+1FCh]
jmp     short loc_405D95

loc_405D6E:
mov     esi, offset ModuleName ; "KERNEL32.DLL"
push    esi             ; lpModuleName
call    ds:GetModuleHandleW
test    eax, eax
jnz     short loc_405D89
push    esi             ; lpModuleName
call    sub_4067B4
pop     ecx
test    eax, eax
jz      short loc_405DA1

loc_405D89:
push    offset aDecodepointer ; "DecodePointer"
push    eax             ; hModule
call    ds:GetProcAddress

loc_405D95:
test    eax, eax
jz      short loc_405DA1
push    [ebp+arg_0]
call    eax
mov     [ebp+arg_0], eax

loc_405DA1:
mov     eax, [ebp+arg_0]
pop     esi
pop     ebp
retn
sub_405D35 endp




sub_405DA7 proc near
call    ds:TlsAlloc
retn    4
sub_405DA7 endp




sub_405DB0 proc near
mov     edi, edi
push    esi
push    dwTlsIndex      ; dwTlsIndex
call    ds:TlsGetValue
mov     esi, eax
test    esi, esi
jnz     short loc_405DE0
push    lpTlsValue
call    sub_405D35
pop     ecx
mov     esi, eax
push    esi             ; lpTlsValue
push    dwTlsIndex      ; dwTlsIndex
call    ds:TlsSetValue

loc_405DE0:
mov     eax, esi
pop     esi
retn
sub_405DB0 endp




sub_405DE4 proc near
mov     eax, dword_411B20
cmp     eax, 0FFFFFFFFh
jz      short loc_405E04
push    eax
push    dword_4246D8
call    sub_405D35
pop     ecx
call    eax
or      dword_411B20, 0FFFFFFFFh

loc_405E04:
mov     eax, dwTlsIndex
cmp     eax, 0FFFFFFFFh
jz      short loc_405E1C
push    eax             ; dwTlsIndex
call    ds:TlsFree
or      dwTlsIndex, 0FFFFFFFFh

loc_405E1C:
jmp     sub_4084EF
sub_405DE4 endp



; Attributes: bp-based frame

sub_405E21 proc near

hModule= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    0Ch
push    offset stru_40F6D0
call    __SEH_prolog4
mov     esi, offset ModuleName ; "KERNEL32.DLL"
push    esi             ; lpModuleName
call    ds:GetModuleHandleW
test    eax, eax
jnz     short loc_405E44
push    esi             ; lpModuleName
call    sub_4067B4
pop     ecx

loc_405E44:
mov     [ebp+hModule], eax
mov     esi, [ebp+arg_0]
mov     dword ptr [esi+5Ch], offset unk_411BE8
xor     edi, edi
inc     edi
mov     [esi+14h], edi
test    eax, eax
jz      short loc_405E7F
push    offset ProcName ; "EncodePointer"
push    eax             ; hModule
mov     ebx, ds:GetProcAddress
call    ebx ; GetProcAddress
mov     [esi+1F8h], eax
push    offset aDecodepointer ; "DecodePointer"
push    [ebp+hModule]   ; hModule
call    ebx ; GetProcAddress
mov     [esi+1FCh], eax

loc_405E7F:
mov     [esi+70h], edi
mov     byte ptr [esi+0C8h], 43h
mov     byte ptr [esi+14Bh], 43h
mov     dword ptr [esi+68h], offset unk_411508
push    0Dh
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
push    dword ptr [esi+68h] ; lpAddend
call    ds:InterlockedIncrement
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_405EF6

loc_405EB8:
push    0Ch
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
mov     eax, [ebp+arg_4]
mov     [esi+6Ch], eax
test    eax, eax
jnz     short loc_405ED5
mov     eax, off_411B10
mov     [esi+6Ch], eax

loc_405ED5:             ; lpAddend
push    dword ptr [esi+6Ch]
call    sub_405ADE
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_405EFF

loc_405EEA:
call    __SEH_epilog4
retn

loc_405EF0:
xor     edi, edi
inc     edi
mov     esi, [ebp+arg_0]

loc_405EF6:
push    0Dh
call    sub_408546
pop     ecx
retn

loc_405EFF:
push    0Ch
call    sub_408546
pop     ecx
retn
sub_405E21 endp




sub_405F08 proc near
mov     edi, edi
push    esi
push    edi
call    ds:GetLastError
push    dword_411B20
mov     edi, eax
call    sub_405DB0
call    eax
mov     esi, eax
test    esi, esi
jnz     short loc_405F75
push    214h
push    1
call    sub_408128
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_405F75
push    esi
push    dword_411B20
push    dword_4246D4
call    sub_405D35
pop     ecx
call    eax
test    eax, eax
jz      short loc_405F6C
push    0
push    esi
call    sub_405E21
pop     ecx
pop     ecx
call    ds:GetCurrentThreadId
or      dword ptr [esi+4], 0FFFFFFFFh
mov     [esi], eax
jmp     short loc_405F75

loc_405F6C:             ; lpMem
push    esi
call    sub_404EF7
pop     ecx
xor     esi, esi

loc_405F75:             ; dwErrCode
push    edi
call    ds:SetLastError
pop     edi
mov     eax, esi
pop     esi
retn
sub_405F08 endp




sub_405F81 proc near
mov     edi, edi
push    esi
call    sub_405F08
mov     esi, eax
test    esi, esi
jnz     short loc_405F97
push    10h
call    sub_4067E4
pop     ecx

loc_405F97:
mov     eax, esi
pop     esi
retn
sub_405F81 endp



; Attributes: bp-based frame

; int __stdcall sub_405F9B(LPVOID lpMem)
sub_405F9B proc near

ms_exc= CPPEH_RECORD ptr -18h
lpMem= dword ptr  8

push    8
push    offset stru_40F6F8
call    __SEH_prolog4
mov     esi, [ebp+lpMem]
test    esi, esi
jz      loc_4060AA
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_405FC0
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405FC0:
mov     eax, [esi+2Ch]
test    eax, eax
jz      short loc_405FCE
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405FCE:
mov     eax, [esi+34h]
test    eax, eax
jz      short loc_405FDC
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405FDC:
mov     eax, [esi+3Ch]
test    eax, eax
jz      short loc_405FEA
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405FEA:
mov     eax, [esi+40h]
test    eax, eax
jz      short loc_405FF8
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_405FF8:
mov     eax, [esi+44h]
test    eax, eax
jz      short loc_406006
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_406006:
mov     eax, [esi+48h]
test    eax, eax
jz      short loc_406014
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_406014:
mov     eax, [esi+5Ch]
cmp     eax, offset unk_411BE8
jz      short loc_406025
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_406025:
push    0Dh
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
mov     edi, [esi+68h]
test    edi, edi
jz      short loc_406052
push    edi             ; lpAddend
call    ds:InterlockedDecrement
test    eax, eax
jnz     short loc_406052
cmp     edi, offset unk_411508
jz      short loc_406052
push    edi             ; lpMem
call    sub_404EF7
pop     ecx

loc_406052:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4060B5

loc_40605E:
push    0Ch
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], 1
mov     edi, [esi+6Ch]
test    edi, edi
jz      short loc_406097
push    edi             ; lpAddend
call    sub_405B6D
pop     ecx
cmp     edi, off_411B10
jz      short loc_406097
cmp     edi, offset unk_411A38
jz      short loc_406097
cmp     dword ptr [edi], 0
jnz     short loc_406097
push    edi             ; lpMem
call    sub_405995
pop     ecx

loc_406097:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4060C1

loc_4060A3:             ; lpMem
push    esi
call    sub_404EF7
pop     ecx

loc_4060AA:
call    __SEH_epilog4
retn    4

loc_4060B2:
mov     esi, [ebp+lpMem]

loc_4060B5:
push    0Dh
call    sub_408546
pop     ecx
retn

loc_4060BE:
mov     esi, [ebp+lpMem]

loc_4060C1:
push    0Ch
call    sub_408546
pop     ecx
retn
sub_405F9B endp




sub_4060CA proc near
mov     edi, edi
push    esi
push    edi
mov     esi, offset ModuleName ; "KERNEL32.DLL"
push    esi             ; lpModuleName
call    ds:GetModuleHandleW
test    eax, eax
jnz     short loc_4060E5
push    esi             ; lpModuleName
call    sub_4067B4
pop     ecx

loc_4060E5:
mov     edi, eax
test    edi, edi
jz      loc_40624D
mov     esi, ds:GetProcAddress
push    offset aFlsalloc ; "FlsAlloc"
push    edi             ; hModule
call    esi ; GetProcAddress
push    offset aFlsgetvalue ; "FlsGetValue"
push    edi             ; hModule
mov     dword_4246CC, eax
call    esi ; GetProcAddress
push    offset aFlssetvalue ; "FlsSetValue"
push    edi             ; hModule
mov     lpTlsValue, eax
call    esi ; GetProcAddress
push    offset aFlsfree ; "FlsFree"
push    edi             ; hModule
mov     dword_4246D4, eax
call    esi ; GetProcAddress
cmp     dword_4246CC, 0
mov     esi, ds:TlsSetValue
mov     dword_4246D8, eax
jz      short loc_40614E
cmp     lpTlsValue, 0
jz      short loc_40614E
cmp     dword_4246D4, 0
jz      short loc_40614E
test    eax, eax
jnz     short loc_406172

loc_40614E:
mov     eax, ds:TlsGetValue
mov     lpTlsValue, eax
mov     eax, ds:TlsFree
mov     dword_4246CC, offset sub_405DA7
mov     dword_4246D4, esi
mov     dword_4246D8, eax

loc_406172:
call    ds:TlsAlloc
mov     dwTlsIndex, eax
cmp     eax, 0FFFFFFFFh
jz      loc_406252
push    lpTlsValue      ; lpTlsValue
push    eax             ; dwTlsIndex
call    esi ; TlsSetValue
test    eax, eax
jz      loc_406252
call    sub_406A9E
push    dword_4246CC
call    sub_405CBA
push    lpTlsValue
mov     dword_4246CC, eax
call    sub_405CBA
push    dword_4246D4
mov     lpTlsValue, eax
call    sub_405CBA
push    dword_4246D8
mov     dword_4246D4, eax
call    sub_405CBA
add     esp, 10h
mov     dword_4246D8, eax
call    sub_4084A4
test    eax, eax
jz      short loc_40624D
push    offset sub_405F9B
push    dword_4246CC
call    sub_405D35
pop     ecx
call    eax
mov     dword_411B20, eax
cmp     eax, 0FFFFFFFFh
jz      short loc_40624D
push    214h
push    1
call    sub_408128
mov     esi, eax
pop     ecx
pop     ecx
test    esi, esi
jz      short loc_40624D
push    esi
push    dword_411B20
push    dword_4246D4
call    sub_405D35
pop     ecx
call    eax
test    eax, eax
jz      short loc_40624D
push    0
push    esi
call    sub_405E21
pop     ecx
pop     ecx
call    ds:GetCurrentThreadId
or      dword ptr [esi+4], 0FFFFFFFFh
mov     [esi], eax
xor     eax, eax
inc     eax
jmp     short loc_406254

loc_40624D:
call    sub_405DE4

loc_406252:
xor     eax, eax

loc_406254:
pop     edi
pop     esi
retn
sub_4060CA endp



; Attributes: bp-based frame

sub_406257 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jz      short loc_406275
sub     eax, 8
cmp     dword ptr [eax], 0DDDDh
jnz     short loc_406275
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_406275:
pop     ebp
retn
sub_406257 endp



; Attributes: bp-based frame

; int __cdecl sub_406277(LCID Locale, DWORD dwMapFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int)
sub_406277 proc near

var_14= dword ptr -14h
lpMem= dword ptr -10h
lpWideCharStr= dword ptr -0Ch
cchWideChar= dword ptr -8
var_4= dword ptr -4
Locale= dword ptr  8
dwMapFlags= dword ptr  0Ch
lpMultiByteStr= dword ptr  10h
cbMultiByte= dword ptr  14h
lpDestStr= dword ptr  18h
cchDest= dword ptr  1Ch
CodePage= dword ptr  20h
arg_1C= dword ptr  24h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     esi, ecx
cmp     dword_4246DC, ebx
jnz     short loc_4062D0
push    ebx             ; cchDest
push    ebx             ; lpDestStr
xor     edi, edi
inc     edi
push    edi             ; cchSrc
push    offset SrcStr   ; lpSrcStr
push    100h            ; dwMapFlags
push    ebx             ; Locale
call    ds:LCMapStringW
test    eax, eax
jz      short loc_4062BB
mov     dword_4246DC, edi
jmp     short loc_4062D0

loc_4062BB:
call    ds:GetLastError
cmp     eax, 78h
jnz     short loc_4062D0
mov     dword_4246DC, 2

loc_4062D0:
cmp     [ebp+cbMultiByte], ebx
jle     short loc_4062F7
mov     ecx, [ebp+cbMultiByte]
mov     eax, [ebp+lpMultiByteStr]

loc_4062DB:
dec     ecx
cmp     [eax], bl
jz      short loc_4062E8
inc     eax
cmp     ecx, ebx
jnz     short loc_4062DB
or      ecx, 0FFFFFFFFh

loc_4062E8:
mov     eax, [ebp+cbMultiByte]
sub     eax, ecx
dec     eax
cmp     eax, [ebp+cbMultiByte]
jge     short loc_4062F4
inc     eax

loc_4062F4:
mov     [ebp+cbMultiByte], eax

loc_4062F7:
mov     eax, dword_4246DC
cmp     eax, 2
jz      loc_4064B1
cmp     eax, ebx
jz      loc_4064B1
cmp     eax, 1
jnz     loc_4064E2
mov     [ebp+cchWideChar], ebx
cmp     [ebp+CodePage], ebx
jnz     short loc_406326
mov     eax, [esi]
mov     eax, [eax+4]
mov     [ebp+CodePage], eax

loc_406326:
mov     esi, ds:MultiByteToWideChar
xor     eax, eax
cmp     [ebp+arg_1C], ebx
push    ebx             ; cchWideChar
push    ebx             ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
setnz   al
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
lea     eax, ds:1[eax*8]
push    eax             ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    esi ; MultiByteToWideChar
mov     edi, eax
cmp     edi, ebx
jz      loc_4064E2
jle     short loc_406398
push    0FFFFFFE0h
xor     edx, edx
pop     eax
div     edi
cmp     eax, 2
jb      short loc_406398
lea     eax, [edi+edi+8]
cmp     eax, 400h
ja      short loc_40637F
call    __alloca_probe_16
mov     eax, esp
cmp     eax, ebx
jz      short loc_406393
mov     dword ptr [eax], 0CCCCh
jmp     short loc_406390

loc_40637F:
push    eax
call    sub_409F9C
pop     ecx
cmp     eax, ebx
jz      short loc_406393
mov     dword ptr [eax], 0DDDDh

loc_406390:
add     eax, 8

loc_406393:
mov     [ebp+lpWideCharStr], eax
jmp     short loc_40639B

loc_406398:
mov     [ebp+lpWideCharStr], ebx

loc_40639B:
cmp     [ebp+lpWideCharStr], ebx
jz      loc_4064E2
push    edi             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    1               ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    esi ; MultiByteToWideChar
test    eax, eax
jz      loc_4064A0
mov     esi, ds:LCMapStringW
push    ebx             ; cchDest
push    ebx             ; lpDestStr
push    edi             ; cchSrc
push    [ebp+lpWideCharStr] ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    esi ; LCMapStringW
mov     ecx, eax
mov     [ebp+cchWideChar], ecx
cmp     ecx, ebx
jz      loc_4064A0
test    [ebp+dwMapFlags], 400h
jz      short loc_406410
cmp     [ebp+cchDest], ebx
jz      loc_4064A0
cmp     ecx, [ebp+cchDest]
jg      loc_4064A0
push    [ebp+cchDest]   ; cchDest
push    [ebp+lpDestStr] ; lpDestStr
push    edi             ; cchSrc
push    [ebp+lpWideCharStr] ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    esi ; LCMapStringW
jmp     loc_4064A0

loc_406410:
cmp     ecx, ebx
jle     short loc_406459
push    0FFFFFFE0h
xor     edx, edx
pop     eax
div     ecx
cmp     eax, 2
jb      short loc_406459
lea     eax, [ecx+ecx+8]
cmp     eax, 400h
ja      short loc_406441
call    __alloca_probe_16
mov     esi, esp
cmp     esi, ebx
jz      short loc_4064A0
mov     dword ptr [esi], 0CCCCh
add     esi, 8
jmp     short loc_40645B

loc_406441:
push    eax
call    sub_409F9C
pop     ecx
cmp     eax, ebx
jz      short loc_406455
mov     dword ptr [eax], 0DDDDh
add     eax, 8

loc_406455:
mov     esi, eax
jmp     short loc_40645B

loc_406459:
xor     esi, esi

loc_40645B:
cmp     esi, ebx
jz      short loc_4064A0
push    [ebp+cchWideChar] ; cchDest
push    esi             ; lpDestStr
push    edi             ; cchSrc
push    [ebp+lpWideCharStr] ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    ds:LCMapStringW
test    eax, eax
jz      short loc_406499
push    ebx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
cmp     [ebp+cchDest], ebx
jnz     short loc_406482
push    ebx
push    ebx
jmp     short loc_406488

loc_406482:             ; cbMultiByte
push    [ebp+cchDest]
push    [ebp+lpDestStr] ; lpMultiByteStr

loc_406488:             ; cchWideChar
push    [ebp+cchWideChar]
push    esi             ; lpWideCharStr
push    ebx             ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    ds:WideCharToMultiByte
mov     [ebp+cchWideChar], eax

loc_406499:
push    esi
call    sub_406257
pop     ecx

loc_4064A0:
push    [ebp+lpWideCharStr]
call    sub_406257
mov     eax, [ebp+cchWideChar]
pop     ecx
jmp     loc_40660A

loc_4064B1:
mov     [ebp+lpWideCharStr], ebx
mov     [ebp+lpMem], ebx
cmp     [ebp+Locale], ebx
jnz     short loc_4064C4
mov     eax, [esi]
mov     eax, [eax+14h]
mov     [ebp+Locale], eax

loc_4064C4:
cmp     [ebp+CodePage], ebx
jnz     short loc_4064D1
mov     eax, [esi]
mov     eax, [eax+4]
mov     [ebp+CodePage], eax

loc_4064D1:             ; Locale
push    [ebp+Locale]
call    sub_409D50
pop     ecx
mov     [ebp+var_14], eax
cmp     eax, 0FFFFFFFFh
jnz     short loc_4064E9

loc_4064E2:
xor     eax, eax
jmp     loc_40660A

loc_4064E9:
cmp     eax, [ebp+CodePage]
jz      loc_4065CD
push    ebx             ; int
push    ebx             ; int
lea     ecx, [ebp+cbMultiByte]
push    ecx             ; int
push    [ebp+lpMultiByteStr] ; int
push    eax             ; UINT
push    [ebp+CodePage]  ; CodePage
call    sub_409D99
add     esp, 18h
mov     [ebp+lpWideCharStr], eax
cmp     eax, ebx
jz      short loc_4064E2
mov     esi, ds:LCMapStringA
push    ebx             ; cchDest
push    ebx             ; lpDestStr
push    [ebp+cbMultiByte] ; cchSrc
push    eax             ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    esi ; LCMapStringA
mov     [ebp+cchWideChar], eax
cmp     eax, ebx
jnz     short loc_406530

loc_406529:
xor     esi, esi
jmp     loc_4065E7

loc_406530:
jle     short loc_40656F
cmp     eax, 0FFFFFFE0h
ja      short loc_40656F
add     eax, 8
cmp     eax, 400h
ja      short loc_406557
call    __alloca_probe_16
mov     edi, esp
cmp     edi, ebx
jz      short loc_406529
mov     dword ptr [edi], 0CCCCh
add     edi, 8
jmp     short loc_406571

loc_406557:
push    eax
call    sub_409F9C
pop     ecx
cmp     eax, ebx
jz      short loc_40656B
mov     dword ptr [eax], 0DDDDh
add     eax, 8

loc_40656B:
mov     edi, eax
jmp     short loc_406571

loc_40656F:
xor     edi, edi

loc_406571:
cmp     edi, ebx
jz      short loc_406529
push    [ebp+cchWideChar]
push    ebx
push    edi
call    sub_402FB0
add     esp, 0Ch
push    [ebp+cchWideChar] ; cchDest
push    edi             ; lpDestStr
push    [ebp+cbMultiByte] ; cchSrc
push    [ebp+lpWideCharStr] ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    esi ; LCMapStringA
mov     [ebp+cchWideChar], eax
cmp     eax, ebx
jnz     short loc_40659F
xor     esi, esi
jmp     short loc_4065C4

loc_40659F:             ; int
push    [ebp+cchDest]
lea     eax, [ebp+cchWideChar]
push    [ebp+lpDestStr] ; int
push    eax             ; int
push    edi             ; int
push    [ebp+CodePage]  ; UINT
push    [ebp+var_14]    ; CodePage
call    sub_409D99
mov     esi, eax
mov     [ebp+lpMem], esi
add     esp, 18h
neg     esi
sbb     esi, esi
and     esi, [ebp+cchWideChar]

loc_4065C4:
push    edi
call    sub_406257
pop     ecx
jmp     short loc_4065E7

loc_4065CD:             ; cchDest
push    [ebp+cchDest]
push    [ebp+lpDestStr] ; lpDestStr
push    [ebp+cbMultiByte] ; cchSrc
push    [ebp+lpMultiByteStr] ; lpSrcStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    ds:LCMapStringA
mov     esi, eax

loc_4065E7:
cmp     [ebp+lpWideCharStr], ebx
jz      short loc_4065F5
push    [ebp+lpWideCharStr] ; lpMem
call    sub_404EF7
pop     ecx

loc_4065F5:
mov     eax, [ebp+lpMem]
cmp     eax, ebx
jz      short loc_406608
cmp     [ebp+lpDestStr], eax
jz      short loc_406608
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_406608:
mov     eax, esi

loc_40660A:
lea     esp, [ebp-20h]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
leave
retn
sub_406277 endp



; Attributes: bp-based frame

; int __cdecl sub_40661C(int, LCID Locale, DWORD dwMapFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int)
sub_40661C proc near

var_10= byte ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4
arg_0= dword ptr  8
Locale= dword ptr  0Ch
dwMapFlags= dword ptr  10h
lpMultiByteStr= dword ptr  14h
cbMultiByte= dword ptr  18h
lpDestStr= dword ptr  1Ch
cchDest= dword ptr  20h
CodePage= dword ptr  24h
arg_20= dword ptr  28h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    [ebp+arg_0]
lea     ecx, [ebp+var_10]
call    sub_4031A8
push    [ebp+arg_20]    ; int
lea     ecx, [ebp+var_10]
push    [ebp+CodePage]  ; CodePage
push    [ebp+cchDest]   ; cchDest
push    [ebp+lpDestStr] ; lpDestStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    [ebp+dwMapFlags] ; dwMapFlags
push    [ebp+Locale]    ; Locale
call    sub_406277
add     esp, 20h
cmp     [ebp+var_4], 0
jz      short locret_40665F
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_40665F:
leave
retn
sub_40661C endp



; Attributes: bp-based frame

sub_406661 proc near

var_10= dword ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4
arg_0= byte ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    [ebp+arg_4]
lea     ecx, [ebp+var_10]
call    sub_4031A8
movzx   eax, [ebp+arg_0]
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+0C8h]
movzx   eax, word ptr [ecx+eax*2]
and     eax, 8000h
cmp     [ebp+var_4], 0
jz      short locret_406697
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_406697:
leave
retn
sub_406661 endp



; Attributes: bp-based frame

sub_406699 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    0
push    [ebp+arg_0]
call    sub_406661
pop     ecx
pop     ecx
pop     ebp
retn
sub_406699 endp



; Attributes: bp-based frame

sub_4066AC proc near

var_18= dword ptr -18h
var_10= dword ptr -10h
var_C= byte ptr -0Ch
MultiByteStr= byte ptr -8
var_7= byte ptr -7
var_6= byte ptr -6
CharType= word ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    [ebp+arg_8]
lea     ecx, [ebp+var_18]
call    sub_4031A8
mov     ebx, [ebp+arg_0]
lea     eax, [ebx+1]
cmp     eax, 100h
ja      short loc_4066DC
mov     eax, [ebp+var_18]
mov     eax, [eax+0C8h]
movzx   eax, word ptr [eax+ebx*2]
jmp     short loc_406751

loc_4066DC:
mov     [ebp+arg_0], ebx
sar     [ebp+arg_0], 8
lea     eax, [ebp+var_18]
push    eax
mov     eax, [ebp+arg_0]
and     eax, 0FFh
push    eax
call    sub_406661
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_40670D
mov     al, byte ptr [ebp+arg_0]
push    2
mov     [ebp+MultiByteStr], al
mov     [ebp+var_7], bl
mov     [ebp+var_6], 0
pop     ecx
jmp     short loc_406717

loc_40670D:
xor     ecx, ecx
mov     [ebp+MultiByteStr], bl
mov     [ebp+var_7], 0
inc     ecx

loc_406717:
mov     eax, [ebp+var_18]
push    1               ; int
push    dword ptr [eax+14h] ; Locale
push    dword ptr [eax+4] ; CodePage
lea     eax, [ebp+CharType]
push    eax             ; lpCharType
push    ecx             ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
lea     eax, [ebp+var_18]
push    1               ; dwInfoType
push    eax             ; int
call    sub_40987A
add     esp, 20h
test    eax, eax
jnz     short loc_40674D
cmp     [ebp+var_C], al
jz      short loc_406749
mov     eax, [ebp+var_10]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_406749:
xor     eax, eax
jmp     short loc_406761

loc_40674D:
movzx   eax, [ebp+CharType]

loc_406751:
and     eax, [ebp+arg_4]
cmp     [ebp+var_C], 0
jz      short loc_406761
mov     ecx, [ebp+var_10]
and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_406761:
pop     ebx
leave
retn
sub_4066AC endp



; Attributes: bp-based frame

sub_406764 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     dword ptr [eax], 0E06D7363h
jnz     short loc_4067A0
cmp     dword ptr [eax+10h], 3
jnz     short loc_4067A0
mov     eax, [eax+14h]
cmp     eax, 19930520h
jz      short loc_40679B
cmp     eax, 19930521h
jz      short loc_40679B
cmp     eax, 19930522h
jz      short loc_40679B
cmp     eax, 1994000h
jnz     short loc_4067A0

loc_40679B:
call    sub_40A09C

loc_4067A0:
xor     eax, eax
pop     ebp
retn    4
sub_406764 endp

push    offset sub_406764
call    ds:SetUnhandledExceptionFilter
xor     eax, eax
retn


; Attributes: bp-based frame

; int __cdecl sub_4067B4(LPCWSTR lpModuleName)
sub_4067B4 proc near

lpModuleName= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    edi
mov     edi, 3E8h

loc_4067BF:             ; dwMilliseconds
push    edi
call    ds:Sleep
push    [ebp+lpModuleName] ; lpModuleName
call    ds:GetModuleHandleW
add     edi, 3E8h
cmp     edi, 0EA60h
ja      short loc_4067E1
test    eax, eax
jz      short loc_4067BF

loc_4067E1:
pop     edi
pop     ebp
retn
sub_4067B4 endp



; Attributes: bp-based frame

sub_4067E4 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
call    sub_406C97
push    [ebp+arg_0]
call    sub_406AEC
push    off_411B28
call    sub_405D35
push    0FFh
call    eax
add     esp, 0Ch
pop     ebp
retn
sub_4067E4 endp



; Attributes: bp-based frame

sub_40680D proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    offset aMscoreeDll ; "mscoree.dll"
call    ds:GetModuleHandleW
test    eax, eax
jz      short loc_406836
push    offset aCorexitprocess ; "CorExitProcess"
push    eax             ; hModule
call    ds:GetProcAddress
test    eax, eax
jz      short loc_406836
push    [ebp+arg_0]
call    eax

loc_406836:
pop     ebp
retn
sub_40680D endp



; Attributes: noreturn bp-based frame

; void __cdecl __noreturn sub_406838(UINT uExitCode)
sub_406838 proc near

uExitCode= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+uExitCode]
call    sub_40680D
pop     ecx
push    [ebp+uExitCode] ; uExitCode
call    ds:ExitProcess
sub_406838 endp

align 10h



sub_406850 proc near
push    8
call    sub_408620
pop     ecx
retn
sub_406850 endp




sub_406859 proc near
push    8
call    sub_408546
pop     ecx
retn
sub_406859 endp



; Attributes: bp-based frame

sub_406862 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, eax
jmp     short loc_406877

loc_40686C:
mov     eax, [esi]
test    eax, eax
jz      short loc_406874
call    eax

loc_406874:
add     esi, 4

loc_406877:
cmp     esi, [ebp+arg_0]
jb      short loc_40686C
pop     esi
pop     ebp
retn
sub_406862 endp



; Attributes: bp-based frame

sub_40687F proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
jmp     short loc_40689B

loc_40688C:
test    eax, eax
jnz     short loc_4068A0
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_406898
call    ecx

loc_406898:
add     esi, 4

loc_40689B:
cmp     esi, [ebp+arg_4]
jb      short loc_40688C

loc_4068A0:
pop     esi
pop     ebp
retn
sub_40687F endp



; Attributes: bp-based frame

sub_4068A3 proc near

var_4= dword ptr -4
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
cmp     dword_424F10, 0
jz      short loc_4068CA
push    offset dword_424F10
call    sub_408760
pop     ecx
test    eax, eax
jz      short loc_4068CA
push    [ebp+arg_0]
call    dword_424F10
pop     ecx

loc_4068CA:
call    sub_4080C2
push    offset unk_40E1AC
push    offset unk_40E194
call    sub_40687F
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_406926
push    offset byte_407574
call    sub_40A20D
mov     eax, offset unk_40E18C
mov     [esp+4+var_4], offset unk_40E190
call    sub_406862
cmp     dword_424F14, 0
pop     ecx
jz      short loc_406924
push    offset dword_424F14
call    sub_408760
pop     ecx
test    eax, eax
jz      short loc_406924
push    0
push    2
push    0
call    dword_424F14

loc_406924:
xor     eax, eax

loc_406926:
pop     ebp
retn
sub_4068A3 endp



; Attributes: bp-based frame

; int __cdecl sub_406928(UINT uExitCode, int, int)
sub_406928 proc near

var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
uExitCode= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    18h
push    offset stru_40F720
call    __SEH_prolog4
push    8
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
xor     ebx, ebx
inc     ebx
cmp     dword_424710, ebx
jz      loc_406A14
mov     dword_42470C, ebx
mov     al, byte ptr [ebp+arg_8]
mov     byte_424708, al
cmp     [ebp+arg_4], 0
jnz     loc_406A04
push    dword_424F08
call    sub_405D35
pop     ecx
mov     edi, eax
mov     [ebp+var_28], edi
test    edi, edi
jz      short loc_4069F4
push    dword_424F04
call    sub_405D35
pop     ecx
mov     esi, eax
mov     [ebp+var_24], esi
mov     [ebp+var_1C], edi
mov     [ebp+var_20], esi

loc_406993:
sub     esi, 4
mov     [ebp+var_24], esi
cmp     esi, edi
jb      short loc_4069F4
call    sub_405D2C
cmp     [esi], eax
jz      short loc_406993
cmp     esi, edi
jb      short loc_4069F4
push    dword ptr [esi]
call    sub_405D35
mov     edi, eax
call    sub_405D2C
mov     [esi], eax
call    edi
push    dword_424F08
call    sub_405D35
mov     edi, eax
push    dword_424F04
call    sub_405D35
add     esp, 0Ch
cmp     [ebp+var_1C], edi
jnz     short loc_4069E1
cmp     [ebp+var_20], eax
jz      short loc_4069EF

loc_4069E1:
mov     [ebp+var_1C], edi
mov     [ebp+var_28], edi
mov     [ebp+var_20], eax
mov     esi, eax
mov     [ebp+var_24], esi

loc_4069EF:
mov     edi, [ebp+var_28]
jmp     short loc_406993

loc_4069F4:
push    offset unk_40E1C0
mov     eax, offset unk_40E1B4
call    sub_406862
pop     ecx

loc_406A04:
push    offset unk_40E1C8
mov     eax, offset unk_40E1C4
call    sub_406862
pop     ecx

loc_406A14:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_406A3F

loc_406A20:
cmp     [ebp+arg_8], 0
jnz     short loc_406A4E
mov     dword_424710, ebx
push    8
call    sub_408546
pop     ecx
push    [ebp+uExitCode] ; uExitCode
call    sub_406838

loc_406A3C:
xor     ebx, ebx
inc     ebx

loc_406A3F:
cmp     [ebp+arg_8], 0
jz      short loc_406A4D
push    8
call    sub_408546
pop     ecx

loc_406A4D:
retn

loc_406A4E:
call    __SEH_epilog4
retn
sub_406928 endp



; Attributes: bp-based frame

; int __cdecl sub_406A54(UINT uExitCode)
sub_406A54 proc near

uExitCode= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    0               ; int
push    0               ; int
push    [ebp+uExitCode] ; uExitCode
call    sub_406928
add     esp, 0Ch
pop     ebp
retn
sub_406A54 endp



; Attributes: bp-based frame

; int __cdecl sub_406A6A(UINT uExitCode)
sub_406A6A proc near

uExitCode= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    0               ; int
push    1               ; int
push    [ebp+uExitCode] ; uExitCode
call    sub_406928
add     esp, 0Ch
pop     ebp
retn
sub_406A6A endp




sub_406A80 proc near
push    1               ; int
push    0               ; int
push    0               ; uExitCode
call    sub_406928
add     esp, 0Ch
retn
sub_406A80 endp




sub_406A8F proc near
push    1               ; int
push    1               ; int
push    0               ; uExitCode
call    sub_406928
add     esp, 0Ch
retn
sub_406A8F endp




sub_406A9E proc near
mov     edi, edi
push    esi
call    sub_405D2C
mov     esi, eax
push    esi
call    sub_40A454
push    esi
call    sub_408653
push    esi
call    sub_4046FA
push    esi
call    sub_40A445
push    esi
call    sub_40A436
push    esi
call    sub_40A224
push    esi
call    nullsub_1
push    esi
call    sub_40A0D5
push    offset sub_406A6A
call    sub_405CBA
add     esp, 24h
mov     off_411B28, eax
pop     esi
retn
sub_406A9E endp



; Attributes: bp-based frame

sub_406AEC proc near

NumberOfBytesWritten= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
xor     esi, esi
xor     edi, edi
mov     [ebp+var_4], edi

loc_406B00:
cmp     ebx, dword_411B30[edi*8]
jz      short loc_406B12
inc     edi
mov     [ebp+var_4], edi
cmp     edi, 17h
jb      short loc_406B00

loc_406B12:
cmp     edi, 17h
jnb     loc_406C92
push    3
call    sub_40A5F4
pop     ecx
cmp     eax, 1
jz      loc_406C60
push    3
call    sub_40A5F4
pop     ecx
test    eax, eax
jnz     short loc_406B45
cmp     dword_411000, 1
jz      loc_406C60

loc_406B45:
cmp     ebx, 0FCh
jz      loc_406C92
push    offset aRuntimeErrorPr ; "Runtime Error!\n\nProgram: "
mov     ebx, 314h
push    ebx
mov     edi, offset unk_424718
push    edi
call    sub_409C9B
add     esp, 0Ch
test    eax, eax
jz      short loc_406B7B
push    esi
push    esi
push    esi
push    esi
push    esi
call    sub_404709
add     esp, 14h

loc_406B7B:             ; nSize
push    104h
mov     esi, offset Filename
push    esi             ; lpFilename
push    0               ; hModule
mov     byte_424835, 0
call    ds:GetModuleFileNameA
test    eax, eax
jnz     short loc_406BBF
push    offset aProgramNameUnk ; "<program name unknown>"
push    2FBh
push    esi
call    sub_409C9B
add     esp, 0Ch
test    eax, eax
jz      short loc_406BBF
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    sub_404709
add     esp, 14h

loc_406BBF:
push    esi
call    strlen_to_eax   ; length -> eax
                        ;
inc     eax
pop     ecx
cmp     eax, 3Ch
jbe     short loc_406C04
push    esi
call    strlen_to_eax   ; length -> eax
                        ;
sub     esi, 3Bh
add     eax, esi
push    3
mov     ecx, offset unk_424A2C
push    offset asc_40E90C ; "..."
sub     ecx, eax
push    ecx
push    eax
call    sub_409BE6
add     esp, 14h
test    eax, eax
jz      short loc_406C04
xor     esi, esi
push    esi
push    esi
push    esi
push    esi
push    esi
call    sub_404709
add     esp, 14h
jmp     short loc_406C06

loc_406C04:
xor     esi, esi

loc_406C06:
push    offset asc_40E908 ; "\n\n"
push    ebx
push    edi
call    sub_409B24
add     esp, 0Ch
test    eax, eax
jz      short loc_406C26
push    esi
push    esi
push    esi
push    esi
push    esi
call    sub_404709
add     esp, 14h

loc_406C26:
mov     eax, [ebp+var_4]
push    off_411B34[eax*8]
push    ebx
push    edi
call    sub_409B24
add     esp, 0Ch
test    eax, eax
jz      short loc_406C4B
push    esi
push    esi
push    esi
push    esi
push    esi
call    sub_404709
add     esp, 14h

loc_406C4B:
push    12010h
push    offset aMicrosoftVisua ; "Microsoft Visual C++ Runtime Library"
push    edi
call    sub_40A48B
add     esp, 0Ch
jmp     short loc_406C92

loc_406C60:             ; nStdHandle
push    0FFFFFFF4h
call    ds:GetStdHandle
mov     ebx, eax
cmp     ebx, esi
jz      short loc_406C92
cmp     ebx, 0FFFFFFFFh
jz      short loc_406C92
push    0               ; lpOverlapped
lea     eax, [ebp+NumberOfBytesWritten]
push    eax             ; lpNumberOfBytesWritten
lea     esi, ds:411B34h[edi*8]
push    dword ptr [esi]
call    strlen_to_eax   ; length -> eax
                        ;
pop     ecx
push    eax             ; nNumberOfBytesToWrite
push    dword ptr [esi] ; lpBuffer
push    ebx             ; hFile
call    ds:WriteFile

loc_406C92:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_406AEC endp




sub_406C97 proc near
push    3
call    sub_40A5F4
pop     ecx
cmp     eax, 1
jz      short loc_406CB9
push    3
call    sub_40A5F4
pop     ecx
test    eax, eax
jnz     short locret_406CCF
cmp     dword_411000, 1
jnz     short locret_406CCF

loc_406CB9:
push    0FCh
call    sub_406AEC
push    0FFh
call    sub_406AEC
pop     ecx
pop     ecx

locret_406CCF:
retn
sub_406C97 endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]


; Attributes: bp-based frame

sub_406CD1 proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
call    sub_405F08
mov     esi, eax
test    esi, esi
jz      loc_406E2E
mov     edx, [esi+5Ch]
mov     eax, dword_411C6C
push    edi
mov     edi, [ebp+arg_0]
mov     ecx, edx
push    ebx

loc_406CF7:
cmp     [ecx], edi
jz      short loc_406D09
mov     ebx, eax
imul    ebx, 0Ch
add     ecx, 0Ch
add     ebx, edx
cmp     ecx, ebx
jb      short loc_406CF7

loc_406D09:
imul    eax, 0Ch
add     eax, edx
cmp     ecx, eax
jnb     short loc_406D1A
cmp     [ecx], edi
jnz     short loc_406D1A
mov     eax, ecx
jmp     short loc_406D1C

loc_406D1A:
xor     eax, eax

loc_406D1C:
test    eax, eax
jz      short loc_406D2A
mov     ebx, [eax+8]
mov     [ebp+var_4], ebx
test    ebx, ebx
jnz     short loc_406D31

loc_406D2A:
xor     eax, eax
jmp     loc_406E2C

loc_406D31:
cmp     ebx, 5
jnz     short loc_406D42
and     dword ptr [eax+8], 0
xor     eax, eax
inc     eax
jmp     loc_406E2C

loc_406D42:
cmp     ebx, 1
jz      loc_406E29
mov     ecx, [esi+60h]
mov     [ebp+var_8], ecx
mov     ecx, [ebp+arg_4]
mov     [esi+60h], ecx
mov     ecx, [eax+4]
cmp     ecx, 8
jnz     loc_406E1B
mov     ecx, dword_411C60
mov     edi, dword_411C64
mov     edx, ecx
add     edi, ecx
cmp     edx, edi
jge     short loc_406D9B
imul    ecx, 0Ch

loc_406D7A:
mov     edi, [esi+5Ch]
and     dword ptr [ecx+edi+8], 0
mov     edi, dword_411C60
mov     ebx, dword_411C64
inc     edx
add     ebx, edi
add     ecx, 0Ch
cmp     edx, ebx
jl      short loc_406D7A
mov     ebx, [ebp+var_4]

loc_406D9B:
mov     eax, [eax]
mov     edi, [esi+64h]
cmp     eax, 0C000008Eh
jnz     short loc_406DB0
mov     dword ptr [esi+64h], 83h
jmp     short loc_406E0E

loc_406DB0:
cmp     eax, 0C0000090h
jnz     short loc_406DC0
mov     dword ptr [esi+64h], 81h
jmp     short loc_406E0E

loc_406DC0:
cmp     eax, 0C0000091h
jnz     short loc_406DD0
mov     dword ptr [esi+64h], 84h
jmp     short loc_406E0E

loc_406DD0:
cmp     eax, 0C0000093h
jnz     short loc_406DE0
mov     dword ptr [esi+64h], 85h
jmp     short loc_406E0E

loc_406DE0:
cmp     eax, 0C000008Dh
jnz     short loc_406DF0
mov     dword ptr [esi+64h], 82h
jmp     short loc_406E0E

loc_406DF0:
cmp     eax, 0C000008Fh
jnz     short loc_406E00
mov     dword ptr [esi+64h], 86h
jmp     short loc_406E0E

loc_406E00:
cmp     eax, 0C0000092h
jnz     short loc_406E0E
mov     dword ptr [esi+64h], 8Ah

loc_406E0E:
push    dword ptr [esi+64h]
push    8
call    ebx
pop     ecx
mov     [esi+64h], edi
jmp     short loc_406E22

loc_406E1B:
and     dword ptr [eax+8], 0
push    ecx
call    ebx

loc_406E22:
mov     eax, [ebp+var_8]
pop     ecx
mov     [esi+60h], eax

loc_406E29:
or      eax, 0FFFFFFFFh

loc_406E2C:
pop     ebx
pop     edi

loc_406E2E:
pop     esi
leave
retn
sub_406CD1 endp




sub_406E31 proc near
mov     edi, edi
push    esi
push    edi
xor     edi, edi
cmp     dword_424F0C, edi
jnz     short loc_406E44
call    sub_405977

loc_406E44:
mov     esi, dword_425F28
test    esi, esi
jnz     short loc_406E53
mov     esi, offset unk_40E2EF

loc_406E53:
mov     al, [esi]
cmp     al, 20h
ja      short loc_406E61
test    al, al
jz      short loc_406E8B
test    edi, edi
jz      short loc_406E85

loc_406E61:
cmp     al, 22h
jnz     short loc_406E6E
xor     ecx, ecx
test    edi, edi
setz    cl
mov     edi, ecx

loc_406E6E:
movzx   eax, al
push    eax
call    sub_40A692
pop     ecx
test    eax, eax
jz      short loc_406E7D
inc     esi

loc_406E7D:
inc     esi
jmp     short loc_406E53

loc_406E80:
cmp     al, 20h
ja      short loc_406E8B
inc     esi

loc_406E85:
mov     al, [esi]
test    al, al
jnz     short loc_406E80

loc_406E8B:
pop     edi
mov     eax, esi
pop     esi
retn
sub_406E31 endp




sub_406E90 proc near
cmp     dword_424F0C, 0
jnz     short loc_406E9E
call    sub_405977

loc_406E9E:
push    esi
mov     esi, dword_424350
push    edi
xor     edi, edi
test    esi, esi
jnz     short loc_406EC4

loc_406EAC:
or      eax, 0FFFFFFFFh
jmp     loc_406F54

loc_406EB4:
cmp     al, 3Dh
jz      short loc_406EB9
inc     edi

loc_406EB9:
push    esi
call    strlen_to_eax   ; length -> eax
                        ;
pop     ecx
lea     esi, [esi+eax+1]

loc_406EC4:
mov     al, [esi]
test    al, al
jnz     short loc_406EB4
push    4
inc     edi
push    edi
call    sub_408128
mov     edi, eax
pop     ecx
pop     ecx
mov     dword_4246F0, edi
test    edi, edi
jz      short loc_406EAC
mov     esi, dword_424350
push    ebx
jmp     short loc_406F2C

loc_406EEA:
push    esi
call    strlen_to_eax   ; length -> eax
                        ;
mov     ebx, eax
inc     ebx
cmp     byte ptr [esi], 3Dh
pop     ecx
jz      short loc_406F2A
push    1
push    ebx
call    sub_408128
pop     ecx
pop     ecx
mov     [edi], eax
test    eax, eax
jz      short loc_406F57
push    esi
push    ebx
push    eax
call    sub_409C9B
add     esp, 0Ch
test    eax, eax
jz      short loc_406F27
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    sub_404709
add     esp, 14h

loc_406F27:
add     edi, 4

loc_406F2A:
add     esi, ebx

loc_406F2C:
cmp     byte ptr [esi], 0
jnz     short loc_406EEA
push    dword_424350    ; lpMem
call    sub_404EF7
and     dword_424350, 0
and     dword ptr [edi], 0
mov     dword_424F00, 1
xor     eax, eax

loc_406F52:
pop     ecx
pop     ebx

loc_406F54:
pop     edi
pop     esi
retn

loc_406F57:             ; lpMem
push    dword_4246F0
call    sub_404EF7
and     dword_4246F0, 0
or      eax, 0FFFFFFFFh
jmp     short loc_406F52
sub_406E90 endp



; Attributes: bp-based frame

sub_406F6E proc near

var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_8]
push    ebx
xor     eax, eax
push    esi
mov     [edi], eax
mov     esi, edx
mov     edx, [ebp+arg_4]
mov     dword ptr [ecx], 1
cmp     [ebp+arg_0], eax
jz      short loc_406F96
mov     ebx, [ebp+arg_0]
add     [ebp+arg_0], 4
mov     [ebx], edx

loc_406F96:
mov     [ebp+var_4], eax

loc_406F99:
cmp     byte ptr [esi], 22h
jnz     short loc_406FAE
xor     eax, eax
cmp     [ebp+var_4], eax
mov     bl, 22h
setz    al
inc     esi
mov     [ebp+var_4], eax
jmp     short loc_406FEA

loc_406FAE:
inc     dword ptr [edi]
test    edx, edx
jz      short loc_406FBC
mov     al, [esi]
mov     [edx], al
inc     edx
mov     [ebp+arg_4], edx

loc_406FBC:
mov     bl, [esi]
movzx   eax, bl
push    eax
inc     esi
call    sub_40A692
pop     ecx
test    eax, eax
jz      short loc_406FE0
inc     dword ptr [edi]
cmp     [ebp+arg_4], 0
jz      short loc_406FDF
mov     ecx, [ebp+arg_4]
mov     al, [esi]
inc     [ebp+arg_4]
mov     [ecx], al

loc_406FDF:
inc     esi

loc_406FE0:
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
test    bl, bl
jz      short loc_40701C

loc_406FEA:
cmp     [ebp+var_4], 0
jnz     short loc_406F99
cmp     bl, 20h
jz      short loc_406FFA
cmp     bl, 9
jnz     short loc_406F99

loc_406FFA:
test    edx, edx
jz      short loc_407002
mov     byte ptr [edx-1], 0

loc_407002:
and     [ebp+var_4], 0

loc_407006:
cmp     byte ptr [esi], 0
jz      loc_4070F8

loc_40700F:
mov     al, [esi]
cmp     al, 20h
jz      short loc_407019
cmp     al, 9
jnz     short loc_40701F

loc_407019:
inc     esi
jmp     short loc_40700F

loc_40701C:
dec     esi
jmp     short loc_407002

loc_40701F:
cmp     byte ptr [esi], 0
jz      loc_4070F8
cmp     [ebp+arg_0], 0
jz      short loc_407037
mov     eax, [ebp+arg_0]
add     [ebp+arg_0], 4
mov     [eax], edx

loc_407037:
inc     dword ptr [ecx]

loc_407039:
xor     ebx, ebx
inc     ebx
xor     ecx, ecx
jmp     short loc_407042

loc_407040:
inc     esi
inc     ecx

loc_407042:
cmp     byte ptr [esi], 5Ch
jz      short loc_407040
cmp     byte ptr [esi], 22h
jnz     short loc_407072
test    cl, 1
jnz     short loc_407070
cmp     [ebp+var_4], 0
jz      short loc_407063
lea     eax, [esi+1]
cmp     byte ptr [eax], 22h
jnz     short loc_407063
mov     esi, eax
jmp     short loc_407070

loc_407063:
xor     eax, eax
xor     ebx, ebx
cmp     [ebp+var_4], eax
setz    al
mov     [ebp+var_4], eax

loc_407070:
shr     ecx, 1

loc_407072:
test    ecx, ecx
jz      short loc_407088

loc_407076:
dec     ecx
test    edx, edx
jz      short loc_40707F
mov     byte ptr [edx], 5Ch
inc     edx

loc_40707F:
inc     dword ptr [edi]
test    ecx, ecx
jnz     short loc_407076
mov     [ebp+arg_4], edx

loc_407088:
mov     al, [esi]
test    al, al
jz      short loc_4070E3
cmp     [ebp+var_4], 0
jnz     short loc_40709C
cmp     al, 20h
jz      short loc_4070E3
cmp     al, 9
jz      short loc_4070E3

loc_40709C:
test    ebx, ebx
jz      short loc_4070DD
movsx   eax, al
push    eax
test    edx, edx
jz      short loc_4070CB
call    sub_40A692
pop     ecx
test    eax, eax
jz      short loc_4070BF
mov     al, [esi]
mov     ecx, [ebp+arg_4]
inc     [ebp+arg_4]
mov     [ecx], al
inc     esi
inc     dword ptr [edi]

loc_4070BF:
mov     ecx, [ebp+arg_4]
mov     al, [esi]
inc     [ebp+arg_4]
mov     [ecx], al
jmp     short loc_4070D8

loc_4070CB:
call    sub_40A692
pop     ecx
test    eax, eax
jz      short loc_4070D8
inc     esi
inc     dword ptr [edi]

loc_4070D8:
inc     dword ptr [edi]
mov     edx, [ebp+arg_4]

loc_4070DD:
inc     esi
jmp     loc_407039

loc_4070E3:
test    edx, edx
jz      short loc_4070EE
mov     byte ptr [edx], 0
inc     edx
mov     [ebp+arg_4], edx

loc_4070EE:
inc     dword ptr [edi]
mov     ecx, [ebp+arg_8]
jmp     loc_407006

loc_4070F8:
mov     eax, [ebp+arg_0]
pop     esi
pop     ebx
test    eax, eax
jz      short loc_407104
and     dword ptr [eax], 0

loc_407104:
inc     dword ptr [ecx]
leave
retn
sub_406F6E endp



; Attributes: bp-based frame

sub_407108 proc near

var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0Ch
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     dword_424F0C, ebx
jnz     short loc_407122
call    sub_405977

loc_407122:             ; nSize
push    104h
mov     esi, offset byte_424A30
push    esi             ; lpFilename
push    ebx             ; hModule
mov     byte_424B34, bl
call    ds:GetModuleFileNameA
mov     eax, dword_425F28
mov     dword_424700, esi
cmp     eax, ebx
jz      short loc_407150
mov     [ebp+var_4], eax
cmp     [eax], bl
jnz     short loc_407153

loc_407150:
mov     [ebp+var_4], esi

loc_407153:
mov     edx, [ebp+var_4]
lea     eax, [ebp+var_8]
push    eax
push    ebx
push    ebx
lea     edi, [ebp+var_C]
call    sub_406F6E
mov     eax, [ebp+var_8]
add     esp, 0Ch
cmp     eax, 3FFFFFFFh
jnb     short loc_4071BB
mov     ecx, [ebp+var_C]
cmp     ecx, 0FFFFFFFFh
jnb     short loc_4071BB
mov     edi, eax
shl     edi, 2
lea     eax, [edi+ecx]
cmp     eax, ecx
jb      short loc_4071BB
push    eax
call    sub_4080E3
mov     esi, eax
pop     ecx
cmp     esi, ebx
jz      short loc_4071BB
mov     edx, [ebp+var_4]
lea     eax, [ebp+var_8]
push    eax
add     edi, esi
push    edi
push    esi
lea     edi, [ebp+var_C]
call    sub_406F6E
mov     eax, [ebp+var_8]
add     esp, 0Ch
dec     eax
mov     dword_4246E4, eax
mov     dword_4246E8, esi
xor     eax, eax
jmp     short loc_4071BE

loc_4071BB:
or      eax, 0FFFFFFFFh

loc_4071BE:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_407108 endp



; Attributes: bp-based frame

sub_4071C3 proc near

cchWideChar= dword ptr -0Ch
cbMultiByte= dword ptr -8
lpMem= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, dword_424B38
sub     esp, 0Ch
push    ebx
push    esi
mov     esi, ds:GetEnvironmentStringsW
push    edi
xor     ebx, ebx
xor     edi, edi
cmp     eax, ebx
jnz     short loc_40720F
call    esi ; GetEnvironmentStringsW
mov     edi, eax
cmp     edi, ebx
jz      short loc_4071F5
mov     dword_424B38, 1
jmp     short loc_407218

loc_4071F5:
call    ds:GetLastError
cmp     eax, 78h
jnz     short loc_40720A
push    2
pop     eax
mov     dword_424B38, eax
jmp     short loc_40720F

loc_40720A:
mov     eax, dword_424B38

loc_40720F:
cmp     eax, 1
jnz     loc_407299

loc_407218:
cmp     edi, ebx
jnz     short loc_40722B
call    esi ; GetEnvironmentStringsW
mov     edi, eax
cmp     edi, ebx
jnz     short loc_40722B

loc_407224:
xor     eax, eax
jmp     loc_4072F5

loc_40722B:
mov     eax, edi
cmp     [edi], bx
jz      short loc_407240

loc_407232:
inc     eax
inc     eax
cmp     [eax], bx
jnz     short loc_407232
inc     eax
inc     eax
cmp     [eax], bx
jnz     short loc_407232

loc_407240:
mov     esi, ds:WideCharToMultiByte
push    ebx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
push    ebx             ; cbMultiByte
sub     eax, edi
push    ebx             ; lpMultiByteStr
sar     eax, 1
inc     eax
push    eax             ; cchWideChar
push    edi             ; lpWideCharStr
push    ebx             ; dwFlags
push    ebx             ; CodePage
mov     [ebp+cchWideChar], eax
call    esi ; WideCharToMultiByte
mov     [ebp+cbMultiByte], eax
cmp     eax, ebx
jz      short loc_40728E
push    eax
call    sub_4080E3
pop     ecx
mov     [ebp+lpMem], eax
cmp     eax, ebx
jz      short loc_40728E
push    ebx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
push    [ebp+cbMultiByte] ; cbMultiByte
push    eax             ; lpMultiByteStr
push    [ebp+cchWideChar] ; cchWideChar
push    edi             ; lpWideCharStr
push    ebx             ; dwFlags
push    ebx             ; CodePage
call    esi ; WideCharToMultiByte
test    eax, eax
jnz     short loc_40728B
push    [ebp+lpMem]     ; lpMem
call    sub_404EF7
pop     ecx
mov     [ebp+lpMem], ebx

loc_40728B:
mov     ebx, [ebp+lpMem]

loc_40728E:             ; LPWCH
push    edi
call    ds:FreeEnvironmentStringsW
mov     eax, ebx
jmp     short loc_4072F5

loc_407299:
cmp     eax, 2
jz      short loc_4072A2
cmp     eax, ebx
jnz     short loc_407224

loc_4072A2:
call    ds:GetEnvironmentStrings
mov     esi, eax
cmp     esi, ebx
jz      loc_407224
cmp     [esi], bl
jz      short loc_4072C0

loc_4072B6:
inc     eax
cmp     [eax], bl
jnz     short loc_4072B6
inc     eax
cmp     [eax], bl
jnz     short loc_4072B6

loc_4072C0:
sub     eax, esi
inc     eax
push    eax
mov     [ebp+cbMultiByte], eax
call    sub_4080E3
mov     edi, eax
pop     ecx
cmp     edi, ebx
jnz     short loc_4072DF
push    esi             ; LPCH
call    ds:FreeEnvironmentStringsA
jmp     loc_407224

loc_4072DF:
push    [ebp+cbMultiByte]
push    esi
push    edi
call    sub_4029F0
add     esp, 0Ch
push    esi             ; LPCH
call    ds:FreeEnvironmentStringsA
mov     eax, edi

loc_4072F5:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_4071C3 endp



; Attributes: bp-based frame

sub_4072FA proc near

StartupInfo= _STARTUPINFOA ptr -64h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    54h
push    offset stru_40F740
call    __SEH_prolog4
xor     edi, edi
mov     [ebp+ms_exc.registration.TryLevel], edi
lea     eax, [ebp+StartupInfo]
push    eax             ; lpStartupInfo
call    ds:GetStartupInfoA
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
push    40h
push    20h
pop     esi
push    esi
call    sub_408128
pop     ecx
pop     ecx
cmp     eax, edi
jz      loc_407545
mov     dword_424E00, eax
mov     uNumber, esi
lea     ecx, [eax+800h]
jmp     short loc_407374

loc_407344:
mov     byte ptr [eax+4], 0
or      dword ptr [eax], 0FFFFFFFFh
mov     byte ptr [eax+5], 0Ah
mov     [eax+8], edi
mov     byte ptr [eax+24h], 0
mov     byte ptr [eax+25h], 0Ah
mov     byte ptr [eax+26h], 0Ah
mov     [eax+38h], edi
mov     byte ptr [eax+34h], 0
add     eax, 40h
mov     ecx, dword_424E00
add     ecx, 800h

loc_407374:
cmp     eax, ecx
jb      short loc_407344
cmp     [ebp+StartupInfo.cbReserved2], di
jz      loc_40748C
mov     eax, [ebp+StartupInfo.lpReserved2]
cmp     eax, edi
jz      loc_40748C
mov     edi, [eax]
lea     ebx, [eax+4]
lea     eax, [ebx+edi]
mov     [ebp+var_1C], eax
mov     esi, 800h
cmp     edi, esi
jl      short loc_4073A3
mov     edi, esi

loc_4073A3:
mov     [ebp+var_20], 1
jmp     short loc_407407

loc_4073AC:
push    40h
push    20h
call    sub_408128
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_407411
mov     ecx, [ebp+var_20]
lea     ecx, ds:424E00h[ecx*4]
mov     [ecx], eax
add     uNumber, 20h
lea     edx, [eax+800h]
jmp     short loc_407400

loc_4073D6:
mov     byte ptr [eax+4], 0
or      dword ptr [eax], 0FFFFFFFFh
mov     byte ptr [eax+5], 0Ah
and     dword ptr [eax+8], 0
and     byte ptr [eax+24h], 80h
mov     byte ptr [eax+25h], 0Ah
mov     byte ptr [eax+26h], 0Ah
and     dword ptr [eax+38h], 0
mov     byte ptr [eax+34h], 0
add     eax, 40h
mov     edx, [ecx]
add     edx, esi

loc_407400:
cmp     eax, edx
jb      short loc_4073D6
inc     [ebp+var_20]

loc_407407:
cmp     uNumber, edi
jl      short loc_4073AC
jmp     short loc_407417

loc_407411:
mov     edi, uNumber

loc_407417:
and     [ebp+var_20], 0
test    edi, edi
jle     short loc_40748C

loc_40741F:
mov     eax, [ebp+var_1C]
mov     ecx, [eax]
cmp     ecx, 0FFFFFFFFh
jz      short loc_40747F
cmp     ecx, 0FFFFFFFEh
jz      short loc_40747F
mov     al, [ebx]
test    al, 1
jz      short loc_40747F
test    al, 8
jnz     short loc_407443
push    ecx             ; hFile
call    ds:GetFileType
test    eax, eax
jz      short loc_40747F

loc_407443:
mov     esi, [ebp+var_20]
mov     eax, esi
sar     eax, 5
and     esi, 1Fh
shl     esi, 6
add     esi, dword_424E00[eax*4]
mov     eax, [ebp+var_1C]
mov     eax, [eax]
mov     [esi], eax
mov     al, [ebx]
mov     [esi+4], al
push    0FA0h           ; dwSpinCount
lea     eax, [esi+0Ch]
push    eax             ; lpCriticalSection
call    sub_408662
pop     ecx
pop     ecx
test    eax, eax
jz      loc_407545
inc     dword ptr [esi+8]

loc_40747F:
inc     [ebp+var_20]
inc     ebx
add     [ebp+var_1C], 4
cmp     [ebp+var_20], edi
jl      short loc_40741F

loc_40748C:
xor     ebx, ebx

loc_40748E:
mov     esi, ebx
shl     esi, 6
add     esi, dword_424E00
mov     eax, [esi]
cmp     eax, 0FFFFFFFFh
jz      short loc_4074AB
cmp     eax, 0FFFFFFFEh
jz      short loc_4074AB
or      byte ptr [esi+4], 80h
jmp     short loc_40751D

loc_4074AB:
mov     byte ptr [esi+4], 81h
test    ebx, ebx
jnz     short loc_4074B8
push    0FFFFFFF6h
pop     eax
jmp     short loc_4074C2

loc_4074B8:
mov     eax, ebx
dec     eax
neg     eax
sbb     eax, eax
add     eax, 0FFFFFFF5h

loc_4074C2:             ; nStdHandle
push    eax
call    ds:GetStdHandle
mov     edi, eax
cmp     edi, 0FFFFFFFFh
jz      short loc_407513
test    edi, edi
jz      short loc_407513
push    edi             ; hFile
call    ds:GetFileType
test    eax, eax
jz      short loc_407513
mov     [esi], edi
and     eax, 0FFh
cmp     eax, 2
jnz     short loc_4074F1
or      byte ptr [esi+4], 40h
jmp     short loc_4074FA

loc_4074F1:
cmp     eax, 3
jnz     short loc_4074FA
or      byte ptr [esi+4], 8

loc_4074FA:             ; dwSpinCount
push    0FA0h
lea     eax, [esi+0Ch]
push    eax             ; lpCriticalSection
call    sub_408662
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_407545
inc     dword ptr [esi+8]
jmp     short loc_40751D

loc_407513:
or      byte ptr [esi+4], 40h
mov     dword ptr [esi], 0FFFFFFFEh

loc_40751D:
inc     ebx
cmp     ebx, 3
jl      loc_40748E
push    uNumber         ; uNumber
call    ds:SetHandleCount
xor     eax, eax
jmp     short loc_407548

loc_407537:
xor     eax, eax
inc     eax
retn

loc_40753B:
mov     esp, [ebp+ms_exc.old_esp]
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_407545:
or      eax, 0FFFFFFFFh

loc_407548:
call    __SEH_epilog4
retn
sub_4072FA endp




sub_40754E proc near
mov     edi, edi
push    esi
mov     eax, offset unk_40F590
mov     esi, offset unk_40F590
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_407571

loc_407562:
mov     eax, [edi]
test    eax, eax
jz      short loc_40756A
call    eax

loc_40756A:
add     edi, 4
cmp     edi, esi
jb      short loc_407562

loc_407571:
pop     edi
pop     esi
retn
sub_40754E endp

byte_407574 db 8Bh, 0FFh
push    esi
mov     eax, offset unk_40F598
mov     esi, offset unk_40F598
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_407597

loc_407588:
mov     eax, [edi]
test    eax, eax
jz      short loc_407590
call    eax

loc_407590:
add     edi, 4
cmp     edi, esi
jb      short loc_407588

loc_407597:
pop     edi
pop     esi
retn


; Attributes: bp-based frame

sub_40759A proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
xor     eax, eax
cmp     [ebp+arg_0], eax
push    0               ; dwMaximumSize
setz    al
push    1000h           ; dwInitialSize
push    eax             ; flOptions
call    ds:HeapCreate
mov     hHeap, eax
test    eax, eax
jnz     short loc_4075C0
pop     ebp
retn

loc_4075C0:
xor     eax, eax
inc     eax
mov     dword_424DE4, eax
pop     ebp
retn
sub_40759A endp



; Attributes: bp-based frame

sub_4075CA proc near

PerformanceCount= LARGE_INTEGER ptr -10h
SystemTimeAsFileTime= _FILETIME ptr -8

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, dword_411004
and     [ebp+SystemTimeAsFileTime.dwLowDateTime], 0
and     [ebp+SystemTimeAsFileTime.dwHighDateTime], 0
push    ebx
push    edi
mov     edi, 0BB40E64Eh
mov     ebx, 0FFFF0000h
cmp     eax, edi
jz      short loc_4075FC
test    ebx, eax
jz      short loc_4075FC
not     eax
mov     dword_411008, eax
jmp     short loc_40765C

loc_4075FC:
push    esi
lea     eax, [ebp+SystemTimeAsFileTime]
push    eax             ; lpSystemTimeAsFileTime
call    ds:GetSystemTimeAsFileTime
mov     esi, [ebp+SystemTimeAsFileTime.dwHighDateTime]
xor     esi, [ebp+SystemTimeAsFileTime.dwLowDateTime]
call    ds:GetCurrentProcessId
xor     esi, eax
call    ds:GetCurrentThreadId
xor     esi, eax
call    ds:GetTickCount
xor     esi, eax
lea     eax, [ebp+PerformanceCount]
push    eax             ; lpPerformanceCount
call    ds:QueryPerformanceCounter
mov     eax, dword ptr [ebp+PerformanceCount+4]
xor     eax, dword ptr [ebp+PerformanceCount]
xor     esi, eax
cmp     esi, edi
jnz     short loc_407642
mov     esi, 0BB40E64Fh
jmp     short loc_40764D

loc_407642:
test    ebx, esi
jnz     short loc_40764D
mov     eax, esi
shl     eax, 10h
or      esi, eax

loc_40764D:
mov     dword_411004, esi
not     esi
mov     dword_411008, esi
pop     esi

loc_40765C:
pop     edi
pop     ebx
leave
retn
sub_4075CA endp




sub_407660 proc near
and     dword_424DE0, 0
retn
sub_407660 endp



; Attributes: bp-based frame

; int __cdecl sub_407668(int, int, int, DWORD dwMoveMethod)
sub_407668 proc near

lDistanceToMove= dword ptr -8
DistanceToMoveHigh= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
dwMoveMethod= dword ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+lDistanceToMove], eax
mov     eax, [ebp+arg_8]
push    edi
push    esi
mov     [ebp+DistanceToMoveHigh], eax
call    sub_4089DD
or      edi, 0FFFFFFFFh
pop     ecx
cmp     eax, edi
jnz     short loc_40769F
call    sub_404899
mov     dword ptr [eax], 9

loc_407699:
mov     eax, edi
mov     edx, edi
jmp     short loc_4076E9

loc_40769F:             ; dwMoveMethod
push    [ebp+dwMoveMethod]
lea     ecx, [ebp+DistanceToMoveHigh]
push    ecx             ; lpDistanceToMoveHigh
push    [ebp+lDistanceToMove] ; lDistanceToMove
push    eax             ; hFile
call    ds:SetFilePointer
mov     [ebp+lDistanceToMove], eax
cmp     eax, edi
jnz     short loc_4076CA
call    ds:GetLastError
test    eax, eax
jz      short loc_4076CA
push    eax
call    sub_4048BF
pop     ecx
jmp     short loc_407699

loc_4076CA:
mov     eax, esi
sar     eax, 5
mov     eax, dword_424E00[eax*4]
and     esi, 1Fh
shl     esi, 6
lea     eax, [eax+esi+4]
and     byte ptr [eax], 0FDh
mov     eax, [ebp+lDistanceToMove]
mov     edx, [ebp+DistanceToMoveHigh]

loc_4076E9:
pop     edi
pop     esi
leave
retn
sub_407668 endp



; Attributes: bp-based frame

; int __cdecl sub_4076ED(int, int, int, DWORD dwMoveMethod)
sub_4076ED proc near

var_24= dword ptr -24h
var_20= dword ptr -20h
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
dwMoveMethod= dword ptr  14h

push    14h
push    offset stru_40F760
call    __SEH_prolog4
or      esi, 0FFFFFFFFh
mov     [ebp+var_24], esi
mov     [ebp+var_20], esi
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_407726
call    sub_4048AC
and     dword ptr [eax], 0
call    sub_404899
mov     dword ptr [eax], 9

loc_40771D:
mov     eax, esi
mov     edx, esi
jmp     loc_4077F6

loc_407726:
xor     edi, edi
cmp     eax, edi
jl      short loc_407734
cmp     eax, uNumber
jb      short loc_407755

loc_407734:
call    sub_4048AC
mov     [eax], edi
call    sub_404899
mov     dword ptr [eax], 9
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
jmp     short loc_40771D

loc_407755:
mov     ecx, eax
sar     ecx, 5
lea     ebx, ds:424E00h[ecx*4]
mov     esi, eax
and     esi, 1Fh
shl     esi, 6
mov     ecx, [ebx]
movsx   ecx, byte ptr [ecx+esi+4]
and     ecx, 1
jnz     short loc_40779B
call    sub_4048AC
mov     [eax], edi
call    sub_404899
mov     dword ptr [eax], 9
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
or      edx, 0FFFFFFFFh
mov     eax, edx
jmp     short loc_4077F6

loc_40779B:
push    eax
call    sub_408A54
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
mov     eax, [ebx]
test    byte ptr [eax+esi+4], 1
jz      short loc_4077CA
push    [ebp+dwMoveMethod] ; dwMoveMethod
push    [ebp+arg_8]     ; int
push    [ebp+arg_4]     ; int
push    [ebp+arg_0]     ; int
call    sub_407668
add     esp, 10h
mov     [ebp+var_24], eax
mov     [ebp+var_20], edx
jmp     short loc_4077E4

loc_4077CA:
call    sub_404899
mov     dword ptr [eax], 9
call    sub_4048AC
mov     [eax], edi
or      [ebp+var_24], 0FFFFFFFFh
or      [ebp+var_20], 0FFFFFFFFh

loc_4077E4:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4077FC

loc_4077F0:
mov     eax, [ebp+var_24]
mov     edx, [ebp+var_20]

loc_4077F6:
call    __SEH_epilog4
retn

loc_4077FC:
push    [ebp+arg_0]
call    sub_408AF4
pop     ecx
retn
sub_4076ED endp



; Attributes: bp-based frame

; int __cdecl sub_407806(int, int, DWORD nNumberOfBytesToWrite)
sub_407806 proc near

Mode= dword ptr -1AE4h
var_1AE0= dword ptr -1AE0h
var_1AD9= byte ptr -1AD9h
var_1AD8= dword ptr -1AD8h
var_1AD4= dword ptr -1AD4h
var_1AD0= dword ptr -1AD0h
lpBuffer= dword ptr -1ACCh
var_1AC8= dword ptr -1AC8h
NumberOfBytesWritten= dword ptr -1AC4h
WideCharStr= word ptr -1AC0h
var_1ABC= dword ptr -1ABCh
Buffer= byte ptr -1AB8h
var_1410= byte ptr -1410h
var_6B8= word ptr -6B8h
MultiByteStr= byte ptr -0Ch
var_B= byte ptr -0Bh
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
nNumberOfBytesToWrite= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, 1AE4h
call    __alloca_probe
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    esi
xor     esi, esi
mov     [ebp+lpBuffer], eax
mov     [ebp+var_1AC8], esi
mov     [ebp+var_1AD0], esi
cmp     [ebp+nNumberOfBytesToWrite], esi
jnz     short loc_407843
xor     eax, eax
jmp     loc_407F2C

loc_407843:
cmp     eax, esi
jnz     short loc_40786E
call    sub_4048AC
mov     [eax], esi
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     loc_407F2C

loc_40786E:
push    ebx
push    edi
mov     edi, [ebp+arg_0]
mov     eax, edi
sar     eax, 5
lea     esi, ds:424E00h[eax*4]
mov     eax, [esi]
and     edi, 1Fh
shl     edi, 6
add     eax, edi
mov     bl, [eax+24h]
add     bl, bl
sar     bl, 1
mov     [ebp+var_1AD8], esi
mov     [ebp+var_1AD9], bl
cmp     bl, 2
jz      short loc_4078A6
cmp     bl, 1
jnz     short loc_4078D6

loc_4078A6:
mov     ecx, [ebp+nNumberOfBytesToWrite]
not     ecx
test    cl, 1
jnz     short loc_4078D6
call    sub_4048AC
xor     esi, esi
mov     [eax], esi
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
jmp     loc_407F19

loc_4078D6:
test    byte ptr [eax+4], 20h
jz      short loc_4078ED
push    2               ; dwMoveMethod
push    0               ; int
push    0               ; int
push    [ebp+arg_0]     ; int
call    sub_407668
add     esp, 10h

loc_4078ED:
push    [ebp+arg_0]
call    sub_40805E
pop     ecx
test    eax, eax
jz      loc_407B9B
mov     eax, [esi]
test    byte ptr [edi+eax+4], 80h
jz      loc_407B9B
call    sub_405F81
mov     eax, [eax+6Ch]
xor     ecx, ecx
cmp     [eax+14h], ecx
lea     eax, [ebp+Mode]
setz    cl
push    eax             ; lpMode
mov     eax, [esi]
push    dword ptr [edi+eax] ; hConsoleHandle
mov     [ebp+var_1AE0], ecx
call    ds:GetConsoleMode
test    eax, eax
jz      loc_407B9B
xor     ecx, ecx
cmp     [ebp+var_1AE0], ecx
jz      short loc_40794D
test    bl, bl
jz      loc_407B9D

loc_40794D:
call    ds:GetConsoleCP
mov     ebx, [ebp+lpBuffer]
mov     [ebp+Mode], eax
xor     eax, eax
mov     [ebp+NumberOfBytesWritten], eax
cmp     [ebp+nNumberOfBytesToWrite], eax
jbe     loc_407EB2
mov     [ebp+var_1ABC], eax

loc_407976:
mov     al, [ebp+var_1AD9]
test    al, al
jnz     loc_407AEB
mov     cl, [ebx]
mov     esi, [ebp+var_1AD8]
xor     eax, eax
cmp     cl, 0Ah
setz    al
mov     [ebp+var_1AE0], eax
mov     eax, [esi]
add     eax, edi
cmp     dword ptr [eax+38h], 0
jz      short loc_4079B9
mov     dl, [eax+34h]
mov     [ebp+MultiByteStr], dl
mov     [ebp+var_B], cl
and     dword ptr [eax+38h], 0
push    2
lea     eax, [ebp+MultiByteStr]
push    eax
jmp     short loc_407A04

loc_4079B9:
movsx   eax, cl
push    eax
call    sub_406699
pop     ecx
test    eax, eax
jz      short loc_407A01
mov     ecx, [ebp+lpBuffer]
sub     ecx, ebx
add     ecx, [ebp+nNumberOfBytesToWrite]
xor     eax, eax
inc     eax
cmp     ecx, eax
jbe     loc_407B82
push    2               ; int
lea     eax, [ebp+WideCharStr]
push    ebx             ; lpMultiByteStr
push    eax             ; lpWideCharStr
call    sub_40A886
add     esp, 0Ch
cmp     eax, 0FFFFFFFFh
jz      loc_407EA9
inc     ebx
inc     [ebp+var_1ABC]
jmp     short loc_407A1C

loc_407A01:             ; int
push    1
push    ebx             ; lpMultiByteStr

loc_407A04:
lea     eax, [ebp+WideCharStr]
push    eax             ; lpWideCharStr
call    sub_40A886
add     esp, 0Ch
cmp     eax, 0FFFFFFFFh
jz      loc_407EA9

loc_407A1C:
xor     eax, eax
push    eax             ; lpUsedDefaultChar
push    eax             ; lpDefaultChar
push    5               ; cbMultiByte
lea     ecx, [ebp+MultiByteStr]
push    ecx             ; lpMultiByteStr
push    1               ; cchWideChar
lea     ecx, [ebp+WideCharStr]
push    ecx             ; lpWideCharStr
push    eax             ; dwFlags
push    [ebp+Mode]      ; CodePage
inc     ebx
inc     [ebp+var_1ABC]
call    ds:WideCharToMultiByte
mov     esi, eax
test    esi, esi
jz      loc_407EA9
push    0               ; lpOverlapped
lea     eax, [ebp+NumberOfBytesWritten]
push    eax             ; lpNumberOfBytesWritten
push    esi             ; nNumberOfBytesToWrite
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpBuffer
mov     eax, [ebp+var_1AD8]
mov     eax, [eax]
push    dword ptr [edi+eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      loc_407E9D
mov     eax, [ebp+var_1ABC]
mov     ecx, [ebp+var_1AD0]
add     eax, ecx
cmp     [ebp+NumberOfBytesWritten], esi
mov     [ebp+var_1AC8], eax
jl      loc_407EA9
cmp     [ebp+var_1AE0], 0
jz      loc_407B6E
push    0               ; lpOverlapped
lea     eax, [ebp+NumberOfBytesWritten]
push    eax             ; lpNumberOfBytesWritten
push    1               ; nNumberOfBytesToWrite
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpBuffer
mov     eax, [ebp+var_1AD8]
mov     eax, [eax]
mov     [ebp+MultiByteStr], 0Dh
push    dword ptr [edi+eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      loc_407E9D
cmp     [ebp+NumberOfBytesWritten], 1
jl      loc_407EA9
inc     [ebp+var_1AD0]
inc     [ebp+var_1AC8]
jmp     loc_407B6E

loc_407AEB:
cmp     al, 1
jz      short loc_407AF3
cmp     al, 2
jnz     short loc_407B14

loc_407AF3:
movzx   esi, word ptr [ebx]
xor     ecx, ecx
cmp     si, 0Ah
setz    cl
inc     ebx
inc     ebx
add     [ebp+var_1ABC], 2
mov     dword ptr [ebp+WideCharStr], esi
mov     [ebp+var_1AE0], ecx

loc_407B14:
cmp     al, 1
jz      short loc_407B1C
cmp     al, 2
jnz     short loc_407B6E

loc_407B1C:             ; Buffer
push    dword ptr [ebp+WideCharStr]
call    sub_40A6AA
pop     ecx
cmp     ax, [ebp+WideCharStr]
jnz     loc_407E9D
add     [ebp+var_1AC8], 2
cmp     [ebp+var_1AE0], 0
jz      short loc_407B6E
push    0Dh
pop     eax
push    eax             ; Buffer
mov     dword ptr [ebp+WideCharStr], eax
call    sub_40A6AA
pop     ecx
cmp     ax, [ebp+WideCharStr]
jnz     loc_407E9D
inc     [ebp+var_1AC8]
inc     [ebp+var_1AD0]

loc_407B6E:
mov     eax, [ebp+nNumberOfBytesToWrite]
cmp     [ebp+var_1ABC], eax
jb      loc_407976
jmp     loc_407EA9

loc_407B82:
mov     ecx, [esi]
mov     dl, [ebx]
inc     [ebp+var_1AC8]
mov     [edi+ecx+34h], dl
mov     ecx, [esi]
mov     [edi+ecx+38h], eax
jmp     loc_407EA9

loc_407B9B:
xor     ecx, ecx

loc_407B9D:
mov     eax, [esi]
add     eax, edi
test    byte ptr [eax+4], 80h
jz      loc_407E6A
mov     eax, [ebp+lpBuffer]
mov     dword ptr [ebp+WideCharStr], ecx
test    bl, bl
jnz     loc_407C89
mov     [ebp+NumberOfBytesWritten], eax
cmp     [ebp+nNumberOfBytesToWrite], ecx
jbe     loc_407EEE
jmp     short loc_407BD6

loc_407BD0:
mov     esi, [ebp+var_1AD8]

loc_407BD6:
mov     ecx, [ebp+NumberOfBytesWritten]
and     [ebp+var_1ABC], 0
sub     ecx, [ebp+lpBuffer]
lea     eax, [ebp+Buffer]

loc_407BEF:
cmp     ecx, [ebp+nNumberOfBytesToWrite]
jnb     short loc_407C2D
mov     edx, [ebp+NumberOfBytesWritten]
inc     [ebp+NumberOfBytesWritten]
mov     dl, [edx]
inc     ecx
cmp     dl, 0Ah
jnz     short loc_407C18
inc     [ebp+var_1AD0]
mov     byte ptr [eax], 0Dh
inc     eax
inc     [ebp+var_1ABC]

loc_407C18:
mov     [eax], dl
inc     eax
inc     [ebp+var_1ABC]
cmp     [ebp+var_1ABC], 13FFh
jb      short loc_407BEF

loc_407C2D:
mov     ebx, eax
lea     eax, [ebp+Buffer]
sub     ebx, eax
push    0               ; lpOverlapped
lea     eax, [ebp+var_1AD4]
push    eax             ; lpNumberOfBytesWritten
push    ebx             ; nNumberOfBytesToWrite
lea     eax, [ebp+Buffer]
push    eax             ; lpBuffer
mov     eax, [esi]
push    dword ptr [edi+eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      loc_407E9D
mov     eax, [ebp+var_1AD4]
add     [ebp+var_1AC8], eax
cmp     eax, ebx
jl      loc_407EA9
mov     eax, [ebp+NumberOfBytesWritten]
sub     eax, [ebp+lpBuffer]
cmp     eax, [ebp+nNumberOfBytesToWrite]
jb      loc_407BD0
jmp     loc_407EA9

loc_407C89:
mov     [ebp+var_1ABC], eax
cmp     bl, 2
jnz     loc_407D69
cmp     [ebp+nNumberOfBytesToWrite], ecx
jbe     loc_407EEE
jmp     short loc_407CA9

loc_407CA3:
mov     esi, [ebp+var_1AD8]

loc_407CA9:
mov     ecx, [ebp+var_1ABC]
and     [ebp+NumberOfBytesWritten], 0
sub     ecx, [ebp+lpBuffer]
lea     eax, [ebp+Buffer]

loc_407CC2:
cmp     ecx, [ebp+nNumberOfBytesToWrite]
jnb     short loc_407D0D
mov     edx, [ebp+var_1ABC]
add     [ebp+var_1ABC], 2
movzx   edx, word ptr [edx]
inc     ecx
inc     ecx
cmp     dx, 0Ah
jnz     short loc_407CF5
add     [ebp+var_1AD0], 2
push    0Dh
pop     ebx
mov     [eax], bx
inc     eax
inc     eax
add     [ebp+NumberOfBytesWritten], 2

loc_407CF5:
add     [ebp+NumberOfBytesWritten], 2
mov     [eax], dx
inc     eax
inc     eax
cmp     [ebp+NumberOfBytesWritten], 13FEh
jb      short loc_407CC2

loc_407D0D:
mov     ebx, eax
lea     eax, [ebp+Buffer]
sub     ebx, eax
push    0               ; lpOverlapped
lea     eax, [ebp+var_1AD4]
push    eax             ; lpNumberOfBytesWritten
push    ebx             ; nNumberOfBytesToWrite
lea     eax, [ebp+Buffer]
push    eax             ; lpBuffer
mov     eax, [esi]
push    dword ptr [edi+eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      loc_407E9D
mov     eax, [ebp+var_1AD4]
add     [ebp+var_1AC8], eax
cmp     eax, ebx
jl      loc_407EA9
mov     eax, [ebp+var_1ABC]
sub     eax, [ebp+lpBuffer]
cmp     eax, [ebp+nNumberOfBytesToWrite]
jb      loc_407CA3
jmp     loc_407EA9

loc_407D69:
cmp     [ebp+nNumberOfBytesToWrite], ecx
jbe     loc_407EEE

loc_407D72:
mov     ecx, [ebp+var_1ABC]
and     [ebp+NumberOfBytesWritten], 0
sub     ecx, [ebp+lpBuffer]
push    2
lea     eax, [ebp+var_6B8]
pop     esi

loc_407D8E:
cmp     ecx, [ebp+nNumberOfBytesToWrite]
jnb     short loc_407DCF
mov     edx, [ebp+var_1ABC]
movzx   edx, word ptr [edx]
add     [ebp+var_1ABC], esi
add     ecx, esi
cmp     dx, 0Ah
jnz     short loc_407DB8
push    0Dh
pop     ebx
mov     [eax], bx
add     eax, esi
add     [ebp+NumberOfBytesWritten], esi

loc_407DB8:
add     [ebp+NumberOfBytesWritten], esi
mov     [eax], dx
add     eax, esi
cmp     [ebp+NumberOfBytesWritten], 6A8h
jb      short loc_407D8E

loc_407DCF:
xor     esi, esi
push    esi             ; lpUsedDefaultChar
push    esi             ; lpDefaultChar
push    0D55h           ; cbMultiByte
lea     ecx, [ebp+var_1410]
push    ecx             ; lpMultiByteStr
lea     ecx, [ebp+var_6B8]
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
push    eax             ; cchWideChar
mov     eax, ecx
push    eax             ; lpWideCharStr
push    esi             ; dwFlags
push    0FDE9h          ; CodePage
call    ds:WideCharToMultiByte
mov     ebx, eax
cmp     ebx, esi
jz      loc_407E9D

loc_407E06:             ; lpOverlapped
push    0
lea     eax, [ebp+var_1AD4]
push    eax             ; lpNumberOfBytesWritten
mov     eax, ebx
sub     eax, esi
push    eax             ; nNumberOfBytesToWrite
lea     eax, [ebp+esi+var_1410]
push    eax             ; lpBuffer
mov     eax, [ebp+var_1AD8]
mov     eax, [eax]
push    dword ptr [edi+eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      short loc_407E3D
add     esi, [ebp+var_1AD4]
cmp     ebx, esi
jg      short loc_407E06
jmp     short loc_407E49

loc_407E3D:
call    ds:GetLastError
mov     dword ptr [ebp+WideCharStr], eax

loc_407E49:
cmp     ebx, esi
jg      short loc_407EA9
mov     eax, [ebp+var_1ABC]
sub     eax, [ebp+lpBuffer]
mov     [ebp+var_1AC8], eax
cmp     eax, [ebp+nNumberOfBytesToWrite]
jb      loc_407D72
jmp     short loc_407EA9

loc_407E6A:             ; lpOverlapped
push    0
lea     ecx, [ebp+var_1AD4]
push    ecx             ; lpNumberOfBytesWritten
push    [ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
push    [ebp+lpBuffer]  ; lpBuffer
push    dword ptr [eax] ; hFile
call    ds:WriteFile
test    eax, eax
jz      short loc_407E9D
mov     eax, [ebp+var_1AD4]
and     dword ptr [ebp+WideCharStr], 0
mov     [ebp+var_1AC8], eax
jmp     short loc_407EA9

loc_407E9D:
call    ds:GetLastError
mov     dword ptr [ebp+WideCharStr], eax

loc_407EA9:
cmp     [ebp+var_1AC8], 0
jnz     short loc_407F1E

loc_407EB2:
cmp     dword ptr [ebp+WideCharStr], 0
jz      short loc_407EE8
push    5
pop     esi
cmp     dword ptr [ebp+WideCharStr], esi
jnz     short loc_407EDA
call    sub_404899
mov     dword ptr [eax], 9
call    sub_4048AC
mov     [eax], esi
jmp     short loc_407F19

loc_407EDA:
push    dword ptr [ebp+WideCharStr]
call    sub_4048BF
pop     ecx
jmp     short loc_407F19

loc_407EE8:
mov     esi, [ebp+var_1AD8]

loc_407EEE:
mov     eax, [esi]
test    byte ptr [edi+eax+4], 40h
jz      short loc_407F06
mov     eax, [ebp+lpBuffer]
cmp     byte ptr [eax], 1Ah
jnz     short loc_407F06
xor     eax, eax
jmp     short loc_407F2A

loc_407F06:
call    sub_404899
mov     dword ptr [eax], 1Ch
call    sub_4048AC
and     dword ptr [eax], 0

loc_407F19:
or      eax, 0FFFFFFFFh
jmp     short loc_407F2A

loc_407F1E:
mov     eax, [ebp+var_1AC8]
sub     eax, [ebp+var_1AD0]

loc_407F2A:
pop     edi
pop     ebx

loc_407F2C:
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     esi
call    anti_debug
leave
retn
sub_407806 endp



; Attributes: bp-based frame

; int __cdecl sub_407F39(int, int, DWORD nNumberOfBytesToWrite)
sub_407F39 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
nNumberOfBytesToWrite= dword ptr  10h

push    10h
push    offset stru_40F780
call    __SEH_prolog4
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_407F68
call    sub_4048AC
and     dword ptr [eax], 0
call    sub_404899
mov     dword ptr [eax], 9

loc_407F60:
or      eax, 0FFFFFFFFh
jmp     loc_408005

loc_407F68:
xor     edi, edi
cmp     eax, edi
jl      short loc_407F76
cmp     eax, uNumber
jb      short loc_407F97

loc_407F76:
call    sub_4048AC
mov     [eax], edi
call    sub_404899
mov     dword ptr [eax], 9
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
jmp     short loc_407F60

loc_407F97:
mov     ecx, eax
sar     ecx, 5
lea     ebx, ds:424E00h[ecx*4]
mov     esi, eax
and     esi, 1Fh
shl     esi, 6
mov     ecx, [ebx]
movsx   ecx, byte ptr [ecx+esi+4]
and     ecx, 1
jz      short loc_407F76
push    eax
call    sub_408A54
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
mov     eax, [ebx]
test    byte ptr [eax+esi+4], 1
jz      short loc_407FE0
push    [ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
push    [ebp+arg_4]     ; int
push    [ebp+arg_0]     ; int
call    sub_407806
add     esp, 0Ch
mov     [ebp+var_1C], eax
jmp     short loc_407FF6

loc_407FE0:
call    sub_404899
mov     dword ptr [eax], 9
call    sub_4048AC
mov     [eax], edi
or      [ebp+var_1C], 0FFFFFFFFh

loc_407FF6:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40800B

loc_408002:
mov     eax, [ebp+var_1C]

loc_408005:
call    __SEH_epilog4
retn

loc_40800B:
push    [ebp+arg_0]
call    sub_408AF4
pop     ecx
retn
sub_407F39 endp



; Attributes: bp-based frame

sub_408015 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
inc     dword_424688
push    1000h
call    sub_4080E3
pop     ecx
mov     ecx, [ebp+arg_0]
mov     [ecx+8], eax
test    eax, eax
jz      short loc_408042
or      dword ptr [ecx+0Ch], 8
mov     dword ptr [ecx+18h], 1000h
jmp     short loc_408053

loc_408042:
or      dword ptr [ecx+0Ch], 4
lea     eax, [ecx+14h]
mov     [ecx+8], eax
mov     dword ptr [ecx+18h], 2

loc_408053:
mov     eax, [ecx+8]
and     dword ptr [ecx+4], 0
mov     [ecx], eax
pop     ebp
retn
sub_408015 endp



; Attributes: bp-based frame

sub_40805E proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_40807A
call    sub_404899
mov     dword ptr [eax], 9
xor     eax, eax
pop     ebp
retn

loc_40807A:
push    esi
xor     esi, esi
cmp     eax, esi
jl      short loc_408089
cmp     eax, uNumber
jb      short loc_4080A5

loc_408089:
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 9
call    sub_404831
add     esp, 14h
xor     eax, eax
jmp     short loc_4080BF

loc_4080A5:
mov     ecx, eax
and     eax, 1Fh
sar     ecx, 5
mov     ecx, dword_424E00[ecx*4]
shl     eax, 6
movsx   eax, byte ptr [ecx+eax+4]
and     eax, 40h

loc_4080BF:
pop     esi
pop     ebp
retn
sub_40805E endp




sub_4080C2 proc near
mov     edi, edi
push    esi
push    edi
xor     edi, edi

loc_4080C8:
lea     esi, off_411CB4[edi]
push    dword ptr [esi]
call    sub_405CBA
add     edi, 4
pop     ecx
mov     [esi], eax
cmp     edi, 28h
jb      short loc_4080C8
pop     edi
pop     esi
retn
sub_4080C2 endp



; Attributes: bp-based frame

sub_4080E3 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
xor     esi, esi

loc_4080EC:
push    [ebp+arg_0]
call    sub_409F9C
mov     edi, eax
pop     ecx
test    edi, edi
jnz     short loc_408122
cmp     dword_424B40, eax
jbe     short loc_408122
push    esi             ; dwMilliseconds
call    ds:Sleep
lea     eax, [esi+3E8h]
cmp     eax, dword_424B40
jbe     short loc_40811B
or      eax, 0FFFFFFFFh

loc_40811B:
mov     esi, eax
cmp     eax, 0FFFFFFFFh
jnz     short loc_4080EC

loc_408122:
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
sub_4080E3 endp



; Attributes: bp-based frame

sub_408128 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
xor     esi, esi

loc_408131:
push    0
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_40A8D4
mov     edi, eax
add     esp, 0Ch
test    edi, edi
jnz     short loc_40816E
cmp     dword_424B40, eax
jbe     short loc_40816E
push    esi             ; dwMilliseconds
call    ds:Sleep
lea     eax, [esi+3E8h]
cmp     eax, dword_424B40
jbe     short loc_408167
or      eax, 0FFFFFFFFh

loc_408167:
mov     esi, eax
cmp     eax, 0FFFFFFFFh
jnz     short loc_408131

loc_40816E:
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
sub_408128 endp



; Attributes: bp-based frame

sub_408174 proc near

lpMem= dword ptr  8
dwBytes= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
xor     esi, esi

loc_40817D:             ; dwBytes
push    [ebp+dwBytes]
push    [ebp+lpMem]     ; lpMem
call    sub_40A9F2
mov     edi, eax
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_4081BC
cmp     [ebp+dwBytes], eax
jz      short loc_4081BC
cmp     dword_424B40, eax
jbe     short loc_4081BC
push    esi             ; dwMilliseconds
call    ds:Sleep
lea     eax, [esi+3E8h]
cmp     eax, dword_424B40
jbe     short loc_4081B5
or      eax, 0FFFFFFFFh

loc_4081B5:
mov     esi, eax
cmp     eax, 0FFFFFFFFh
jnz     short loc_40817D

loc_4081BC:
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
sub_408174 endp




sub_4081C2 proc near
mov     eax, dword_411004
or      eax, 1
xor     ecx, ecx
cmp     dword_424B44, eax
setz    cl
mov     eax, ecx
retn
sub_4081C2 endp



; Attributes: bp-based frame

; int __cdecl sub_4081D8(int, LPSTR lpMultiByteStr, int cbMultiByte, WCHAR WideCharStr, int)
sub_4081D8 proc near

var_10= dword ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4
arg_0= dword ptr  8
lpMultiByteStr= dword ptr  0Ch
cbMultiByte= dword ptr  10h
WideCharStr= word ptr  14h
arg_10= dword ptr  18h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+lpMultiByteStr]
xor     ebx, ebx
push    edi
mov     edi, [ebp+cbMultiByte]
cmp     esi, ebx
jnz     short loc_408203
cmp     edi, ebx
jbe     short loc_408203
mov     eax, [ebp+arg_0]
cmp     eax, ebx
jz      short loc_4081FC
mov     [eax], ebx

loc_4081FC:
xor     eax, eax
jmp     loc_408286

loc_408203:
mov     eax, [ebp+arg_0]
cmp     eax, ebx
jz      short loc_40820D
or      dword ptr [eax], 0FFFFFFFFh

loc_40820D:
cmp     edi, 7FFFFFFFh
jbe     short loc_408230
call    sub_404899
push    16h
pop     esi
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
mov     [eax], esi
call    sub_404831
add     esp, 14h

loc_40822C:
mov     eax, esi
jmp     short loc_408286

loc_408230:
push    [ebp+arg_10]
lea     ecx, [ebp+var_10]
call    sub_4031A8
mov     eax, [ebp+var_10]
cmp     [eax+14h], ebx
jnz     loc_4082E3
mov     ax, [ebp+WideCharStr]
mov     ecx, 0FFh
cmp     ax, cx
jbe     short loc_40828B
cmp     esi, ebx
jz      short loc_408268
cmp     edi, ebx
jbe     short loc_408268
push    edi
push    ebx
push    esi
call    sub_402FB0
add     esp, 0Ch

loc_408268:
call    sub_404899
mov     dword ptr [eax], 2Ah
call    sub_404899
mov     eax, [eax]
cmp     [ebp+var_4], bl
jz      short loc_408286
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_408286:
pop     edi
pop     esi
pop     ebx
leave
retn

loc_40828B:
cmp     esi, ebx
jz      short loc_4082C1
cmp     edi, ebx
ja      short loc_4082BF

loc_408293:
call    sub_404899
push    22h
pop     esi
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
mov     [eax], esi
call    sub_404831
add     esp, 14h
cmp     [ebp+var_4], bl
jz      loc_40822C
mov     eax, [ebp+var_8]
and     dword ptr [eax+70h], 0FFFFFFFDh
jmp     loc_40822C

loc_4082BF:
mov     [esi], al

loc_4082C1:
mov     eax, [ebp+arg_0]
cmp     eax, ebx
jz      short loc_4082CE
mov     dword ptr [eax], 1

loc_4082CE:
cmp     [ebp+var_4], bl
jz      loc_4081FC
mov     eax, [ebp+var_8]
and     dword ptr [eax+70h], 0FFFFFFFDh
jmp     loc_4081FC

loc_4082E3:
lea     ecx, [ebp+lpMultiByteStr]
push    ecx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
push    edi             ; cbMultiByte
push    esi             ; lpMultiByteStr
push    1               ; cchWideChar
lea     ecx, [ebp+WideCharStr]
push    ecx             ; lpWideCharStr
push    ebx             ; dwFlags
mov     [ebp+lpMultiByteStr], ebx
push    dword ptr [eax+4] ; CodePage
call    ds:WideCharToMultiByte
cmp     eax, ebx
jz      short loc_408315
cmp     [ebp+lpMultiByteStr], ebx
jnz     loc_408268
mov     ecx, [ebp+arg_0]
cmp     ecx, ebx
jz      short loc_4082CE
mov     [ecx], eax
jmp     short loc_4082CE

loc_408315:
call    ds:GetLastError
cmp     eax, 7Ah
jnz     loc_408268
cmp     esi, ebx
jz      loc_408293
cmp     edi, ebx
jbe     loc_408293
push    edi
push    ebx
push    esi
call    sub_402FB0
add     esp, 0Ch
jmp     loc_408293
sub_4081D8 endp



; Attributes: bp-based frame

; int __cdecl sub_408344(int, LPSTR lpMultiByteStr, int cbMultiByte, WCHAR WideCharStr)
sub_408344 proc near

arg_0= dword ptr  8
lpMultiByteStr= dword ptr  0Ch
cbMultiByte= dword ptr  10h
WideCharStr= word ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
push    0               ; int
push    dword ptr [ebp+WideCharStr] ; WideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    [ebp+arg_0]     ; int
call    sub_4081D8
add     esp, 14h
pop     ebp
retn
sub_408344 endp

align 10h



sub_408370 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch
arg_C= dword ptr  10h

push    esi
mov     eax, [esp+4+arg_C]
or      eax, eax
jnz     short loc_4083A1
mov     ecx, [esp+4+arg_8]
mov     eax, [esp+4+arg_4]
xor     edx, edx
div     ecx
mov     ebx, eax
mov     eax, [esp+4+arg_0]
div     ecx
mov     esi, eax
mov     eax, ebx
mul     [esp+4+arg_8]
mov     ecx, eax
mov     eax, esi
mul     [esp+4+arg_8]
add     edx, ecx
jmp     short loc_4083E8

loc_4083A1:
mov     ecx, eax
mov     ebx, [esp+4+arg_8]
mov     edx, [esp+4+arg_4]
mov     eax, [esp+4+arg_0]

loc_4083AF:
shr     ecx, 1
rcr     ebx, 1
shr     edx, 1
rcr     eax, 1
or      ecx, ecx
jnz     short loc_4083AF
div     ebx
mov     esi, eax
mul     [esp+4+arg_C]
mov     ecx, eax
mov     eax, [esp+4+arg_8]
mul     esi
add     edx, ecx
jb      short loc_4083DD
cmp     edx, [esp+4+arg_4]
ja      short loc_4083DD
jb      short loc_4083E6
cmp     eax, [esp+4+arg_0]
jbe     short loc_4083E6

loc_4083DD:
dec     esi
sub     eax, [esp+4+arg_8]
sbb     edx, [esp+4+arg_C]

loc_4083E6:
xor     ebx, ebx

loc_4083E8:
sub     eax, [esp+4+arg_0]
sbb     edx, [esp+4+arg_4]
neg     edx
neg     eax
sbb     edx, 0
mov     ecx, edx
mov     edx, ebx
mov     ebx, ecx
mov     ecx, eax
mov     eax, esi
pop     esi
retn    10h
sub_408370 endp



; Attributes: bp-based frame

sub_408405 proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    10h
push    offset stru_40F7A0
call    __SEH_prolog4
xor     ebx, ebx
mov     [ebp+var_1C], ebx
push    1
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], ebx
push    3
pop     edi

loc_408424:
mov     [ebp+var_20], edi
cmp     edi, dword_425F20
jge     short loc_408486
mov     esi, edi
shl     esi, 2
mov     eax, dword_424F1C
add     eax, esi
cmp     [eax], ebx
jz      short loc_408483
mov     eax, [eax]
test    byte ptr [eax+0Ch], 83h
jz      short loc_408456
push    eax
call    sub_4030A1
pop     ecx
cmp     eax, 0FFFFFFFFh
jz      short loc_408456
inc     [ebp+var_1C]

loc_408456:
cmp     edi, 14h
jl      short loc_408483
mov     eax, dword_424F1C
mov     eax, [esi+eax]
add     eax, 20h
push    eax             ; lpCriticalSection
call    ds:DeleteCriticalSection
mov     eax, dword_424F1C
push    dword ptr [esi+eax] ; lpMem
call    sub_404EF7
pop     ecx
mov     eax, dword_424F1C
mov     [esi+eax], ebx

loc_408483:
inc     edi
jmp     short loc_408424

loc_408486:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40849B

loc_408492:
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn

loc_40849B:
push    1
call    sub_408546
pop     ecx
retn
sub_408405 endp




sub_4084A4 proc near
mov     edi, edi
push    esi
push    edi
xor     esi, esi
mov     edi, offset unk_424B48

loc_4084AF:
cmp     dword_411CE4[esi*8], 1
jnz     short loc_4084D7
lea     eax, ds:411CE0h[esi*8]
mov     [eax], edi
push    0FA0h           ; dwSpinCount
push    dword ptr [eax] ; lpCriticalSection
add     edi, 18h
call    sub_408662
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_4084E3

loc_4084D7:
inc     esi
cmp     esi, 24h
jl      short loc_4084AF
xor     eax, eax
inc     eax

loc_4084E0:
pop     edi
pop     esi
retn

loc_4084E3:
and     lpCriticalSection[esi*8], 0
xor     eax, eax
jmp     short loc_4084E0
sub_4084A4 endp




sub_4084EF proc near
mov     edi, edi
push    ebx
mov     ebx, ds:DeleteCriticalSection
push    esi
mov     esi, offset lpCriticalSection
push    edi

loc_4084FF:
mov     edi, [esi]
test    edi, edi
jz      short loc_408518
cmp     dword ptr [esi+4], 1
jz      short loc_408518
push    edi             ; lpCriticalSection
call    ebx ; DeleteCriticalSection
push    edi             ; lpMem
call    sub_404EF7
and     dword ptr [esi], 0
pop     ecx

loc_408518:
add     esi, 8
cmp     esi, offset unk_411E00
jl      short loc_4084FF
mov     esi, offset lpCriticalSection
pop     edi

loc_408529:
mov     eax, [esi]
test    eax, eax
jz      short loc_408538
cmp     dword ptr [esi+4], 1
jnz     short loc_408538
push    eax             ; lpCriticalSection
call    ebx ; DeleteCriticalSection

loc_408538:
add     esi, 8
cmp     esi, offset unk_411E00
jl      short loc_408529
pop     esi
pop     ebx
retn
sub_4084EF endp



; Attributes: bp-based frame

sub_408546 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    lpCriticalSection[eax*8] ; lpCriticalSection
call    ds:LeaveCriticalSection
pop     ebp
retn
sub_408546 endp



; Attributes: bp-based frame

sub_40855D proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    0Ch
push    offset stru_40F7C0
call    __SEH_prolog4
xor     edi, edi
inc     edi
mov     [ebp+var_1C], edi
xor     ebx, ebx
cmp     hHeap, ebx
jnz     short loc_408591
call    sub_406C97
push    1Eh
call    sub_406AEC
push    0FFh            ; uExitCode
call    sub_406838
db  59h ; Y
db  59h ; Y

loc_408591:
mov     esi, [ebp+arg_0]
lea     esi, ds:411CE0h[esi*8]
cmp     [esi], ebx
jz      short loc_4085A3
mov     eax, edi
jmp     short loc_408611

loc_4085A3:
push    18h
call    sub_4080E3
pop     ecx
mov     edi, eax
cmp     edi, ebx
jnz     short loc_4085C0
call    sub_404899
mov     dword ptr [eax], 0Ch
xor     eax, eax
jmp     short loc_408611

loc_4085C0:
push    0Ah
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], ebx
cmp     [esi], ebx
jnz     short loc_4085FB
push    0FA0h           ; dwSpinCount
push    edi             ; lpCriticalSection
call    sub_408662
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_4085F7
push    edi             ; lpMem
call    sub_404EF7
pop     ecx
call    sub_404899
mov     dword ptr [eax], 0Ch
mov     [ebp+var_1C], ebx
jmp     short loc_408602

loc_4085F7:
mov     [esi], edi
jmp     short loc_408602

loc_4085FB:             ; lpMem
push    edi
call    sub_404EF7
pop     ecx

loc_408602:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_408617

loc_40860E:
mov     eax, [ebp+var_1C]

loc_408611:
call    __SEH_epilog4
retn

loc_408617:
push    0Ah
call    sub_408546
pop     ecx
retn
sub_40855D endp



; Attributes: bp-based frame

sub_408620 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
lea     esi, ds:411CE0h[eax*8]
cmp     dword ptr [esi], 0
jnz     short loc_408648
push    eax
call    sub_40855D
pop     ecx
test    eax, eax
jnz     short loc_408648
push    11h
call    sub_4067E4
pop     ecx

loc_408648:             ; lpCriticalSection
push    dword ptr [esi]
call    ds:EnterCriticalSection
pop     esi
pop     ebp
retn
sub_408620 endp



; Attributes: bp-based frame

sub_408653 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424C9C, eax
pop     ebp
retn
sub_408653 endp



; Attributes: bp-based frame

; int __cdecl sub_408662(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
sub_408662 proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
lpCriticalSection= dword ptr  8
dwSpinCount= dword ptr  0Ch

push    10h
push    offset stru_40F7E0
call    __SEH_prolog4
and     [ebp+ms_exc.registration.TryLevel], 0
push    [ebp+dwSpinCount] ; dwSpinCount
push    [ebp+lpCriticalSection] ; lpCriticalSection
call    ds:InitializeCriticalSectionAndSpinCount
mov     [ebp+var_1C], eax
jmp     short loc_4086B2

loc_408683:
mov     eax, [ebp+ms_exc.exc_ptr]
mov     eax, [eax]
mov     eax, [eax]
mov     [ebp+var_20], eax
xor     ecx, ecx
cmp     eax, 0C0000017h
setz    cl
mov     eax, ecx
retn

loc_40869A:
mov     esp, [ebp+ms_exc.old_esp]
cmp     [ebp+var_20], 0C0000017h
jnz     short loc_4086AE
push    8               ; dwErrCode
call    ds:SetLastError

loc_4086AE:
and     [ebp+var_1C], 0

loc_4086B2:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn
sub_408662 endp

align 10h


; Attributes: bp-based frame

sub_4086D0 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 5A4Dh
cmp     [ecx], ax
jz      short loc_4086E6

loc_4086E2:
xor     eax, eax
pop     ebp
retn

loc_4086E6:
mov     eax, [ecx+3Ch]
add     eax, ecx
cmp     dword ptr [eax], 4550h
jnz     short loc_4086E2
xor     edx, edx
mov     ecx, 10Bh
cmp     [eax+18h], cx
setz    dl
mov     eax, edx
pop     ebp
retn
sub_4086D0 endp

align 10h


; Attributes: bp-based frame

sub_408710 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+3Ch]
add     ecx, eax
movzx   eax, word ptr [ecx+14h]
push    ebx
push    esi
movzx   esi, word ptr [ecx+6]
xor     edx, edx
push    edi
lea     eax, [eax+ecx+18h]
test    esi, esi
jbe     short loc_40874D
mov     edi, [ebp+arg_4]

loc_408735:
mov     ecx, [eax+0Ch]
cmp     edi, ecx
jb      short loc_408745
mov     ebx, [eax+8]
add     ebx, ecx
cmp     edi, ebx
jb      short loc_40874F

loc_408745:
inc     edx
add     eax, 28h
cmp     edx, esi
jb      short loc_408735

loc_40874D:
xor     eax, eax

loc_40874F:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_408710 endp

align 10h


; Attributes: bp-based frame

sub_408760 proc near

ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    0FFFFFFFEh
push    offset stru_40F800
push    offset SEH_401060
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, dword_411004
xor     [ebp+ms_exc.registration.ScopeTable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+ms_exc.registration.TryLevel], 0
push    400000h
call    sub_4086D0
add     esp, 4
test    eax, eax
jz      short loc_408802
mov     eax, [ebp+arg_0]
sub     eax, 400000h
push    eax
push    400000h
call    sub_408710
add     esp, 8
test    eax, eax
jz      short loc_408802
mov     eax, [eax+24h]
shr     eax, 1Fh
not     eax
and     eax, 1
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
mov     ecx, [ebp+ms_exc.registration.Next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn

loc_4087EB:
mov     eax, [ebp+ms_exc.exc_ptr]
mov     ecx, [eax]
mov     eax, [ecx]
xor     edx, edx
cmp     eax, 0C0000005h
setz    dl
mov     eax, edx
retn

loc_4087FF:
mov     esp, [ebp+ms_exc.old_esp]

loc_408802:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.Next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub_408760 endp

align 10h
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
push    ebp
push    0
push    0
push    offset loc_408838
push    dword ptr [ebp+8]
call    RtlUnwind

loc_408838:
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn

loc_408840:
mov     ecx, [esp+4]
test    dword ptr [ecx+4], 6
mov     eax, 1
jz      short locret_408884
mov     eax, [esp+14h]
mov     ecx, [eax-4]
xor     ecx, eax
call    anti_debug
push    ebp
mov     ebp, [eax+10h]
mov     edx, [eax+28h]
push    edx
mov     edx, [eax+24h]
push    edx
call    sub_408885
add     esp, 8
pop     ebp
mov     eax, [esp+8]
mov     edx, [esp+10h]
mov     [edx], eax
mov     eax, 3

locret_408884:
retn



sub_408885 proc near

var_20= dword ptr -20h
var_18= dword ptr -18h
arg_0= dword ptr  4
arg_4= dword ptr  8

push    ebx
push    esi
push    edi
mov     eax, [esp+0Ch+arg_0]
push    ebp
push    eax
push    0FFFFFFFEh
push    offset loc_408840
push    large dword ptr fs:0
mov     eax, dword_411004
xor     eax, esp
push    eax
lea     eax, [esp+24h+var_20]
mov     large fs:0, eax

loc_4088AE:
mov     eax, [esp+24h+arg_0]
mov     ebx, [eax+8]
mov     esi, [eax+0Ch]
cmp     esi, 0FFFFFFFFh
jz      short loc_4088F7
cmp     [esp+24h+arg_4], 0FFFFFFFFh
jz      short loc_4088CA
cmp     esi, [esp+24h+arg_4]
jbe     short loc_4088F7

loc_4088CA:
lea     esi, [esi+esi*2]
mov     ecx, [ebx+esi*4]
mov     [esp+24h+var_18], ecx
mov     [eax+0Ch], ecx
cmp     dword ptr [ebx+esi*4+4], 0
jnz     short loc_4088F5
push    101h
mov     eax, [ebx+esi*4+8]
call    sub_408935
mov     eax, [ebx+esi*4+8]
call    sub_408954

loc_4088F5:
jmp     short loc_4088AE

loc_4088F7:
mov     ecx, [esp+24h+var_20]
mov     large fs:0, ecx
add     esp, 18h
pop     edi
pop     esi
pop     ebx
retn
sub_408885 endp

xor     eax, eax
mov     ecx, large fs:0
cmp     dword ptr [ecx+4], offset loc_408840
jnz     short locret_40892B
mov     edx, [ecx+0Ch]
mov     edx, [edx+0Ch]
cmp     [ecx+8], edx
jnz     short locret_40892B
mov     eax, 1

locret_40892B:
retn
push    ebx
push    ecx
mov     ebx, offset unk_411E00
jmp     short loc_408940



sub_408935 proc near

arg_0= dword ptr  4

push    ebx
push    ecx
mov     ebx, offset unk_411E00
mov     ecx, [esp+8+arg_0]

loc_408940:
mov     [ebx+8], ecx
mov     [ebx+4], eax
mov     [ebx+0Ch], ebp
push    ebp
push    ecx
push    eax
pop     eax
pop     ecx
pop     ebp
pop     ecx
pop     ebx
retn    4
sub_408935 endp




sub_408954 proc near
call    eax
retn
sub_408954 endp



; Attributes: bp-based frame

sub_408957 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    ebx
xor     ebx, ebx
cmp     ecx, ebx
push    esi
push    edi
jl      short loc_4089C3
cmp     ecx, uNumber
jnb     short loc_4089C3
mov     eax, ecx
sar     eax, 5
mov     esi, ecx
lea     edi, ds:424E00h[eax*4]
mov     eax, [edi]
and     esi, 1Fh
shl     esi, 6
add     eax, esi
test    byte ptr [eax+4], 1
jz      short loc_4089C3
cmp     dword ptr [eax], 0FFFFFFFFh
jz      short loc_4089C3
cmp     dword_411000, 1
jnz     short loc_4089B9
sub     ecx, ebx
jz      short loc_4089B0
dec     ecx
jz      short loc_4089AB
dec     ecx
jnz     short loc_4089B9
push    ebx
push    0FFFFFFF4h
jmp     short loc_4089B3

loc_4089AB:
push    ebx
push    0FFFFFFF5h
jmp     short loc_4089B3

loc_4089B0:             ; hHandle
push    ebx
push    0FFFFFFF6h      ; nStdHandle

loc_4089B3:
call    ds:SetStdHandle

loc_4089B9:
mov     eax, [edi]
or      dword ptr [esi+eax], 0FFFFFFFFh
xor     eax, eax
jmp     short loc_4089D8

loc_4089C3:
call    sub_404899
mov     dword ptr [eax], 9
call    sub_4048AC
mov     [eax], ebx
or      eax, 0FFFFFFFFh

loc_4089D8:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_408957 endp



; Attributes: bp-based frame

sub_4089DD proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_408A02
call    sub_4048AC
and     dword ptr [eax], 0
call    sub_404899
mov     dword ptr [eax], 9
or      eax, 0FFFFFFFFh
pop     ebp
retn

loc_408A02:
push    esi
xor     esi, esi
cmp     eax, esi
jl      short loc_408A2B
cmp     eax, uNumber
jnb     short loc_408A2B
mov     ecx, eax
and     eax, 1Fh
sar     ecx, 5
mov     ecx, dword_424E00[ecx*4]
shl     eax, 6
add     eax, ecx
test    byte ptr [eax+4], 1
jnz     short loc_408A4F

loc_408A2B:
call    sub_4048AC
mov     [eax], esi
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 9
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     short loc_408A51

loc_408A4F:
mov     eax, [eax]

loc_408A51:
pop     esi
pop     ebp
retn
sub_4089DD endp



; Attributes: bp-based frame

sub_408A54 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    0Ch
push    offset stru_40F820
call    __SEH_prolog4
mov     edi, [ebp+arg_0]
mov     eax, edi
sar     eax, 5
mov     esi, edi
and     esi, 1Fh
shl     esi, 6
add     esi, dword_424E00[eax*4]
mov     [ebp+var_1C], 1
xor     ebx, ebx
cmp     [esi+8], ebx
jnz     short loc_408ABB
push    0Ah
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], ebx
cmp     [esi+8], ebx
jnz     short loc_408AAF
push    0FA0h           ; dwSpinCount
lea     eax, [esi+0Ch]
push    eax             ; lpCriticalSection
call    sub_408662
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_408AAC
mov     [ebp+var_1C], ebx

loc_408AAC:
inc     dword ptr [esi+8]

loc_408AAF:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_408AEB

loc_408ABB:
cmp     [ebp+var_1C], ebx
jz      short loc_408ADD
mov     eax, edi
sar     eax, 5
and     edi, 1Fh
shl     edi, 6
mov     eax, dword_424E00[eax*4]
lea     eax, [eax+edi+0Ch]
push    eax             ; lpCriticalSection
call    ds:EnterCriticalSection

loc_408ADD:
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn

loc_408AE6:
xor     ebx, ebx
mov     edi, [ebp+arg_0]

loc_408AEB:
push    0Ah
call    sub_408546
pop     ecx
retn
sub_408A54 endp



; Attributes: bp-based frame

sub_408AF4 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, eax
and     eax, 1Fh
sar     ecx, 5
mov     ecx, dword_424E00[ecx*4]
shl     eax, 6
lea     eax, [ecx+eax+0Ch]
push    eax             ; lpCriticalSection
call    ds:LeaveCriticalSection
pop     ebp
retn
sub_408AF4 endp



; Attributes: bp-based frame

sub_408B1B proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, dword_424DC8
mov     eax, lpMem
imul    ecx, 14h
add     ecx, eax
jmp     short loc_408B43

loc_408B32:
mov     edx, [ebp+arg_0]
sub     edx, [eax+0Ch]
cmp     edx, 100000h
jb      short loc_408B49
add     eax, 14h

loc_408B43:
cmp     eax, ecx
jb      short loc_408B32
xor     eax, eax

loc_408B49:
pop     ebp
retn
sub_408B1B endp



; Attributes: bp-based frame

sub_408B4B proc near

var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+10h]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, esi
sub     edi, [ecx+0Ch]
add     esi, 0FFFFFFFCh
shr     edi, 0Fh
mov     ecx, edi
imul    ecx, 204h
lea     ecx, [ecx+eax+144h]
mov     [ebp+var_10], ecx
mov     ecx, [esi]
dec     ecx
mov     [ebp+var_4], ecx
test    cl, 1
jnz     loc_408E5D
push    ebx
lea     ebx, [ecx+esi]
mov     edx, [ebx]
mov     [ebp+var_C], edx
mov     edx, [esi-4]
mov     [ebp+var_8], edx
mov     edx, [ebp+var_C]
mov     [ebp+arg_4], ebx
test    dl, 1
jnz     short loc_408C18
sar     edx, 4
dec     edx
cmp     edx, 3Fh
jbe     short loc_408BB0
push    3Fh
pop     edx

loc_408BB0:
mov     ecx, [ebx+4]
cmp     ecx, [ebx+8]
jnz     short loc_408BFA
mov     ebx, 80000000h
cmp     edx, 20h
jnb     short loc_408BDB
mov     ecx, edx
shr     ebx, cl
lea     ecx, [edx+eax+4]
not     ebx
and     [eax+edi*4+44h], ebx
dec     byte ptr [ecx]
jnz     short loc_408BF7
mov     ecx, [ebp+arg_0]
and     [ecx], ebx
jmp     short loc_408BF7

loc_408BDB:
lea     ecx, [edx-20h]
shr     ebx, cl
lea     ecx, [edx+eax+4]
not     ebx
and     [eax+edi*4+0C4h], ebx
dec     byte ptr [ecx]
jnz     short loc_408BF7
mov     ecx, [ebp+arg_0]
and     [ecx+4], ebx

loc_408BF7:
mov     ebx, [ebp+arg_4]

loc_408BFA:
mov     edx, [ebx+8]
mov     ebx, [ebx+4]
mov     ecx, [ebp+var_4]
add     ecx, [ebp+var_C]
mov     [edx+4], ebx
mov     edx, [ebp+arg_4]
mov     ebx, [edx+4]
mov     edx, [edx+8]
mov     [ebx+8], edx
mov     [ebp+var_4], ecx

loc_408C18:
mov     edx, ecx
sar     edx, 4
dec     edx
cmp     edx, 3Fh
jbe     short loc_408C26
push    3Fh
pop     edx

loc_408C26:
mov     ebx, [ebp+var_8]
and     ebx, 1
mov     [ebp+var_C], ebx
jnz     loc_408CC4
sub     esi, [ebp+var_8]
mov     ebx, [ebp+var_8]
sar     ebx, 4
push    3Fh
mov     [ebp+arg_4], esi
dec     ebx
pop     esi
cmp     ebx, esi
jbe     short loc_408C4B
mov     ebx, esi

loc_408C4B:
add     ecx, [ebp+var_8]
mov     edx, ecx
sar     edx, 4
dec     edx
mov     [ebp+var_4], ecx
cmp     edx, esi
jbe     short loc_408C5D
mov     edx, esi

loc_408C5D:
cmp     ebx, edx
jz      short loc_408CBF
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+4]
cmp     esi, [ecx+8]
jnz     short loc_408CA7
mov     esi, 80000000h
cmp     ebx, 20h
jnb     short loc_408C8D
mov     ecx, ebx
shr     esi, cl
not     esi
and     [eax+edi*4+44h], esi
dec     byte ptr [ebx+eax+4]
jnz     short loc_408CA7
mov     ecx, [ebp+arg_0]
and     [ecx], esi
jmp     short loc_408CA7

loc_408C8D:
lea     ecx, [ebx-20h]
shr     esi, cl
not     esi
and     [eax+edi*4+0C4h], esi
dec     byte ptr [ebx+eax+4]
jnz     short loc_408CA7
mov     ecx, [ebp+arg_0]
and     [ecx+4], esi

loc_408CA7:
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+8]
mov     ecx, [ecx+4]
mov     [esi+4], ecx
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+4]
mov     ecx, [ecx+8]
mov     [esi+8], ecx

loc_408CBF:
mov     esi, [ebp+arg_4]
jmp     short loc_408CC7

loc_408CC4:
mov     ebx, [ebp+arg_0]

loc_408CC7:
cmp     [ebp+var_C], 0
jnz     short loc_408CD5
cmp     ebx, edx
jz      loc_408D55

loc_408CD5:
mov     ecx, [ebp+var_10]
lea     ecx, [ecx+edx*8]
mov     ebx, [ecx+4]
mov     [esi+8], ecx
mov     [esi+4], ebx
mov     [ecx+4], esi
mov     ecx, [esi+4]
mov     [ecx+8], esi
mov     ecx, [esi+4]
cmp     ecx, [esi+8]
jnz     short loc_408D55
mov     cl, [edx+eax+4]
mov     byte ptr [ebp+arg_4+3], cl
inc     cl
mov     [edx+eax+4], cl
cmp     edx, 20h
jnb     short loc_408D2C
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_408D1B
mov     ecx, edx
mov     ebx, 80000000h
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx], ebx

loc_408D1B:
mov     ebx, 80000000h
mov     ecx, edx
shr     ebx, cl
lea     eax, [eax+edi*4+44h]
or      [eax], ebx
jmp     short loc_408D55

loc_408D2C:
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_408D42
lea     ecx, [edx-20h]
mov     ebx, 80000000h
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx+4], ebx

loc_408D42:
lea     ecx, [edx-20h]
mov     edx, 80000000h
shr     edx, cl
lea     eax, [eax+edi*4+0C4h]
or      [eax], edx

loc_408D55:
mov     eax, [ebp+var_4]
mov     [esi], eax
mov     [eax+esi-4], eax
mov     eax, [ebp+var_10]
dec     dword ptr [eax]
jnz     loc_408E5C
mov     eax, dword_424CA0
test    eax, eax
jz      loc_408E4E
mov     ecx, dword_424DDC
mov     esi, ds:VirtualFree
push    4000h           ; dwFreeType
shl     ecx, 0Fh
add     ecx, [eax+0Ch]
mov     ebx, 8000h
push    ebx             ; dwSize
push    ecx             ; lpAddress
call    esi ; VirtualFree
mov     ecx, dword_424DDC
mov     eax, dword_424CA0
mov     edx, 80000000h
shr     edx, cl
or      [eax+8], edx
mov     eax, dword_424CA0
mov     eax, [eax+10h]
mov     ecx, dword_424DDC
and     dword ptr [eax+ecx*4+0C4h], 0
mov     eax, dword_424CA0
mov     eax, [eax+10h]
dec     byte ptr [eax+43h]
mov     eax, dword_424CA0
mov     ecx, [eax+10h]
cmp     byte ptr [ecx+43h], 0
jnz     short loc_408DE3
and     dword ptr [eax+4], 0FFFFFFFEh
mov     eax, dword_424CA0

loc_408DE3:
cmp     dword ptr [eax+8], 0FFFFFFFFh
jnz     short loc_408E4E
push    ebx             ; dwFreeType
push    0               ; dwSize
push    dword ptr [eax+0Ch] ; lpAddress
call    esi ; VirtualFree
mov     eax, dword_424CA0
push    dword ptr [eax+10h] ; lpMem
push    0               ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapFree
mov     ecx, dword_424DC8
mov     eax, dword_424CA0
imul    ecx, 14h
mov     edx, lpMem
sub     ecx, eax
lea     ecx, [ecx+edx-14h]
push    ecx
lea     ecx, [eax+14h]
push    ecx
push    eax
call    sub_40AE70
mov     eax, [ebp+arg_0]
add     esp, 0Ch
dec     dword_424DC8
cmp     eax, dword_424CA0
jbe     short loc_408E44
sub     [ebp+arg_0], 14h

loc_408E44:
mov     eax, lpMem
mov     dword_424DD4, eax

loc_408E4E:
mov     eax, [ebp+arg_0]
mov     dword_424CA0, eax
mov     dword_424DDC, edi

loc_408E5C:
pop     ebx

loc_408E5D:
pop     edi
pop     esi
leave
retn
sub_408B4B endp




sub_408E61 proc near
mov     eax, dword_424DD8
push    esi
mov     esi, dword_424DC8
push    edi
xor     edi, edi
cmp     esi, eax
jnz     short loc_408EA8
add     eax, 10h
imul    eax, 14h
push    eax             ; dwBytes
push    lpMem           ; lpMem
push    edi             ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapReAlloc
cmp     eax, edi
jnz     short loc_408E96

loc_408E92:
xor     eax, eax
jmp     short loc_408F0E

loc_408E96:
add     dword_424DD8, 10h
mov     esi, dword_424DC8
mov     lpMem, eax

loc_408EA8:
imul    esi, 14h
add     esi, lpMem
push    41C4h           ; dwBytes
push    8               ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapAlloc
mov     [esi+10h], eax
cmp     eax, edi
jz      short loc_408E92
push    4               ; flProtect
push    2000h           ; flAllocationType
push    100000h         ; dwSize
push    edi             ; lpAddress
call    ds:VirtualAlloc
mov     [esi+0Ch], eax
cmp     eax, edi
jnz     short loc_408EF7
push    dword ptr [esi+10h] ; lpMem
push    edi             ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapFree
jmp     short loc_408E92

loc_408EF7:
or      dword ptr [esi+8], 0FFFFFFFFh
mov     [esi], edi
mov     [esi+4], edi
inc     dword_424DC8
mov     eax, [esi+10h]
or      dword ptr [eax], 0FFFFFFFFh
mov     eax, esi

loc_408F0E:
pop     edi
pop     esi
retn
sub_408E61 endp



; Attributes: bp-based frame

sub_408F11 proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+8]
push    ebx
push    esi
mov     esi, [ecx+10h]
push    edi
xor     ebx, ebx
jmp     short loc_408F2B

loc_408F28:
add     eax, eax
inc     ebx

loc_408F2B:
test    eax, eax
jge     short loc_408F28
mov     eax, ebx
imul    eax, 204h
lea     eax, [eax+esi+144h]
push    3Fh
mov     [ebp+var_8], eax
pop     edx

loc_408F44:
mov     [eax+8], eax
mov     [eax+4], eax
add     eax, 8
dec     edx
jnz     short loc_408F44
push    4               ; flProtect
mov     edi, ebx
push    1000h           ; flAllocationType
shl     edi, 0Fh
add     edi, [ecx+0Ch]
push    8000h           ; dwSize
push    edi             ; lpAddress
call    ds:VirtualAlloc
test    eax, eax
jnz     short loc_408F77
or      eax, 0FFFFFFFFh
jmp     loc_409014

loc_408F77:
lea     edx, [edi+7000h]
mov     [ebp+var_4], edx
cmp     edi, edx
ja      short loc_408FC7
mov     ecx, edx
sub     ecx, edi
shr     ecx, 0Ch
lea     eax, [edi+10h]
inc     ecx

loc_408F8F:
or      dword ptr [eax-8], 0FFFFFFFFh
or      dword ptr [eax+0FECh], 0FFFFFFFFh
lea     edx, [eax+0FFCh]
mov     [eax], edx
lea     edx, [eax-1004h]
mov     dword ptr [eax-4], 0FF0h
mov     [eax+4], edx
mov     dword ptr [eax+0FE8h], 0FF0h
add     eax, 1000h
dec     ecx
jnz     short loc_408F8F
mov     edx, [ebp+var_4]

loc_408FC7:
mov     eax, [ebp+var_8]
add     eax, 1F8h
lea     ecx, [edi+0Ch]
mov     [eax+4], ecx
mov     [ecx+8], eax
lea     ecx, [edx+0Ch]
mov     [eax+8], ecx
mov     [ecx+4], eax
and     dword ptr [esi+ebx*4+44h], 0
xor     edi, edi
inc     edi
mov     [esi+ebx*4+0C4h], edi
mov     al, [esi+43h]
mov     cl, al
inc     cl
test    al, al
mov     eax, [ebp+arg_0]
mov     [esi+43h], cl
jnz     short loc_409004
or      [eax+4], edi

loc_409004:
mov     edx, 80000000h
mov     ecx, ebx
shr     edx, cl
not     edx
and     [eax+8], edx
mov     eax, ebx

loc_409014:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_408F11 endp



; Attributes: bp-based frame

sub_409019 proc near

var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0Ch
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+10h]
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_4]
mov     edx, edi
sub     edx, [ecx+0Ch]
add     esi, 17h
shr     edx, 0Fh
mov     ecx, edx
imul    ecx, 204h
lea     ecx, [ecx+eax+144h]
mov     [ebp+var_C], ecx
mov     ecx, [edi-4]
and     esi, 0FFFFFFF0h
dec     ecx
cmp     esi, ecx
lea     edi, [ecx+edi-4]
mov     ebx, [edi]
mov     [ebp+arg_8], ecx
mov     [ebp+var_4], ebx
jle     loc_4091BD
test    bl, 1
jnz     loc_4091B6
add     ebx, ecx
cmp     esi, ebx
jg      loc_4091B6
mov     ecx, [ebp+var_4]
sar     ecx, 4
dec     ecx
mov     [ebp+var_8], ecx
cmp     ecx, 3Fh
jbe     short loc_409090
push    3Fh
pop     ecx
mov     [ebp+var_8], ecx

loc_409090:
mov     ebx, [edi+4]
cmp     ebx, [edi+8]
jnz     short loc_4090DB
mov     ebx, 80000000h
cmp     ecx, 20h
jnb     short loc_4090BC
shr     ebx, cl
mov     ecx, [ebp+var_8]
lea     ecx, [ecx+eax+4]
not     ebx
and     [eax+edx*4+44h], ebx
dec     byte ptr [ecx]
jnz     short loc_4090DB
mov     ecx, [ebp+arg_0]
and     [ecx], ebx
jmp     short loc_4090DB

loc_4090BC:
add     ecx, 0FFFFFFE0h
shr     ebx, cl
mov     ecx, [ebp+var_8]
lea     ecx, [ecx+eax+4]
not     ebx
and     [eax+edx*4+0C4h], ebx
dec     byte ptr [ecx]
jnz     short loc_4090DB
mov     ecx, [ebp+arg_0]
and     [ecx+4], ebx

loc_4090DB:
mov     ecx, [edi+8]
mov     ebx, [edi+4]
mov     [ecx+4], ebx
mov     ecx, [edi+4]
mov     edi, [edi+8]
mov     [ecx+8], edi
mov     ecx, [ebp+arg_8]
sub     ecx, esi
add     [ebp+var_4], ecx
cmp     [ebp+var_4], 0
jle     loc_4091A4
mov     edi, [ebp+var_4]
mov     ecx, [ebp+arg_4]
sar     edi, 4
dec     edi
lea     ecx, [ecx+esi-4]
cmp     edi, 3Fh
jbe     short loc_409115
push    3Fh
pop     edi

loc_409115:
mov     ebx, [ebp+var_C]
lea     ebx, [ebx+edi*8]
mov     [ebp+arg_8], ebx
mov     ebx, [ebx+4]
mov     [ecx+4], ebx
mov     ebx, [ebp+arg_8]
mov     [ecx+8], ebx
mov     [ebx+4], ecx
mov     ebx, [ecx+4]
mov     [ebx+8], ecx
mov     ebx, [ecx+4]
cmp     ebx, [ecx+8]
jnz     short loc_409192
mov     cl, [edi+eax+4]
mov     byte ptr [ebp+arg_8+3], cl
inc     cl
mov     [edi+eax+4], cl
cmp     edi, 20h
jnb     short loc_409169
cmp     byte ptr [ebp+arg_8+3], 0
jnz     short loc_409161
mov     ecx, edi
mov     ebx, 80000000h
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx], ebx

loc_409161:
lea     eax, [eax+edx*4+44h]
mov     ecx, edi
jmp     short loc_409189

loc_409169:
cmp     byte ptr [ebp+arg_8+3], 0
jnz     short loc_40917F
lea     ecx, [edi-20h]
mov     ebx, 80000000h
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx+4], ebx

loc_40917F:
lea     eax, [eax+edx*4+0C4h]
lea     ecx, [edi-20h]

loc_409189:
mov     edx, 80000000h
shr     edx, cl
or      [eax], edx

loc_409192:
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+var_4]
lea     eax, [edx+esi-4]
mov     [eax], ecx
mov     [ecx+eax-4], ecx
jmp     short loc_4091A7

loc_4091A4:
mov     edx, [ebp+arg_4]

loc_4091A7:
lea     eax, [esi+1]
mov     [edx-4], eax
mov     [edx+esi-8], eax
jmp     loc_4092F2

loc_4091B6:
xor     eax, eax
jmp     loc_4092F5

loc_4091BD:
jge     loc_4092F2
mov     ebx, [ebp+arg_4]
sub     [ebp+arg_8], esi
lea     ecx, [esi+1]
mov     [ebx-4], ecx
lea     ebx, [ebx+esi-4]
mov     esi, [ebp+arg_8]
sar     esi, 4
dec     esi
mov     [ebp+arg_4], ebx
mov     [ebx-4], ecx
cmp     esi, 3Fh
jbe     short loc_4091E8
push    3Fh
pop     esi

loc_4091E8:
test    byte ptr [ebp+var_4], 1
jnz     loc_409272
mov     esi, [ebp+var_4]
sar     esi, 4
dec     esi
cmp     esi, 3Fh
jbe     short loc_409201
push    3Fh
pop     esi

loc_409201:
mov     ecx, [edi+4]
cmp     ecx, [edi+8]
jnz     short loc_40924B
mov     ebx, 80000000h
cmp     esi, 20h
jnb     short loc_40922C
mov     ecx, esi
shr     ebx, cl
lea     esi, [esi+eax+4]
not     ebx
and     [eax+edx*4+44h], ebx
dec     byte ptr [esi]
jnz     short loc_409248
mov     ecx, [ebp+arg_0]
and     [ecx], ebx
jmp     short loc_409248

loc_40922C:
lea     ecx, [esi-20h]
shr     ebx, cl
lea     ecx, [esi+eax+4]
not     ebx
and     [eax+edx*4+0C4h], ebx
dec     byte ptr [ecx]
jnz     short loc_409248
mov     ecx, [ebp+arg_0]
and     [ecx+4], ebx

loc_409248:
mov     ebx, [ebp+arg_4]

loc_40924B:
mov     ecx, [edi+8]
mov     esi, [edi+4]
mov     [ecx+4], esi
mov     esi, [edi+8]
mov     ecx, [edi+4]
mov     [ecx+8], esi
mov     esi, [ebp+arg_8]
add     esi, [ebp+var_4]
mov     [ebp+arg_8], esi
sar     esi, 4
dec     esi
cmp     esi, 3Fh
jbe     short loc_409272
push    3Fh
pop     esi

loc_409272:
mov     ecx, [ebp+var_C]
lea     ecx, [ecx+esi*8]
mov     edi, [ecx+4]
mov     [ebx+8], ecx
mov     [ebx+4], edi
mov     [ecx+4], ebx
mov     ecx, [ebx+4]
mov     [ecx+8], ebx
mov     ecx, [ebx+4]
cmp     ecx, [ebx+8]
jnz     short loc_4092E9
mov     cl, [esi+eax+4]
mov     byte ptr [ebp+arg_4+3], cl
inc     cl
mov     [esi+eax+4], cl
cmp     esi, 20h
jnb     short loc_4092C0
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_4092B8
mov     ecx, esi
mov     edi, 80000000h
shr     edi, cl
mov     ecx, [ebp+arg_0]
or      [ecx], edi

loc_4092B8:
lea     eax, [eax+edx*4+44h]
mov     ecx, esi
jmp     short loc_4092E0

loc_4092C0:
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_4092D6
lea     ecx, [esi-20h]
mov     edi, 80000000h
shr     edi, cl
mov     ecx, [ebp+arg_0]
or      [ecx+4], edi

loc_4092D6:
lea     eax, [eax+edx*4+0C4h]
lea     ecx, [esi-20h]

loc_4092E0:
mov     edx, 80000000h
shr     edx, cl
or      [eax], edx

loc_4092E9:
mov     eax, [ebp+arg_8]
mov     [ebx], eax
mov     [eax+ebx-4], eax

loc_4092F2:
xor     eax, eax
inc     eax

loc_4092F5:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_409019 endp



; Attributes: bp-based frame

sub_4092FA proc near

var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, dword_424DC8
mov     ecx, [ebp+arg_0]
imul    eax, 14h
add     eax, lpMem
add     ecx, 17h
and     ecx, 0FFFFFFF0h
mov     [ebp+var_10], ecx
sar     ecx, 4
push    ebx
dec     ecx
cmp     ecx, 20h
push    esi
push    edi
jge     short loc_409333
or      esi, 0FFFFFFFFh
shr     esi, cl
or      [ebp+var_8], 0FFFFFFFFh
jmp     short loc_409340

loc_409333:
add     ecx, 0FFFFFFE0h
or      edx, 0FFFFFFFFh
xor     esi, esi
shr     edx, cl
mov     [ebp+var_8], edx

loc_409340:
mov     ecx, dword_424DD4
mov     ebx, ecx
jmp     short loc_40935B

loc_40934A:
mov     edx, [ebx+4]
mov     edi, [ebx]
and     edx, [ebp+var_8]
and     edi, esi
or      edx, edi
jnz     short loc_409362
add     ebx, 14h

loc_40935B:
mov     [ebp+arg_0], ebx
cmp     ebx, eax
jb      short loc_40934A

loc_409362:
cmp     ebx, eax
jnz     short loc_4093E5
mov     ebx, lpMem
jmp     short loc_40937F

loc_40936E:
mov     edx, [ebx+4]
mov     edi, [ebx]
and     edx, [ebp+var_8]
and     edi, esi
or      edx, edi
jnz     short loc_409386
add     ebx, 14h

loc_40937F:
mov     [ebp+arg_0], ebx
cmp     ebx, ecx
jb      short loc_40936E

loc_409386:
cmp     ebx, ecx
jnz     short loc_4093E5
jmp     short loc_409398

loc_40938C:
cmp     dword ptr [ebx+8], 0
jnz     short loc_40939C
add     ebx, 14h
mov     [ebp+arg_0], ebx

loc_409398:
cmp     ebx, eax
jb      short loc_40938C

loc_40939C:
cmp     ebx, eax
jnz     short loc_4093D1
mov     ebx, lpMem
jmp     short loc_4093B1

loc_4093A8:
cmp     dword ptr [ebx+8], 0
jnz     short loc_4093B8
add     ebx, 14h

loc_4093B1:
mov     [ebp+arg_0], ebx
cmp     ebx, ecx
jb      short loc_4093A8

loc_4093B8:
cmp     ebx, ecx
jnz     short loc_4093D1
call    sub_408E61
mov     ebx, eax
mov     [ebp+arg_0], ebx
test    ebx, ebx
jnz     short loc_4093D1

loc_4093CA:
xor     eax, eax
jmp     loc_4095DA

loc_4093D1:
push    ebx
call    sub_408F11
pop     ecx
mov     ecx, [ebx+10h]
mov     [ecx], eax
mov     eax, [ebx+10h]
cmp     dword ptr [eax], 0FFFFFFFFh
jz      short loc_4093CA

loc_4093E5:
mov     dword_424DD4, ebx
mov     eax, [ebx+10h]
mov     edx, [eax]
mov     [ebp+var_4], edx
cmp     edx, 0FFFFFFFFh
jz      short loc_40940C
mov     ecx, [eax+edx*4+0C4h]
mov     edi, [eax+edx*4+44h]
and     ecx, [ebp+var_8]
and     edi, esi
or      ecx, edi
jnz     short loc_409435

loc_40940C:
and     [ebp+var_4], 0
mov     edx, [eax+0C4h]
lea     ecx, [eax+44h]

loc_409419:
mov     edi, [ecx]
and     edx, [ebp+var_8]
and     edi, esi
or      edx, edi
jnz     short loc_409432
inc     [ebp+var_4]
mov     edx, [ecx+84h]
add     ecx, 4
jmp     short loc_409419

loc_409432:
mov     edx, [ebp+var_4]

loc_409435:
mov     ecx, edx
imul    ecx, 204h
lea     ecx, [ecx+eax+144h]
mov     [ebp+var_C], ecx
mov     ecx, [eax+edx*4+44h]
xor     edi, edi
and     ecx, esi
jnz     short loc_409463
mov     ecx, [eax+edx*4+0C4h]
and     ecx, [ebp+var_8]
push    20h
pop     edi
jmp     short loc_409463

loc_409460:
add     ecx, ecx
inc     edi

loc_409463:
test    ecx, ecx
jge     short loc_409460
mov     ecx, [ebp+var_C]
mov     edx, [ecx+edi*8+4]
mov     ecx, [edx]
sub     ecx, [ebp+var_10]
mov     esi, ecx
sar     esi, 4
dec     esi
cmp     esi, 3Fh
mov     [ebp+var_8], ecx
jle     short loc_409484
push    3Fh
pop     esi

loc_409484:
cmp     esi, edi
jz      loc_40958D
mov     ecx, [edx+4]
cmp     ecx, [edx+8]
jnz     short loc_4094F0
cmp     edi, 20h
mov     ebx, 80000000h
jge     short loc_4094C4
mov     ecx, edi
shr     ebx, cl
mov     ecx, [ebp+var_4]
lea     edi, [eax+edi+4]
not     ebx
mov     [ebp+var_14], ebx
and     ebx, [eax+ecx*4+44h]
mov     [eax+ecx*4+44h], ebx
dec     byte ptr [edi]
jnz     short loc_4094ED
mov     ecx, [ebp+var_14]
mov     ebx, [ebp+arg_0]
and     [ebx], ecx
jmp     short loc_4094F0

loc_4094C4:
lea     ecx, [edi-20h]
shr     ebx, cl
mov     ecx, [ebp+var_4]
lea     ecx, [eax+ecx*4+0C4h]
lea     edi, [eax+edi+4]
not     ebx
and     [ecx], ebx
dec     byte ptr [edi]
mov     [ebp+var_14], ebx
jnz     short loc_4094ED
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_14]
and     [ebx+4], ecx
jmp     short loc_4094F0

loc_4094ED:
mov     ebx, [ebp+arg_0]

loc_4094F0:
cmp     [ebp+var_8], 0
mov     ecx, [edx+8]
mov     edi, [edx+4]
mov     [ecx+4], edi
mov     ecx, [edx+4]
mov     edi, [edx+8]
mov     [ecx+8], edi
jz      loc_409599
mov     ecx, [ebp+var_C]
lea     ecx, [ecx+esi*8]
mov     edi, [ecx+4]
mov     [edx+8], ecx
mov     [edx+4], edi
mov     [ecx+4], edx
mov     ecx, [edx+4]
mov     [ecx+8], edx
mov     ecx, [edx+4]
cmp     ecx, [edx+8]
jnz     short loc_40958A
mov     cl, [esi+eax+4]
mov     byte ptr [ebp+arg_0+3], cl
inc     cl
cmp     esi, 20h
mov     [esi+eax+4], cl
jge     short loc_409561
cmp     byte ptr [ebp+arg_0+3], 0
jnz     short loc_40954F
mov     edi, 80000000h
mov     ecx, esi
shr     edi, cl
or      [ebx], edi

loc_40954F:
mov     ecx, esi
mov     edi, 80000000h
shr     edi, cl
mov     ecx, [ebp+var_4]
or      [eax+ecx*4+44h], edi
jmp     short loc_40958A

loc_409561:
cmp     byte ptr [ebp+arg_0+3], 0
jnz     short loc_409574
lea     ecx, [esi-20h]
mov     edi, 80000000h
shr     edi, cl
or      [ebx+4], edi

loc_409574:
mov     ecx, [ebp+var_4]
lea     edi, [eax+ecx*4+0C4h]
lea     ecx, [esi-20h]
mov     esi, 80000000h
shr     esi, cl
or      [edi], esi

loc_40958A:
mov     ecx, [ebp+var_8]

loc_40958D:
test    ecx, ecx
jz      short loc_40959C
mov     [edx], ecx
mov     [ecx+edx-4], ecx
jmp     short loc_40959C

loc_409599:
mov     ecx, [ebp+var_8]

loc_40959C:
mov     esi, [ebp+var_10]
add     edx, ecx
lea     ecx, [esi+1]
mov     [edx], ecx
mov     [edx+esi-4], ecx
mov     esi, [ebp+var_C]
mov     ecx, [esi]
lea     edi, [ecx+1]
mov     [esi], edi
test    ecx, ecx
jnz     short loc_4095D2
cmp     ebx, dword_424CA0
jnz     short loc_4095D2
mov     ecx, [ebp+var_4]
cmp     ecx, dword_424DDC
jnz     short loc_4095D2
and     dword_424CA0, 0

loc_4095D2:
mov     ecx, [ebp+var_4]
mov     [eax], ecx
lea     eax, [edx+4]

loc_4095DA:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_4092FA endp



; Attributes: bp-based frame

sub_4095DF proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    10h
push    offset stru_40F840
call    __SEH_prolog4
mov     eax, [ebp+arg_0]
cmp     eax, 0FFFFFFFEh
jnz     short loc_409606
call    sub_404899
mov     dword ptr [eax], 9

loc_4095FE:
or      eax, 0FFFFFFFFh
jmp     loc_4096B0

loc_409606:
xor     ebx, ebx
cmp     eax, ebx
jl      short loc_409614
cmp     eax, uNumber
jb      short loc_40962E

loc_409614:
call    sub_404899
mov     dword ptr [eax], 9
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    sub_404831
add     esp, 14h
jmp     short loc_4095FE

loc_40962E:
mov     ecx, eax
sar     ecx, 5
lea     edi, ds:424E00h[ecx*4]
mov     esi, eax
and     esi, 1Fh
shl     esi, 6
mov     ecx, [edi]
movsx   ecx, byte ptr [esi+ecx+4]
and     ecx, 1
jz      short loc_409614
push    eax
call    sub_408A54
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], ebx
mov     eax, [edi]
test    byte ptr [esi+eax+4], 1
jz      short loc_409692
push    [ebp+arg_0]
call    sub_4089DD
pop     ecx
push    eax             ; hFile
call    ds:FlushFileBuffers
test    eax, eax
jnz     short loc_409680
call    ds:GetLastError
mov     [ebp+var_1C], eax
jmp     short loc_409683

loc_409680:
mov     [ebp+var_1C], ebx

loc_409683:
cmp     [ebp+var_1C], ebx
jz      short loc_4096A1
call    sub_4048AC
mov     ecx, [ebp+var_1C]
mov     [eax], ecx

loc_409692:
call    sub_404899
mov     dword ptr [eax], 9
or      [ebp+var_1C], 0FFFFFFFFh

loc_4096A1:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_4096B6

loc_4096AD:
mov     eax, [ebp+var_1C]

loc_4096B0:
call    __SEH_epilog4
retn

loc_4096B6:
push    [ebp+arg_0]
call    sub_408AF4
pop     ecx
retn
sub_4095DF endp



; Attributes: bp-based frame

; int __cdecl sub_4096C0(DWORD dwInfoType, LPCSTR lpMultiByteStr, int cbMultiByte, LPWORD lpCharType, UINT CodePage, LCID Locale, int)
sub_4096C0 proc near

CharType= word ptr -8
var_4= dword ptr -4
dwInfoType= dword ptr  8
lpMultiByteStr= dword ptr  0Ch
cbMultiByte= dword ptr  10h
lpCharType= dword ptr  14h
CodePage= dword ptr  18h
Locale= dword ptr  1Ch
arg_18= dword ptr  20h

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, dword_424CA4
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, ecx
cmp     eax, ebx
jnz     short loc_40971B
lea     eax, [ebp+CharType]
push    eax             ; lpCharType
xor     esi, esi
inc     esi
push    esi             ; cchSrc
push    offset SrcStr   ; lpSrcStr
push    esi             ; dwInfoType
call    ds:GetStringTypeW
test    eax, eax
jz      short loc_409701
mov     dword_424CA4, esi
jmp     short loc_409735

loc_409701:
call    ds:GetLastError
cmp     eax, 78h
jnz     short loc_409716
push    2
pop     eax
mov     dword_424CA4, eax
jmp     short loc_40971B

loc_409716:
mov     eax, dword_424CA4

loc_40971B:
cmp     eax, 2
jz      loc_4097F3
cmp     eax, ebx
jz      loc_4097F3
cmp     eax, 1
jnz     loc_40981D

loc_409735:
mov     dword ptr [ebp+CharType], ebx
cmp     [ebp+CodePage], ebx
jnz     short loc_409745
mov     eax, [edi]
mov     eax, [eax+4]
mov     [ebp+CodePage], eax

loc_409745:
mov     esi, ds:MultiByteToWideChar
xor     eax, eax
cmp     [ebp+arg_18], ebx
push    ebx             ; cchWideChar
push    ebx             ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
setnz   al
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
lea     eax, ds:1[eax*8]
push    eax             ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    esi ; MultiByteToWideChar
mov     edi, eax
cmp     edi, ebx
jz      loc_40981D
jle     short loc_4097B0
cmp     edi, 7FFFFFF0h
ja      short loc_4097B0
lea     eax, [edi+edi+8]
cmp     eax, 400h
ja      short loc_40979A
call    __alloca_probe_16
mov     eax, esp
cmp     eax, ebx
jz      short loc_4097AE
mov     dword ptr [eax], 0CCCCh
jmp     short loc_4097AB

loc_40979A:
push    eax
call    sub_409F9C
pop     ecx
cmp     eax, ebx
jz      short loc_4097AE
mov     dword ptr [eax], 0DDDDh

loc_4097AB:
add     eax, 8

loc_4097AE:
mov     ebx, eax

loc_4097B0:
test    ebx, ebx
jz      short loc_40981D
lea     eax, [edi+edi]
push    eax
push    0
push    ebx
call    sub_402FB0
add     esp, 0Ch
push    edi             ; cchWideChar
push    ebx             ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    1               ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    esi ; MultiByteToWideChar
test    eax, eax
jz      short loc_4097E7
push    [ebp+lpCharType] ; lpCharType
push    eax             ; cchSrc
push    ebx             ; lpSrcStr
push    [ebp+dwInfoType] ; dwInfoType
call    ds:GetStringTypeW
mov     dword ptr [ebp+CharType], eax

loc_4097E7:
push    ebx
call    sub_406257
mov     eax, dword ptr [ebp+CharType]
pop     ecx
jmp     short loc_409868

loc_4097F3:
xor     esi, esi
cmp     [ebp+Locale], ebx
jnz     short loc_409802
mov     eax, [edi]
mov     eax, [eax+14h]
mov     [ebp+Locale], eax

loc_409802:
cmp     [ebp+CodePage], ebx
jnz     short loc_40980F
mov     eax, [edi]
mov     eax, [eax+4]
mov     [ebp+CodePage], eax

loc_40980F:             ; Locale
push    [ebp+Locale]
call    sub_409D50
pop     ecx
cmp     eax, 0FFFFFFFFh
jnz     short loc_409821

loc_40981D:
xor     eax, eax
jmp     short loc_409868

loc_409821:
cmp     eax, [ebp+CodePage]
jz      short loc_409844
push    ebx             ; int
push    ebx             ; int
lea     ecx, [ebp+cbMultiByte]
push    ecx             ; int
push    [ebp+lpMultiByteStr] ; int
push    eax             ; UINT
push    [ebp+CodePage]  ; CodePage
call    sub_409D99
mov     esi, eax
add     esp, 18h
cmp     esi, ebx
jz      short loc_40981D
mov     [ebp+lpMultiByteStr], esi

loc_409844:             ; lpCharType
push    [ebp+lpCharType]
push    [ebp+cbMultiByte] ; cchSrc
push    [ebp+lpMultiByteStr] ; lpSrcStr
push    [ebp+dwInfoType] ; dwInfoType
push    [ebp+Locale]    ; Locale
call    ds:GetStringTypeA
mov     edi, eax
cmp     esi, ebx
jz      short loc_409866
push    esi             ; lpMem
call    sub_404EF7
pop     ecx

loc_409866:
mov     eax, edi

loc_409868:
lea     esp, [ebp-14h]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
leave
retn
sub_4096C0 endp



; Attributes: bp-based frame

; int __cdecl sub_40987A(int, DWORD dwInfoType, LPCSTR lpMultiByteStr, int cbMultiByte, LPWORD lpCharType, UINT CodePage, LCID Locale, int)
sub_40987A proc near

var_10= byte ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4
arg_0= dword ptr  8
dwInfoType= dword ptr  0Ch
lpMultiByteStr= dword ptr  10h
cbMultiByte= dword ptr  14h
lpCharType= dword ptr  18h
CodePage= dword ptr  1Ch
Locale= dword ptr  20h
arg_1C= dword ptr  24h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    [ebp+arg_0]
lea     ecx, [ebp+var_10]
call    sub_4031A8
push    [ebp+arg_1C]    ; int
lea     ecx, [ebp+var_10]
push    [ebp+Locale]    ; Locale
push    [ebp+CodePage]  ; CodePage
push    [ebp+lpCharType] ; lpCharType
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    [ebp+dwInfoType] ; dwInfoType
call    sub_4096C0
add     esp, 1Ch
cmp     [ebp+var_4], 0
jz      short locret_4098BA
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_4098BA:
leave
retn
sub_40987A endp



; Attributes: bp-based frame

sub_4098BC proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      loc_409A4E
push    dword ptr [esi+4] ; lpMem
call    sub_404EF7
push    dword ptr [esi+8] ; lpMem
call    sub_404EF7
push    dword ptr [esi+0Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+10h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+14h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+18h] ; lpMem
call    sub_404EF7
push    dword ptr [esi] ; lpMem
call    sub_404EF7
push    dword ptr [esi+20h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+24h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+28h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+2Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+30h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+34h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+1Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+38h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+3Ch] ; lpMem
call    sub_404EF7
add     esp, 40h
push    dword ptr [esi+40h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+44h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+48h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+4Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+50h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+54h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+58h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+5Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+60h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+64h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+68h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+6Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+70h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+74h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+78h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+7Ch] ; lpMem
call    sub_404EF7
add     esp, 40h
push    dword ptr [esi+80h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+84h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+88h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+8Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+90h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+94h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+98h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+9Ch] ; lpMem
call    sub_404EF7
push    dword ptr [esi+0A0h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+0A4h] ; lpMem
call    sub_404EF7
push    dword ptr [esi+0A8h] ; lpMem
call    sub_404EF7
add     esp, 2Ch

loc_409A4E:
pop     esi
pop     ebp
retn
sub_4098BC endp



; Attributes: bp-based frame

sub_409A51 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_409A93
mov     eax, [esi]
cmp     eax, off_411ED8
jz      short loc_409A6F
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409A6F:
mov     eax, [esi+4]
cmp     eax, off_411EDC
jz      short loc_409A81
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409A81:
mov     esi, [esi+8]
cmp     esi, off_411EE0
jz      short loc_409A93
push    esi             ; lpMem
call    sub_404EF7
pop     ecx

loc_409A93:
pop     esi
pop     ebp
retn
sub_409A51 endp



; Attributes: bp-based frame

sub_409A96 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_409B21
mov     eax, [esi+0Ch]
cmp     eax, off_411EE4
jz      short loc_409AB5
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409AB5:
mov     eax, [esi+10h]
cmp     eax, off_411EE8
jz      short loc_409AC7
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409AC7:
mov     eax, [esi+14h]
cmp     eax, off_411EEC
jz      short loc_409AD9
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409AD9:
mov     eax, [esi+18h]
cmp     eax, off_411EF0
jz      short loc_409AEB
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409AEB:
mov     eax, [esi+1Ch]
cmp     eax, off_411EF4
jz      short loc_409AFD
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409AFD:
mov     eax, [esi+20h]
cmp     eax, off_411EF8
jz      short loc_409B0F
push    eax             ; lpMem
call    sub_404EF7
pop     ecx

loc_409B0F:
mov     esi, [esi+24h]
cmp     esi, off_411EFC
jz      short loc_409B21
push    esi             ; lpMem
call    sub_404EF7
pop     ecx

loc_409B21:
pop     esi
pop     ebp
retn
sub_409A96 endp



; Attributes: bp-based frame

sub_409B24 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     eax, ebx
jz      short loc_409B3C
mov     edi, [ebp+arg_4]
cmp     edi, ebx
ja      short loc_409B57

loc_409B3C:
call    sub_404899
push    16h
pop     esi
mov     [eax], esi

loc_409B46:
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    sub_404831
add     esp, 14h
mov     eax, esi
jmp     short loc_409B93

loc_409B57:
mov     esi, [ebp+arg_8]
cmp     esi, ebx
jnz     short loc_409B62

loc_409B5E:
mov     [eax], bl
jmp     short loc_409B3C

loc_409B62:
mov     edx, eax

loc_409B64:
cmp     [edx], bl
jz      short loc_409B6C
inc     edx
dec     edi
jnz     short loc_409B64

loc_409B6C:
cmp     edi, ebx
jz      short loc_409B5E

loc_409B70:
mov     cl, [esi]
mov     [edx], cl
inc     edx
inc     esi
cmp     cl, bl
jz      short loc_409B7D
dec     edi
jnz     short loc_409B70

loc_409B7D:
cmp     edi, ebx
jnz     short loc_409B91
mov     [eax], bl
call    sub_404899
push    22h
pop     ecx
mov     [eax], ecx
mov     esi, ecx
jmp     short loc_409B46

loc_409B91:
xor     eax, eax

loc_409B93:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_409B24 endp

align 10h
push    ebp
mov     ebp, esp
push    esi
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
mov     edx, [ebp+0Ch]
lea     ecx, [ecx+0]

loc_409BB4:
mov     al, [edx]
or      al, al
jz      short loc_409BC3
add     edx, 1
bts     [esp], eax
jmp     short loc_409BB4

loc_409BC3:
mov     esi, [ebp+8]
or      ecx, 0FFFFFFFFh
lea     ecx, [ecx+0]

loc_409BCC:
add     ecx, 1
mov     al, [esi]
or      al, al
jz      short loc_409BDE
add     esi, 1
bt      [esp], eax
jnb     short loc_409BCC

loc_409BDE:
mov     eax, ecx
add     esp, 20h
pop     esi
leave
retn


; Attributes: bp-based frame

sub_409BE6 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
xor     ebx, ebx
push    edi
cmp     [ebp+arg_C], ebx
jnz     short loc_409C08
cmp     esi, ebx
jnz     short loc_409C0C
cmp     [ebp+arg_4], ebx
jnz     short loc_409C13

loc_409C01:
xor     eax, eax

loc_409C03:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn

loc_409C08:
cmp     esi, ebx
jz      short loc_409C13

loc_409C0C:
mov     edi, [ebp+arg_4]
cmp     edi, ebx
ja      short loc_409C2E

loc_409C13:
call    sub_404899
push    16h
pop     esi
mov     [eax], esi

loc_409C1D:
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    sub_404831
add     esp, 14h
mov     eax, esi
jmp     short loc_409C03

loc_409C2E:
cmp     [ebp+arg_C], ebx
jnz     short loc_409C37
mov     [esi], bl
jmp     short loc_409C01

loc_409C37:
mov     edx, [ebp+arg_8]
cmp     edx, ebx
jnz     short loc_409C42
mov     [esi], bl
jmp     short loc_409C13

loc_409C42:
cmp     [ebp+arg_C], 0FFFFFFFFh
mov     eax, esi
jnz     short loc_409C59

loc_409C4A:
mov     cl, [edx]
mov     [eax], cl
inc     eax
inc     edx
cmp     cl, bl
jz      short loc_409C72
dec     edi
jnz     short loc_409C4A
jmp     short loc_409C72

loc_409C59:
mov     cl, [edx]
mov     [eax], cl
inc     eax
inc     edx
cmp     cl, bl
jz      short loc_409C6B
dec     edi
jz      short loc_409C6B
dec     [ebp+arg_C]
jnz     short loc_409C59

loc_409C6B:
cmp     [ebp+arg_C], ebx
jnz     short loc_409C72
mov     [eax], bl

loc_409C72:
cmp     edi, ebx
jnz     short loc_409C01
cmp     [ebp+arg_C], 0FFFFFFFFh
jnz     short loc_409C8B
mov     eax, [ebp+arg_4]
push    50h
mov     [esi+eax-1], bl
pop     eax
jmp     loc_409C03

loc_409C8B:
mov     [esi], bl
call    sub_404899
push    22h
pop     ecx
mov     [eax], ecx
mov     esi, ecx
jmp     short loc_409C1D
sub_409BE6 endp



; Attributes: bp-based frame

sub_409C9B proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    ebx
xor     ebx, ebx
push    esi
push    edi
cmp     ecx, ebx
jz      short loc_409CB3
mov     edi, [ebp+arg_4]
cmp     edi, ebx
ja      short loc_409CCE

loc_409CB3:
call    sub_404899
push    16h
pop     esi
mov     [eax], esi

loc_409CBD:
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    sub_404831
add     esp, 14h
mov     eax, esi
jmp     short loc_409CFE

loc_409CCE:
mov     esi, [ebp+arg_8]
cmp     esi, ebx
jnz     short loc_409CD9
mov     [ecx], bl
jmp     short loc_409CB3

loc_409CD9:
mov     edx, ecx

loc_409CDB:
mov     al, [esi]
mov     [edx], al
inc     edx
inc     esi
cmp     al, bl
jz      short loc_409CE8
dec     edi
jnz     short loc_409CDB

loc_409CE8:
cmp     edi, ebx
jnz     short loc_409CFC
mov     [ecx], bl
call    sub_404899
push    22h
pop     ecx
mov     [eax], ecx
mov     esi, ecx
jmp     short loc_409CBD

loc_409CFC:
xor     eax, eax

loc_409CFE:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
sub_409C9B endp

align 10h
push    ebp
mov     ebp, esp
push    esi
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
mov     edx, [ebp+0Ch]
lea     ecx, [ecx+0]

loc_409D24:
mov     al, [edx]
or      al, al
jz      short loc_409D33
add     edx, 1
bts     [esp], eax
jmp     short loc_409D24

loc_409D33:
mov     esi, [ebp+8]
mov     edi, edi

loc_409D38:
mov     al, [esi]
or      al, al
jz      short loc_409D4A
add     esi, 1
bt      [esp], eax
jnb     short loc_409D38
lea     eax, [esi-1]

loc_409D4A:
add     esp, 20h
pop     esi
leave
retn


; Attributes: bp-based frame

; int __cdecl sub_409D50(LCID Locale)
sub_409D50 proc near

LCData= byte ptr -0Ch
var_6= byte ptr -6
var_4= dword ptr -4
Locale= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0Ch
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    6               ; cchData
lea     eax, [ebp+LCData]
push    eax             ; lpLCData
push    1004h           ; LCType
push    [ebp+Locale]    ; Locale
mov     [ebp+var_6], 0
call    ds:GetLocaleInfoA
test    eax, eax
jnz     short loc_409D83
or      eax, 0FFFFFFFFh
jmp     short loc_409D8D

loc_409D83:
lea     eax, [ebp+LCData]
push    eax
call    sub_40B1D5
pop     ecx

loc_409D8D:
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
leave
retn
sub_409D50 endp



; Attributes: bp-based frame

; int __cdecl sub_409D99(UINT CodePage, UINT, int, int, int, int)
sub_409D99 proc near

var_34= dword ptr -34h
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
lpMultiByteStr= dword ptr -28h
cbMultiByte= dword ptr -24h
lpMem= dword ptr -20h
lpWideCharStr= dword ptr -1Ch
CPInfo= _cpinfo ptr -18h
var_4= dword ptr -4
CodePage= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h
arg_10= dword ptr  18h
arg_14= dword ptr  1Ch

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 34h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_10]
mov     [ebp+lpMultiByteStr], eax
mov     eax, [ebp+arg_C]
push    ebx
mov     [ebp+var_30], eax
mov     eax, [eax]
push    esi
mov     [ebp+cbMultiByte], eax
mov     eax, [ebp+CodePage]
push    edi
xor     edi, edi
mov     [ebp+var_34], ecx
mov     [ebp+lpMem], edi
mov     [ebp+var_2C], edi
cmp     eax, [ebp+arg_4]
jz      loc_409F38
mov     esi, ds:GetCPInfo
lea     ecx, [ebp+CPInfo]
push    ecx             ; lpCPInfo
push    eax             ; CodePage
call    esi ; GetCPInfo
mov     ebx, ds:MultiByteToWideChar
test    eax, eax
jz      short loc_409E4E
cmp     [ebp+CPInfo.MaxCharSize], 1
jnz     short loc_409E4E
lea     eax, [ebp+CPInfo]
push    eax             ; lpCPInfo
push    [ebp+arg_4]     ; CodePage
call    esi ; GetCPInfo
test    eax, eax
jz      short loc_409E4E
cmp     [ebp+CPInfo.MaxCharSize], 1
jnz     short loc_409E4E
mov     esi, [ebp+cbMultiByte]
mov     [ebp+var_2C], 1
cmp     esi, 0FFFFFFFFh
jnz     short loc_409E24
push    [ebp+lpMultiByteStr]
call    strlen_to_eax   ; length -> eax
                        ;
mov     esi, eax
pop     ecx
inc     esi

loc_409E24:
cmp     esi, edi

loc_409E26:
jle     short loc_409E83
cmp     esi, 7FFFFFF0h
ja      short loc_409E83
lea     eax, [esi+esi+8]
cmp     eax, 400h
ja      short loc_409E6A
call    __alloca_probe_16
mov     eax, esp
cmp     eax, edi
jz      short loc_409E7E
mov     dword ptr [eax], 0CCCCh
jmp     short loc_409E7B

loc_409E4E:             ; cchWideChar
push    edi
push    edi             ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    1               ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    ebx ; MultiByteToWideChar
mov     esi, eax
cmp     esi, edi
jnz     short loc_409E26

loc_409E63:
xor     eax, eax
jmp     loc_409F3B

loc_409E6A:
push    eax
call    sub_409F9C
pop     ecx
cmp     eax, edi
jz      short loc_409E7E
mov     dword ptr [eax], 0DDDDh

loc_409E7B:
add     eax, 8

loc_409E7E:
mov     [ebp+lpWideCharStr], eax
jmp     short loc_409E86

loc_409E83:
mov     [ebp+lpWideCharStr], edi

loc_409E86:
cmp     [ebp+lpWideCharStr], edi
jz      short loc_409E63
lea     eax, [esi+esi]
push    eax
push    edi
push    [ebp+lpWideCharStr]
call    sub_402FB0
add     esp, 0Ch
push    esi             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    [ebp+cbMultiByte] ; cbMultiByte
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    1               ; dwFlags
push    [ebp+CodePage]  ; CodePage
call    ebx ; MultiByteToWideChar
test    eax, eax
jz      short loc_409F2F
mov     ebx, [ebp+var_34]
cmp     ebx, edi
jz      short loc_409ED4
push    edi             ; lpUsedDefaultChar
push    edi             ; lpDefaultChar
push    [ebp+arg_14]    ; cbMultiByte
push    ebx             ; lpMultiByteStr
push    esi             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    edi             ; dwFlags
push    [ebp+arg_4]     ; CodePage
call    ds:WideCharToMultiByte
test    eax, eax
jz      short loc_409F2F
mov     [ebp+lpMem], ebx
jmp     short loc_409F2F

loc_409ED4:
mov     ebx, ds:WideCharToMultiByte
cmp     [ebp+var_2C], edi
jnz     short loc_409EF3
push    edi             ; lpUsedDefaultChar
push    edi             ; lpDefaultChar
push    edi             ; cbMultiByte
push    edi             ; lpMultiByteStr
push    esi             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    edi             ; dwFlags
push    [ebp+arg_4]     ; CodePage
call    ebx ; WideCharToMultiByte
mov     esi, eax
cmp     esi, edi
jz      short loc_409F2F

loc_409EF3:
push    esi
push    1
call    sub_408128
pop     ecx
pop     ecx
mov     [ebp+lpMem], eax
cmp     eax, edi
jz      short loc_409F2F
push    edi             ; lpUsedDefaultChar
push    edi             ; lpDefaultChar
push    esi             ; cbMultiByte
push    eax             ; lpMultiByteStr
push    esi             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    edi             ; dwFlags
push    [ebp+arg_4]     ; CodePage
call    ebx ; WideCharToMultiByte
cmp     eax, edi
jnz     short loc_409F24
push    [ebp+lpMem]     ; lpMem
call    sub_404EF7
pop     ecx
mov     [ebp+lpMem], edi
jmp     short loc_409F2F

loc_409F24:
cmp     [ebp+cbMultiByte], 0FFFFFFFFh
jz      short loc_409F2F
mov     ecx, [ebp+var_30]
mov     [ecx], eax

loc_409F2F:
push    [ebp+lpWideCharStr]
call    sub_406257
pop     ecx

loc_409F38:
mov     eax, [ebp+lpMem]

loc_409F3B:
lea     esp, [ebp-40h]
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
leave
retn
sub_409D99 endp



; Attributes: bp-based frame

sub_409F4D proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    0Ch
push    offset stru_40F860
call    __SEH_prolog4
and     [ebp+var_1C], 0
mov     esi, [ebp+arg_0]
cmp     esi, dword_424DD0
ja      short loc_409F8A
push    4
call    sub_408620
pop     ecx
and     [ebp+ms_exc.registration.TryLevel], 0
push    esi
call    sub_4092FA
pop     ecx
mov     [ebp+var_1C], eax
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_409F93

loc_409F8A:
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn

loc_409F93:
push    4
call    sub_408546
pop     ecx
retn
sub_409F4D endp



; Attributes: bp-based frame

sub_409F9C proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     esi, 0FFFFFFE0h
ja      loc_40A04F
push    ebx
push    edi
mov     edi, ds:HeapAlloc

loc_409FB6:
cmp     hHeap, 0
jnz     short loc_409FD7
call    sub_406C97
push    1Eh
call    sub_406AEC
push    0FFh            ; uExitCode
call    sub_406838
db  59h ; Y
db  59h ; Y

loc_409FD7:
mov     eax, dword_424DE4
cmp     eax, 1
jnz     short loc_409FEF
test    esi, esi
jz      short loc_409FE9
mov     eax, esi
jmp     short loc_409FEC

loc_409FE9:
xor     eax, eax
inc     eax

loc_409FEC:
push    eax
jmp     short loc_40A00B

loc_409FEF:
cmp     eax, 3
jnz     short loc_409FFF
push    esi
call    sub_409F4D
pop     ecx
test    eax, eax
jnz     short loc_40A015

loc_409FFF:
test    esi, esi
jnz     short loc_40A004
inc     esi

loc_40A004:
add     esi, 0Fh
and     esi, 0FFFFFFF0h
push    esi             ; dwBytes

loc_40A00B:             ; dwFlags
push    0
push    hHeap           ; hHeap
call    edi ; HeapAlloc

loc_40A015:
mov     ebx, eax
test    ebx, ebx
jnz     short loc_40A049
push    0Ch
pop     esi
cmp     dword_424DB0, eax
jz      short loc_40A03B
push    [ebp+arg_0]
call    sub_40A463
pop     ecx
test    eax, eax
jz      short loc_40A042
mov     esi, [ebp+arg_0]
jmp     loc_409FB6

loc_40A03B:
call    sub_404899
mov     [eax], esi

loc_40A042:
call    sub_404899
mov     [eax], esi

loc_40A049:
pop     edi
mov     eax, ebx
pop     ebx
jmp     short loc_40A063

loc_40A04F:
push    esi
call    sub_40A463
pop     ecx
call    sub_404899
mov     dword ptr [eax], 0Ch
xor     eax, eax

loc_40A063:
pop     esi
pop     ebp
retn
sub_409F9C endp

align 10h
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_16. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_8. PRESS CTRL-NUMPAD+ TO EXPAND]


; Attributes: noreturn bp-based frame

sub_40A09C proc near

ms_exc= CPPEH_RECORD ptr -18h

push    8
push    offset stru_40F880
call    __SEH_prolog4
call    sub_405F81
mov     eax, [eax+78h]
test    eax, eax
jz      short loc_40A0CA
and     [ebp+ms_exc.registration.TryLevel], 0
call    eax
jmp     short loc_40A0C3

loc_40A0BC:
xor     eax, eax
inc     eax
retn

loc_40A0C0:
mov     esp, [ebp+ms_exc.old_esp]

loc_40A0C3:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_40A0CA:
call    sub_40B1EB
sub_40A09C endp

call    __SEH_epilog4
retn



sub_40A0D5 proc near
push    offset sub_40A09C
call    sub_405CBA
pop     ecx
mov     dword_424CAC, eax
retn
sub_40A0D5 endp



; Attributes: bp-based frame

sub_40A0E6 proc near

var_4= dword ptr -4
arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
push    dword_424F08
call    sub_405D35
push    dword_424F04
mov     edi, eax
mov     [ebp+var_4], edi
call    sub_405D35
mov     esi, eax
pop     ecx
pop     ecx
cmp     esi, edi
jb      loc_40A199
mov     ebx, esi
sub     ebx, edi
lea     eax, [ebx+4]
cmp     eax, 4
jb      short loc_40A199
push    edi             ; lpMem
call    sub_40B302
mov     edi, eax
lea     eax, [ebx+4]
pop     ecx
cmp     edi, eax
jnb     short loc_40A17A
mov     eax, 800h
cmp     edi, eax
jnb     short loc_40A13D
mov     eax, edi

loc_40A13D:
add     eax, edi
cmp     eax, edi
jb      short loc_40A152
push    eax
push    [ebp+var_4]
call    sub_408174
pop     ecx
pop     ecx
test    eax, eax
jnz     short loc_40A168

loc_40A152:
lea     eax, [edi+10h]
cmp     eax, edi
jb      short loc_40A199
push    eax
push    [ebp+var_4]
call    sub_408174
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_40A199

loc_40A168:
sar     ebx, 2
push    eax
lea     esi, [eax+ebx*4]
call    sub_405CBA
pop     ecx
mov     dword_424F08, eax

loc_40A17A:
push    [ebp+arg_0]
call    sub_405CBA
mov     [esi], eax
add     esi, 4
push    esi
call    sub_405CBA
pop     ecx
mov     dword_424F04, eax
mov     eax, [ebp+arg_0]
pop     ecx
jmp     short loc_40A19B

loc_40A199:
xor     eax, eax

loc_40A19B:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_40A0E6 endp

db 8Bh, 0FFh
push    esi
push    4
push    20h
call    sub_408128
mov     esi, eax
push    esi
call    sub_405CBA
add     esp, 0Ch
mov     dword_424F08, eax
mov     dword_424F04, eax
test    esi, esi
jnz     short loc_40A1CA
push    18h
pop     eax
pop     esi
retn

loc_40A1CA:
and     dword ptr [esi], 0
xor     eax, eax
pop     esi
retn


; Attributes: bp-based frame

sub_40A1D1 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    0Ch
push    offset stru_40F8A0
call    __SEH_prolog4
call    sub_406850
and     [ebp+ms_exc.registration.TryLevel], 0
push    [ebp+arg_0]
call    sub_40A0E6
pop     ecx
mov     [ebp+var_1C], eax
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40A207

loc_40A1FE:
mov     eax, [ebp+var_1C]
call    __SEH_epilog4
retn

loc_40A207:
call    sub_406859
retn
sub_40A1D1 endp



; Attributes: bp-based frame

sub_40A20D proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_0]
call    sub_40A1D1
neg     eax
sbb     eax, eax
neg     eax
pop     ecx
dec     eax
pop     ebp
retn
sub_40A20D endp



; Attributes: bp-based frame

sub_40A224 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424CB0, eax
mov     dword_424CB4, eax
mov     dword_424CB8, eax
mov     dword_424CBC, eax
pop     ebp
retn
sub_40A224 endp



; Attributes: bp-based frame

sub_40A242 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, dword_411C6C
push    esi

loc_40A251:
cmp     [eax+4], edx
jz      short loc_40A265
mov     esi, ecx
imul    esi, 0Ch
add     esi, [ebp+arg_0]
add     eax, 0Ch
cmp     eax, esi
jb      short loc_40A251

loc_40A265:
imul    ecx, 0Ch
add     ecx, [ebp+arg_0]
pop     esi
cmp     eax, ecx
jnb     short loc_40A275
cmp     [eax+4], edx
jz      short loc_40A277

loc_40A275:
xor     eax, eax

loc_40A277:
pop     ebp
retn
sub_40A242 endp




sub_40A279 proc near
push    dword_424CB8
call    sub_405D35
pop     ecx
retn
sub_40A279 endp



; Attributes: bp-based frame

sub_40A286 proc near

var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8

push    20h
push    offset stru_40F8C0
call    __SEH_prolog4
xor     edi, edi
mov     [ebp+var_1C], edi
mov     [ebp+var_28], edi
mov     ebx, [ebp+arg_0]
cmp     ebx, 0Bh
jg      short loc_40A2EE
jz      short loc_40A2B9
mov     eax, ebx
push    2
pop     ecx
sub     eax, ecx
jz      short loc_40A2CF
sub     eax, ecx
jz      short loc_40A2B9
sub     eax, ecx
jz      short loc_40A319
sub     eax, ecx
jnz     short loc_40A2FD

loc_40A2B9:
call    sub_405F08
mov     edi, eax
mov     [ebp+var_28], edi
test    edi, edi
jnz     short loc_40A2DB

loc_40A2C7:
or      eax, 0FFFFFFFFh
jmp     loc_40A430

loc_40A2CF:
mov     esi, offset dword_424CB0
mov     eax, dword_424CB0
jmp     short loc_40A33B

loc_40A2DB:
push    dword ptr [edi+5Ch]
mov     edx, ebx
call    sub_40A242
mov     esi, eax
add     esi, 8
mov     eax, [esi]
jmp     short loc_40A348

loc_40A2EE:
mov     eax, ebx
sub     eax, 0Fh
jz      short loc_40A331
sub     eax, 6
jz      short loc_40A325
dec     eax
jz      short loc_40A319

loc_40A2FD:
call    sub_404899
mov     dword ptr [eax], 16h
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    eax
call    sub_404831
add     esp, 14h
jmp     short loc_40A2C7

loc_40A319:
mov     esi, offset dword_424CB8
mov     eax, dword_424CB8
jmp     short loc_40A33B

loc_40A325:
mov     esi, offset dword_424CB4
mov     eax, dword_424CB4
jmp     short loc_40A33B

loc_40A331:
mov     esi, offset dword_424CBC
mov     eax, dword_424CBC

loc_40A33B:
mov     [ebp+var_1C], 1
push    eax
call    sub_405D35

loc_40A348:
mov     [ebp+var_20], eax
pop     ecx
xor     eax, eax
cmp     [ebp+var_20], 1
jz      loc_40A430
cmp     [ebp+var_20], eax
jnz     short loc_40A364
push    3               ; uExitCode
call    sub_406A6A

loc_40A364:
cmp     [ebp+var_1C], eax
jz      short loc_40A370
push    eax
call    sub_408620
pop     ecx

loc_40A370:
xor     eax, eax
mov     [ebp+ms_exc.registration.TryLevel], eax
cmp     ebx, 8
jz      short loc_40A384
cmp     ebx, 0Bh
jz      short loc_40A384
cmp     ebx, 4
jnz     short loc_40A39F

loc_40A384:
mov     ecx, [edi+60h]
mov     [ebp+var_2C], ecx
mov     [edi+60h], eax
cmp     ebx, 8
jnz     short loc_40A3D2
mov     ecx, [edi+64h]
mov     [ebp+var_30], ecx
mov     dword ptr [edi+64h], 8Ch

loc_40A39F:
cmp     ebx, 8
jnz     short loc_40A3D2
mov     ecx, dword_411C60
mov     [ebp+var_24], ecx

loc_40A3AD:
mov     ecx, dword_411C64
mov     edx, dword_411C60
add     ecx, edx
cmp     [ebp+var_24], ecx
jge     short loc_40A3D9
mov     ecx, [ebp+var_24]
imul    ecx, 0Ch
mov     edx, [edi+5Ch]
mov     [ecx+edx+8], eax
inc     [ebp+var_24]
jmp     short loc_40A3AD

loc_40A3D2:
call    sub_405D2C
mov     [esi], eax

loc_40A3D9:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40A3FA

loc_40A3E5:
cmp     ebx, 8
jnz     short loc_40A409
push    dword ptr [edi+64h]
push    ebx
call    [ebp+var_20]
pop     ecx
jmp     short loc_40A40D

loc_40A3F4:
mov     ebx, [ebp+8]
mov     edi, [ebp+var_28]

loc_40A3FA:
cmp     [ebp+var_1C], 0
jz      short loc_40A408
push    0
call    sub_408546
pop     ecx

loc_40A408:
retn

loc_40A409:
push    ebx
call    [ebp+var_20]

loc_40A40D:
pop     ecx
cmp     ebx, 8
jz      short loc_40A41D
cmp     ebx, 0Bh
jz      short loc_40A41D
cmp     ebx, 4
jnz     short loc_40A42E

loc_40A41D:
mov     eax, [ebp+var_2C]
mov     [edi+60h], eax
cmp     ebx, 8
jnz     short loc_40A42E
mov     eax, [ebp+var_30]
mov     [edi+64h], eax

loc_40A42E:
xor     eax, eax

loc_40A430:
call    __SEH_epilog4
retn
sub_40A286 endp ; sp-analysis failed



; Attributes: bp-based frame

sub_40A436 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424CC4, eax
pop     ebp
retn
sub_40A436 endp



; Attributes: bp-based frame

sub_40A445 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424CD0, eax
pop     ebp
retn
sub_40A445 endp



; Attributes: bp-based frame

sub_40A454 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_424CD4, eax
pop     ebp
retn
sub_40A454 endp



; Attributes: bp-based frame

sub_40A463 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    dword_424CD4
call    sub_405D35
pop     ecx
test    eax, eax
jz      short loc_40A487
push    [ebp+arg_0]
call    eax
pop     ecx
test    eax, eax
jz      short loc_40A487
xor     eax, eax
inc     eax
pop     ebp
retn

loc_40A487:
xor     eax, eax
pop     ebp
retn
sub_40A463 endp



; Attributes: bp-based frame

sub_40A48B proc near

lpProcName= dword ptr -24h
var_14= byte ptr -14h
var_C= byte ptr -0Ch
var_8= byte ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
call    sub_405D2C
and     [ebp+var_4], 0
cmp     dword_424CD8, 0
mov     ebx, eax
jnz     loc_40A53C
push    offset LibFileName ; "USER32.DLL"
call    ds:LoadLibraryA
mov     edi, eax
test    edi, edi
jz      loc_40A5ED
mov     esi, ds:GetProcAddress
push    offset aMessageboxa ; "MessageBoxA"
push    edi             ; hModule
call    esi ; GetProcAddress
test    eax, eax
jz      loc_40A5ED
push    eax
call    sub_405CBA
mov     [esp+24h+lpProcName], offset aGetactivewindo ; "GetActiveWindow"
push    edi             ; hModule
mov     dword_424CD8, eax
call    esi ; GetProcAddress
push    eax
call    sub_405CBA
mov     [esp+24h+lpProcName], offset aGetlastactivep ; "GetLastActivePopup"
push    edi             ; hModule
mov     dword_424CDC, eax
call    esi ; GetProcAddress
push    eax
call    sub_405CBA
mov     [esp+24h+lpProcName], offset aGetuserobjecti ; "GetUserObjectInformationA"
push    edi             ; hModule
mov     dword_424CE0, eax
call    esi ; GetProcAddress
push    eax
call    sub_405CBA
pop     ecx
mov     dword_424CE8, eax
test    eax, eax
jz      short loc_40A53C
push    offset aGetprocesswind ; "GetProcessWindowStation"
push    edi             ; hModule
call    esi ; GetProcAddress
push    eax
call    sub_405CBA
pop     ecx
mov     dword_424CE4, eax

loc_40A53C:
mov     eax, dword_424CE4
cmp     eax, ebx
jz      short loc_40A594
cmp     dword_424CE8, ebx
jz      short loc_40A594
push    eax
call    sub_405D35
push    dword_424CE8
mov     esi, eax
call    sub_405D35
pop     ecx
pop     ecx
mov     edi, eax
test    esi, esi
jz      short loc_40A594
test    edi, edi
jz      short loc_40A594
call    esi
test    eax, eax
jz      short loc_40A58B
lea     ecx, [ebp+var_8]
push    ecx
push    0Ch
lea     ecx, [ebp+var_14]
push    ecx
push    1
push    eax
call    edi
test    eax, eax
jz      short loc_40A58B
test    [ebp+var_C], 1
jnz     short loc_40A594

loc_40A58B:
or      [ebp+arg_8], 200000h
jmp     short loc_40A5CD

loc_40A594:
mov     eax, dword_424CDC
cmp     eax, ebx
jz      short loc_40A5CD
push    eax
call    sub_405D35
pop     ecx
test    eax, eax
jz      short loc_40A5CD
call    eax
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_40A5CD
mov     eax, dword_424CE0
cmp     eax, ebx
jz      short loc_40A5CD
push    eax
call    sub_405D35
pop     ecx
test    eax, eax
jz      short loc_40A5CD
push    [ebp+var_4]
call    eax
mov     [ebp+var_4], eax

loc_40A5CD:
push    dword_424CD8
call    sub_405D35
pop     ecx
test    eax, eax
jz      short loc_40A5ED
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    [ebp+var_4]
call    eax
jmp     short loc_40A5EF

loc_40A5ED:
xor     eax, eax

loc_40A5EF:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_40A48B endp



; Attributes: bp-based frame

sub_40A5F4 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    esi
xor     esi, esi
cmp     ecx, esi
jl      short loc_40A621
cmp     ecx, 2
jle     short loc_40A614
cmp     ecx, 3
jnz     short loc_40A621
mov     eax, dword_424358
jmp     short loc_40A63C

loc_40A614:
mov     eax, dword_424358
mov     dword_424358, ecx
jmp     short loc_40A63C

loc_40A621:
call    sub_404899
push    esi
push    esi
push    esi
push    esi
push    esi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh

loc_40A63C:
pop     esi
pop     ebp
retn
sub_40A5F4 endp



; Attributes: bp-based frame

sub_40A63F proc near

var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= byte ptr -4
arg_0= dword ptr  8
arg_4= byte ptr  0Ch
arg_8= dword ptr  10h
arg_C= byte ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    [ebp+arg_0]
lea     ecx, [ebp+var_10]
call    sub_4031A8
movzx   eax, [ebp+arg_4]
mov     ecx, [ebp+var_C]
mov     dl, [ebp+arg_C]
test    [ecx+eax+1Dh], dl
jnz     short loc_40A680
cmp     [ebp+arg_8], 0
jz      short loc_40A67A
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+0C8h]
movzx   eax, word ptr [ecx+eax*2]
and     eax, [ebp+arg_8]
jmp     short loc_40A67C

loc_40A67A:
xor     eax, eax

loc_40A67C:
test    eax, eax
jz      short loc_40A683

loc_40A680:
xor     eax, eax
inc     eax

loc_40A683:
cmp     [ebp+var_4], 0
jz      short locret_40A690
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_40A690:
leave
retn
sub_40A63F endp



; Attributes: bp-based frame

sub_40A692 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    4
push    0
push    [ebp+arg_0]
push    0
call    sub_40A63F
add     esp, 10h
pop     ebp
retn
sub_40A692 endp



; Attributes: bp-based frame

; int __cdecl sub_40A6AA(__int16 Buffer)
sub_40A6AA proc near

NumberOfCharsWritten= dword ptr -10h
MultiByteStr= byte ptr -0Ch
var_4= dword ptr -4
Buffer= word ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
xor     esi, esi
cmp     dword_411F20, esi
jz      short loc_40A716
cmp     hConsoleOutput, 0FFFFFFFEh
jnz     short loc_40A6D5
call    sub_40B3A5

loc_40A6D5:
mov     eax, hConsoleOutput
cmp     eax, 0FFFFFFFFh
jnz     short loc_40A6E6

loc_40A6DF:
mov     eax, 0FFFFh
jmp     short loc_40A756

loc_40A6E6:             ; lpReserved
push    esi
lea     ecx, [ebp+NumberOfCharsWritten]
push    ecx             ; lpNumberOfCharsWritten
push    1               ; nNumberOfCharsToWrite
lea     ecx, [ebp+Buffer]
push    ecx             ; lpBuffer
push    eax             ; hConsoleOutput
call    ds:WriteConsoleW
test    eax, eax
jnz     short loc_40A763
cmp     dword_411F20, 2
jnz     short loc_40A6DF
call    ds:GetLastError
cmp     eax, 78h
jnz     short loc_40A6DF
mov     dword_411F20, esi

loc_40A716:             ; lpUsedDefaultChar
push    esi
push    esi             ; lpDefaultChar
push    5               ; cbMultiByte
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpMultiByteStr
push    1               ; cchWideChar
lea     eax, [ebp+Buffer]
push    eax             ; lpWideCharStr
push    esi             ; dwFlags
call    ds:GetConsoleOutputCP
push    eax             ; CodePage
call    ds:WideCharToMultiByte
mov     ecx, hConsoleOutput
cmp     ecx, 0FFFFFFFFh
jz      short loc_40A6DF
push    esi             ; lpReserved
lea     edx, [ebp+NumberOfCharsWritten]
push    edx             ; lpNumberOfCharsWritten
push    eax             ; nNumberOfCharsToWrite
lea     eax, [ebp+MultiByteStr]
push    eax             ; lpBuffer
push    ecx             ; hConsoleOutput
call    ds:WriteConsoleA
test    eax, eax
jz      short loc_40A6DF

loc_40A752:
mov     ax, [ebp+Buffer]

loc_40A756:
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     esi
call    anti_debug
leave
retn

loc_40A763:
mov     dword_411F20, 1
jmp     short loc_40A752
sub_40A6AA endp



; Attributes: bp-based frame

; int __cdecl sub_40A76F(LPWSTR lpWideCharStr, LPCSTR lpMultiByteStr, int, int)
sub_40A76F proc near

var_10= dword ptr -10h
var_8= dword ptr -8
var_4= byte ptr -4
lpWideCharStr= dword ptr  8
lpMultiByteStr= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+lpMultiByteStr]
xor     ebx, ebx
cmp     esi, ebx
jz      short loc_40A797
cmp     [ebp+arg_8], ebx
jz      short loc_40A797
cmp     [esi], bl
jnz     short loc_40A79D
mov     eax, [ebp+lpWideCharStr]
cmp     eax, ebx
jz      short loc_40A797
xor     ecx, ecx
mov     [eax], cx

loc_40A797:
xor     eax, eax

loc_40A799:
pop     esi
pop     ebx
leave
retn

loc_40A79D:
push    [ebp+arg_C]
lea     ecx, [ebp+var_10]
call    sub_4031A8
mov     eax, [ebp+var_10]
cmp     [eax+14h], ebx
jnz     short loc_40A7CF
mov     eax, [ebp+lpWideCharStr]
cmp     eax, ebx
jz      short loc_40A7BE
movzx   cx, byte ptr [esi]
mov     [eax], cx

loc_40A7BE:
cmp     [ebp+var_4], bl
jz      short loc_40A7CA
mov     eax, [ebp+var_8]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40A7CA:
xor     eax, eax
inc     eax
jmp     short loc_40A799

loc_40A7CF:
lea     eax, [ebp+var_10]
push    eax
movzx   eax, byte ptr [esi]
push    eax
call    sub_406661
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_40A85F
mov     eax, [ebp+var_10]
mov     ecx, [eax+0ACh]
cmp     ecx, 1
jle     short loc_40A815
cmp     [ebp+arg_8], ecx
jl      short loc_40A815
xor     edx, edx
cmp     [ebp+lpWideCharStr], ebx
setnz   dl
push    edx             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    ecx             ; cbMultiByte
push    esi             ; lpMultiByteStr
push    9               ; dwFlags
push    dword ptr [eax+4] ; CodePage
call    ds:MultiByteToWideChar
test    eax, eax
mov     eax, [ebp+var_10]
jnz     short loc_40A825

loc_40A815:
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax+0ACh]
jb      short loc_40A840
cmp     [esi+1], bl
jz      short loc_40A840

loc_40A825:
mov     eax, [eax+0ACh]
cmp     [ebp+var_4], bl
jz      loc_40A799
mov     ecx, [ebp+var_8]
and     dword ptr [ecx+70h], 0FFFFFFFDh
jmp     loc_40A799

loc_40A840:
call    sub_404899
mov     dword ptr [eax], 2Ah
cmp     [ebp+var_4], bl
jz      short loc_40A857
mov     eax, [ebp+var_8]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40A857:
or      eax, 0FFFFFFFFh
jmp     loc_40A799

loc_40A85F:
xor     eax, eax
cmp     [ebp+lpWideCharStr], ebx
setnz   al
push    eax             ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
mov     eax, [ebp+var_10]
push    1               ; cbMultiByte
push    esi             ; lpMultiByteStr
push    9               ; dwFlags
push    dword ptr [eax+4] ; CodePage
call    ds:MultiByteToWideChar
test    eax, eax
jnz     loc_40A7BE
jmp     short loc_40A840
sub_40A76F endp



; Attributes: bp-based frame

; int __cdecl sub_40A886(LPWSTR lpWideCharStr, LPCSTR lpMultiByteStr, int)
sub_40A886 proc near

lpWideCharStr= dword ptr  8
lpMultiByteStr= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
push    0               ; int
push    [ebp+arg_8]     ; int
push    [ebp+lpMultiByteStr] ; lpMultiByteStr
push    [ebp+lpWideCharStr] ; lpWideCharStr
call    sub_40A76F
add     esp, 10h
pop     ebp
retn
sub_40A886 endp

; [0000002B BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS CTRL-NUMPAD+ TO EXPAND]



sub_40A8CB proc near
push    2
call    sub_4067E4
pop     ecx
retn
sub_40A8CB endp



; Attributes: bp-based frame

sub_40A8D4 proc near

var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    0Ch
push    offset stru_40F8E0
call    __SEH_prolog4
mov     ecx, [ebp+arg_0]
xor     edi, edi
cmp     ecx, edi
jbe     short loc_40A917
push    0FFFFFFE0h
pop     eax
xor     edx, edx
div     ecx
cmp     eax, [ebp+arg_4]
sbb     eax, eax
inc     eax
jnz     short loc_40A917
call    sub_404899
mov     dword ptr [eax], 0Ch
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h

loc_40A910:
xor     eax, eax
jmp     loc_40A9EC

loc_40A917:
imul    ecx, [ebp+arg_4]
mov     esi, ecx
mov     [ebp+arg_0], esi
cmp     esi, edi
jnz     short loc_40A927
xor     esi, esi
inc     esi

loc_40A927:
xor     ebx, ebx
mov     [ebp+var_1C], ebx
cmp     esi, 0FFFFFFE0h
ja      short loc_40A99A
cmp     dword_424DE4, 3
jnz     short loc_40A985
add     esi, 0Fh
and     esi, 0FFFFFFF0h
mov     [ebp+arg_4], esi
mov     eax, [ebp+arg_0]
cmp     eax, dword_424DD0
ja      short loc_40A985
push    4
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
push    [ebp+arg_0]
call    sub_4092FA
pop     ecx
mov     [ebp+var_1C], eax
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40A9D0

loc_40A971:
mov     ebx, [ebp+var_1C]
cmp     ebx, edi
jz      short loc_40A989
push    [ebp+arg_0]
push    edi
push    ebx
call    sub_402FB0
add     esp, 0Ch

loc_40A985:
cmp     ebx, edi
jnz     short loc_40A9EA

loc_40A989:             ; dwBytes
push    esi
push    8               ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapAlloc
mov     ebx, eax

loc_40A99A:
cmp     ebx, edi
jnz     short loc_40A9EA
cmp     dword_424DB0, edi
jz      short loc_40A9D9
push    esi
call    sub_40A463
pop     ecx
test    eax, eax
jnz     loc_40A927
mov     eax, [ebp+arg_8]
cmp     eax, edi
jz      loc_40A910
mov     dword ptr [eax], 0Ch
jmp     loc_40A910

loc_40A9CB:
xor     edi, edi
mov     esi, [ebp+arg_4]

loc_40A9D0:
push    4
call    sub_408546
pop     ecx
retn

loc_40A9D9:
cmp     ebx, edi
jnz     short loc_40A9EA
mov     eax, [ebp+arg_8]
cmp     eax, edi
jz      short loc_40A9EA
mov     dword ptr [eax], 0Ch

loc_40A9EA:
mov     eax, ebx

loc_40A9EC:
call    __SEH_epilog4
retn
sub_40A8D4 endp



; Attributes: bp-based frame

; int __cdecl sub_40A9F2(LPVOID lpMem, SIZE_T dwBytes)
sub_40A9F2 proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
lpMem= dword ptr  8
dwBytes= dword ptr  0Ch

push    10h
push    offset stru_40F900
call    __SEH_prolog4
mov     ebx, [ebp+lpMem]
test    ebx, ebx
jnz     short loc_40AA13
push    [ebp+dwBytes]
call    sub_409F9C
pop     ecx
jmp     loc_40ABDF

loc_40AA13:
mov     esi, [ebp+dwBytes]
test    esi, esi
jnz     short loc_40AA26
push    ebx             ; lpMem
call    sub_404EF7
pop     ecx
jmp     loc_40ABDD

loc_40AA26:
cmp     dword_424DE4, 3
jnz     loc_40ABC6

loc_40AA33:
xor     edi, edi
mov     [ebp+var_1C], edi
cmp     esi, 0FFFFFFE0h
ja      loc_40ABCB
push    4
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
push    ebx
call    sub_408B1B
pop     ecx
mov     [ebp+var_20], eax
cmp     eax, edi
jz      loc_40AAFC
cmp     esi, dword_424DD0
ja      short loc_40AAAF
push    esi
push    ebx
push    eax
call    sub_409019
add     esp, 0Ch
test    eax, eax
jz      short loc_40AA7A
mov     [ebp+var_1C], ebx
jmp     short loc_40AAAF

loc_40AA7A:
push    esi
call    sub_4092FA
pop     ecx
mov     [ebp+var_1C], eax
cmp     eax, edi
jz      short loc_40AAAF
mov     eax, [ebx-4]
dec     eax
cmp     eax, esi
jb      short loc_40AA92
mov     eax, esi

loc_40AA92:
push    eax
push    ebx
push    [ebp+var_1C]
call    sub_4029F0
push    ebx
call    sub_408B1B
mov     [ebp+var_20], eax
push    ebx
push    eax
call    sub_408B4B
add     esp, 18h

loc_40AAAF:
cmp     [ebp+var_1C], edi
jnz     short loc_40AAFC
cmp     esi, edi
jnz     short loc_40AABE
xor     esi, esi
inc     esi
mov     [ebp+dwBytes], esi

loc_40AABE:
add     esi, 0Fh
and     esi, 0FFFFFFF0h
mov     [ebp+dwBytes], esi
push    esi             ; dwBytes
push    edi             ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapAlloc
mov     [ebp+var_1C], eax
cmp     eax, edi
jz      short loc_40AAFC
mov     eax, [ebx-4]
dec     eax
cmp     eax, esi
jb      short loc_40AAE6
mov     eax, esi

loc_40AAE6:
push    eax
push    ebx
push    [ebp+var_1C]
call    sub_4029F0
push    ebx
push    [ebp+var_20]
call    sub_408B4B
add     esp, 14h

loc_40AAFC:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40AB36

loc_40AB08:
cmp     [ebp+var_20], 0
jnz     short loc_40AB3F
test    esi, esi
jnz     short loc_40AB13
inc     esi

loc_40AB13:
add     esi, 0Fh
and     esi, 0FFFFFFF0h
mov     [ebp+dwBytes], esi
push    esi             ; dwBytes
push    ebx             ; lpMem
push    0               ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapReAlloc
mov     edi, eax
jmp     short loc_40AB42

loc_40AB30:
mov     esi, [ebp+dwBytes]
mov     ebx, [ebp+lpMem]

loc_40AB36:
push    4
call    sub_408546
pop     ecx
retn

loc_40AB3F:
mov     edi, [ebp+var_1C]

loc_40AB42:
test    edi, edi
jnz     loc_40AC09
cmp     dword_424DB0, edi
jz      short loc_40AB7E
push    esi
call    sub_40A463
pop     ecx
test    eax, eax
jnz     loc_40AA33
call    sub_404899
cmp     [ebp+var_20], edi
jnz     short loc_40ABD7

loc_40AB6B:
mov     esi, eax
call    ds:GetLastError
push    eax
call    sub_404857
pop     ecx
mov     [esi], eax
jmp     short loc_40ABDD

loc_40AB7E:
test    edi, edi
jnz     loc_40AC09
call    sub_404899
cmp     [ebp+var_20], edi
jz      short loc_40ABF8
mov     dword ptr [eax], 0Ch
jmp     short loc_40AC09

loc_40AB98:
test    esi, esi
jnz     short loc_40AB9D
inc     esi

loc_40AB9D:             ; dwBytes
push    esi
push    ebx             ; lpMem
push    0               ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapReAlloc
mov     edi, eax
test    edi, edi
jnz     short loc_40AC09
cmp     dword_424DB0, eax
jz      short loc_40ABEF
push    esi
call    sub_40A463
pop     ecx
test    eax, eax
jz      short loc_40ABE5

loc_40ABC6:
cmp     esi, 0FFFFFFE0h
jbe     short loc_40AB98

loc_40ABCB:
push    esi
call    sub_40A463
pop     ecx
call    sub_404899

loc_40ABD7:
mov     dword ptr [eax], 0Ch

loc_40ABDD:
xor     eax, eax

loc_40ABDF:
call    __SEH_epilog4
retn

loc_40ABE5:
call    sub_404899
jmp     loc_40AB6B

loc_40ABEF:
test    edi, edi
jnz     short loc_40AC09
call    sub_404899

loc_40ABF8:
mov     esi, eax
call    ds:GetLastError
push    eax
call    sub_404857
mov     [esi], eax
pop     ecx

loc_40AC09:
mov     eax, edi
jmp     short loc_40ABDF
sub_40A9F2 endp



; Attributes: bp-based frame

sub_40AC0D proc near

var_14= dword ptr -14h
var_C= dword ptr -0Ch
var_8= byte ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h
arg_10= dword ptr  18h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
push    edi
push    [ebp+arg_0]
lea     ecx, [ebp+var_14]
call    sub_4031A8
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_4]
xor     edi, edi
cmp     eax, edi
jz      short loc_40AC30
mov     [eax], esi

loc_40AC30:
cmp     esi, edi
jnz     short loc_40AC60

loc_40AC34:
call    sub_404899
push    edi
push    edi
push    edi
push    edi
push    edi
mov     dword ptr [eax], 16h
call    sub_404831
add     esp, 14h
cmp     [ebp+var_8], 0
jz      short loc_40AC59
mov     eax, [ebp+var_C]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40AC59:
xor     eax, eax
jmp     loc_40AE38

loc_40AC60:
cmp     [ebp+arg_C], edi
jz      short loc_40AC71
cmp     [ebp+arg_C], 2
jl      short loc_40AC34
cmp     [ebp+arg_C], 24h
jg      short loc_40AC34

loc_40AC71:
mov     ecx, [ebp+var_14]
push    ebx
mov     bl, [esi]
mov     [ebp+var_4], edi
lea     edi, [esi+1]

loc_40AC7D:
cmp     dword ptr [ecx+0ACh], 1
jle     short loc_40AC9D
lea     eax, [ebp+var_14]
push    eax
movzx   eax, bl
push    8
push    eax
call    sub_4066AC
mov     ecx, [ebp+var_14]
add     esp, 0Ch
jmp     short loc_40ACAD

loc_40AC9D:
mov     edx, [ecx+0C8h]
movzx   eax, bl
movzx   eax, word ptr [edx+eax*2]
and     eax, 8

loc_40ACAD:
test    eax, eax
jz      short loc_40ACB6
mov     bl, [edi]
inc     edi
jmp     short loc_40AC7D

loc_40ACB6:
cmp     bl, 2Dh
jnz     short loc_40ACC1
or      [ebp+arg_10], 2
jmp     short loc_40ACC6

loc_40ACC1:
cmp     bl, 2Bh
jnz     short loc_40ACC9

loc_40ACC6:
mov     bl, [edi]
inc     edi

loc_40ACC9:
mov     eax, [ebp+arg_C]
test    eax, eax
jl      loc_40AE1F
cmp     eax, 1
jz      loc_40AE1F
cmp     eax, 24h
jg      loc_40AE1F
test    eax, eax
jnz     short loc_40AD14
cmp     bl, 30h
jz      short loc_40ACF8
mov     [ebp+arg_C], 0Ah
jmp     short loc_40AD2C

loc_40ACF8:
mov     al, [edi]
cmp     al, 78h
jz      short loc_40AD0B
cmp     al, 58h
jz      short loc_40AD0B
mov     [ebp+arg_C], 8
jmp     short loc_40AD2C

loc_40AD0B:
mov     [ebp+arg_C], 10h
jmp     short loc_40AD1E

loc_40AD14:
cmp     eax, 10h
jnz     short loc_40AD2C
cmp     bl, 30h
jnz     short loc_40AD2C

loc_40AD1E:
mov     al, [edi]
cmp     al, 78h
jz      short loc_40AD28
cmp     al, 58h
jnz     short loc_40AD2C

loc_40AD28:
inc     edi
mov     bl, [edi]
inc     edi

loc_40AD2C:
mov     esi, [ecx+0C8h]
mov     eax, 0FFFFFFFFh
xor     edx, edx
div     [ebp+arg_C]

loc_40AD3C:
movzx   ecx, bl
movzx   ecx, word ptr [esi+ecx*2]
test    cl, 4
jz      short loc_40AD50
movsx   ecx, bl
sub     ecx, 30h
jmp     short loc_40AD6B

loc_40AD50:
test    ecx, 103h
jz      short loc_40AD89
mov     cl, bl
sub     cl, 61h
cmp     cl, 19h
movsx   ecx, bl
ja      short loc_40AD68
sub     ecx, 20h

loc_40AD68:
add     ecx, 0FFFFFFC9h

loc_40AD6B:
cmp     ecx, [ebp+arg_C]
jnb     short loc_40AD89
or      [ebp+arg_10], 8
cmp     [ebp+var_4], eax
jb      short loc_40ADA0
jnz     short loc_40AD7F
cmp     ecx, edx
jbe     short loc_40ADA0

loc_40AD7F:
or      [ebp+arg_10], 4
cmp     [ebp+arg_8], 0
jnz     short loc_40ADAC

loc_40AD89:
mov     eax, [ebp+arg_10]
dec     edi
test    al, 8
jnz     short loc_40ADB1
cmp     [ebp+arg_8], 0
jz      short loc_40AD9A
mov     edi, [ebp+arg_4]

loc_40AD9A:
and     [ebp+var_4], 0
jmp     short loc_40ADFB

loc_40ADA0:
mov     ebx, [ebp+var_4]
imul    ebx, [ebp+arg_C]
add     ebx, ecx
mov     [ebp+var_4], ebx

loc_40ADAC:
mov     bl, [edi]
inc     edi
jmp     short loc_40AD3C

loc_40ADB1:
mov     esi, 7FFFFFFFh
test    al, 4
jnz     short loc_40ADD5
test    al, 1
jnz     short loc_40ADFB
and     eax, 2
jz      short loc_40ADCC
cmp     [ebp+var_4], 80000000h
ja      short loc_40ADD5

loc_40ADCC:
test    eax, eax
jnz     short loc_40ADFB
cmp     [ebp+var_4], esi
jbe     short loc_40ADFB

loc_40ADD5:
call    sub_404899
test    byte ptr [ebp+arg_10], 1
mov     dword ptr [eax], 22h
jz      short loc_40ADEC
or      [ebp+var_4], 0FFFFFFFFh
jmp     short loc_40ADFB

loc_40ADEC:
test    byte ptr [ebp+arg_10], 2
push    0
pop     eax
setnz   al
add     eax, esi
mov     [ebp+var_4], eax

loc_40ADFB:
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_40AE04
mov     [eax], edi

loc_40AE04:
test    byte ptr [ebp+arg_10], 2
jz      short loc_40AE0D
neg     [ebp+var_4]

loc_40AE0D:
cmp     [ebp+var_8], 0
jz      short loc_40AE1A
mov     eax, [ebp+var_C]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40AE1A:
mov     eax, [ebp+var_4]
jmp     short loc_40AE37

loc_40AE1F:
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_40AE28
mov     [eax], esi

loc_40AE28:
cmp     [ebp+var_8], 0
jz      short loc_40AE35
mov     eax, [ebp+var_C]
and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40AE35:
xor     eax, eax

loc_40AE37:
pop     ebx

loc_40AE38:
pop     edi
pop     esi
leave
retn
sub_40AC0D endp



; Attributes: bp-based frame

sub_40AE3C proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
xor     eax, eax
push    eax
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
cmp     dword_4246A8, eax
jnz     short loc_40AE5C
push    offset off_411B18
jmp     short loc_40AE5D

loc_40AE5C:
push    eax

loc_40AE5D:
call    sub_40AC0D
add     esp, 14h
pop     ebp
retn
sub_40AE3C endp

align 10h


; Attributes: bp-based frame

sub_40AE70 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
push    edi
push    esi
mov     esi, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     edi, [ebp+arg_0]
mov     eax, ecx
mov     edx, ecx
add     eax, esi
cmp     edi, esi
jbe     short loc_40AE90
cmp     edi, eax
jb      loc_40B034

loc_40AE90:
cmp     ecx, 100h
jb      short loc_40AEB7
cmp     dword_425F24, 0
jz      short loc_40AEB7
push    edi
push    esi
and     edi, 0Fh
and     esi, 0Fh
cmp     edi, esi
pop     esi
pop     edi
jnz     short loc_40AEB7
pop     esi
pop     edi
pop     ebp
jmp     sub_4037B6

loc_40AEB7:
test    edi, 3
jnz     short loc_40AED4
shr     ecx, 2
and     edx, 3
cmp     ecx, 8          ; switch 8 cases
jb      short loc_40AEF4
rep movsd               ; jumptable 0040AEF4 default case
jmp     ds:off_40AFE4[edx*4]
align 4

loc_40AED4:
mov     eax, edi
mov     edx, 3
sub     ecx, 4
jb      short loc_40AEEC
and     eax, 3
add     ecx, eax
jmp     dword ptr ds:loc_40AEF4+4[eax*4]

loc_40AEEC:
jmp     dword ptr ds:loc_40AFF4[ecx*4]
align 4

loc_40AEF4:             ; switch jump
jmp     ds:off_40AF78[ecx*4]
align 4
dd offset loc_40AF08
dd offset loc_40AF34
dd offset loc_40AF58

loc_40AF08:
and     edx, ecx
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     al, [esi+2]
shr     ecx, 2
mov     [edi+2], al
add     esi, 3
add     edi, 3
cmp     ecx, 8
jb      short loc_40AEF4
rep movsd
jmp     ds:off_40AFE4[edx*4]
align 4

loc_40AF34:
and     edx, ecx
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
shr     ecx, 2
mov     [edi+1], al
add     esi, 2
add     edi, 2
cmp     ecx, 8
jb      short loc_40AEF4
rep movsd
jmp     ds:off_40AFE4[edx*4]
align 4

loc_40AF58:
and     edx, ecx
mov     al, [esi]
mov     [edi], al
add     esi, 1
shr     ecx, 2
add     edi, 1
cmp     ecx, 8
jb      short loc_40AEF4
rep movsd
jmp     ds:off_40AFE4[edx*4]
align 4
off_40AF78 dd offset loc_40AFDB ; jump table for switch statement
dd offset loc_40AFC8
dd offset loc_40AFC0
dd offset loc_40AFB8
dd offset loc_40AFB0
dd offset loc_40AFA8
dd offset loc_40AFA0
dd offset loc_40AF98

loc_40AF98:             ; jumptable 0040AEF4 case 7
mov     eax, [esi+ecx*4-1Ch]
mov     [edi+ecx*4-1Ch], eax

loc_40AFA0:             ; jumptable 0040AEF4 case 6
mov     eax, [esi+ecx*4-18h]
mov     [edi+ecx*4-18h], eax

loc_40AFA8:             ; jumptable 0040AEF4 case 5
mov     eax, [esi+ecx*4-14h]
mov     [edi+ecx*4-14h], eax

loc_40AFB0:             ; jumptable 0040AEF4 case 4
mov     eax, [esi+ecx*4-10h]
mov     [edi+ecx*4-10h], eax

loc_40AFB8:             ; jumptable 0040AEF4 case 3
mov     eax, [esi+ecx*4-0Ch]
mov     [edi+ecx*4-0Ch], eax

loc_40AFC0:             ; jumptable 0040AEF4 case 2
mov     eax, [esi+ecx*4-8]
mov     [edi+ecx*4-8], eax

loc_40AFC8:             ; jumptable 0040AEF4 case 1
mov     eax, [esi+ecx*4-4]
mov     [edi+ecx*4-4], eax
lea     eax, ds:0[ecx*4]
add     esi, eax
add     edi, eax

loc_40AFDB:             ; jumptable 0040AEF4 case 0
jmp     ds:off_40AFE4[edx*4]
align 4
off_40AFE4 dd offset loc_40AFF4
dd offset loc_40AFFC
dd offset loc_40B008
dd offset loc_40B01C

loc_40AFF4:
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40AFFC:
mov     al, [esi]
mov     [edi], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B008:
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B01C:
mov     al, [esi]
mov     [edi], al
mov     al, [esi+1]
mov     [edi+1], al
mov     al, [esi+2]
mov     [edi+2], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B034:
lea     esi, [ecx+esi-4]
lea     edi, [ecx+edi-4]
test    edi, 3
jnz     short loc_40B068
shr     ecx, 2
and     edx, 3
cmp     ecx, 8
jb      short loc_40B05C
std
rep movsd
cld
jmp     ds:off_40B180[edx*4] ; jumptable 0040B080 case 0
align 4

loc_40B05C:
neg     ecx
jmp     ds:off_40B130[ecx*4]
align 4

loc_40B068:
mov     eax, edi
mov     edx, 3
cmp     ecx, 4          ; switch 4 cases
jb      short loc_40B080
and     eax, 3          ; jumptable 0040B080 default case
sub     ecx, eax
jmp     dword ptr ds:loc_40B080+4[eax*4]

loc_40B080:             ; switch jump
jmp     ds:off_40B180[ecx*4]
align 4
xchg    eax, esp
mov     al, 40h
add     [eax-1FFFBF50h], bh
mov     al, 40h
add     [edx-2EDCFCBAh], cl
mov     [edi+3], al
sub     esi, 1
shr     ecx, 2
sub     edi, 1
cmp     ecx, 8
jb      short loc_40B05C
std
rep movsd
cld
jmp     ds:off_40B180[edx*4] ; jumptable 0040B080 case 0
align 4
mov     al, [esi+3]
and     edx, ecx
mov     [edi+3], al
mov     al, [esi+2]
shr     ecx, 2
mov     [edi+2], al
sub     esi, 2
sub     edi, 2
cmp     ecx, 8
jb      short loc_40B05C
std
rep movsd
cld
jmp     ds:off_40B180[edx*4] ; jumptable 0040B080 case 0
align 10h
mov     al, [esi+3]
and     edx, ecx
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     al, [esi+1]
shr     ecx, 2
mov     [edi+1], al
sub     esi, 3
sub     edi, 3
cmp     ecx, 8
jb      loc_40B05C
std
rep movsd
cld
jmp     ds:off_40B180[edx*4] ; jumptable 0040B080 case 0
align 4
dd offset loc_40B134
dd offset loc_40B13C
dd offset loc_40B144
dd offset loc_40B14C
dd offset loc_40B154
dd offset loc_40B15C
dd offset loc_40B164
off_40B130 dd offset loc_40B177

loc_40B134:
mov     eax, [esi+ecx*4+1Ch]
mov     [edi+ecx*4+1Ch], eax

loc_40B13C:
mov     eax, [esi+ecx*4+18h]
mov     [edi+ecx*4+18h], eax

loc_40B144:
mov     eax, [esi+ecx*4+14h]
mov     [edi+ecx*4+14h], eax

loc_40B14C:
mov     eax, [esi+ecx*4+10h]
mov     [edi+ecx*4+10h], eax

loc_40B154:
mov     eax, [esi+ecx*4+0Ch]
mov     [edi+ecx*4+0Ch], eax

loc_40B15C:
mov     eax, [esi+ecx*4+8]
mov     [edi+ecx*4+8], eax

loc_40B164:
mov     eax, [esi+ecx*4+4]
mov     [edi+ecx*4+4], eax
lea     eax, ds:0[ecx*4]
add     esi, eax
add     edi, eax

loc_40B177:             ; jumptable 0040B080 case 0
jmp     ds:off_40B180[edx*4]
align 10h
off_40B180 dd offset loc_40B190 ; jump table for switch statement
dd offset loc_40B198    ; jumptable 0040B080 case 1
dd offset loc_40B1A8    ; jumptable 0040B080 case 2
dd offset loc_40B1BC    ; jumptable 0040B080 case 3

loc_40B190:             ; jumptable 0040B080 case 0
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B198:             ; jumptable 0040B080 case 1
mov     al, [esi+3]
mov     [edi+3], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B1A8:             ; jumptable 0040B080 case 2
mov     al, [esi+3]
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
align 4

loc_40B1BC:             ; jumptable 0040B080 case 3
mov     al, [esi+3]
mov     [edi+3], al
mov     al, [esi+2]
mov     [edi+2], al
mov     al, [esi+1]
mov     [edi+1], al
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
leave
retn
sub_40AE70 endp



; Attributes: bp-based frame

sub_40B1D5 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    0Ah
push    0
push    [ebp+arg_0]
call    sub_40AE3C
add     esp, 0Ch
pop     ebp
retn
sub_40B1D5 endp



; Attributes: noreturn bp-based frame

sub_40B1EB proc near

var_328= dword ptr -328h
var_31C= dword ptr -31Ch
ExceptionInfo= _EXCEPTION_POINTERS ptr -2D8h
var_2D0= dword ptr -2D0h
var_244= word ptr -244h
var_240= word ptr -240h
var_23C= word ptr -23Ch
var_238= word ptr -238h
var_234= dword ptr -234h
var_230= dword ptr -230h
var_22C= dword ptr -22Ch
var_228= dword ptr -228h
var_224= dword ptr -224h
var_220= dword ptr -220h
var_21C= dword ptr -21Ch
var_218= dword ptr -218h
var_214= word ptr -214h
var_210= dword ptr -210h
var_20C= dword ptr -20Ch
var_208= word ptr -208h
var_4= dword ptr -4

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 328h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
test    byte_411FE0, 1
push    esi
jz      short loc_40B212
push    0Ah
call    sub_406AEC
pop     ecx

loc_40B212:
call    sub_40A279
test    eax, eax
jz      short loc_40B223
push    16h
call    sub_40A286
pop     ecx

loc_40B223:
test    byte_411FE0, 2
jz      loc_40B2FA
mov     [ebp+var_220], eax
mov     [ebp+var_224], ecx
mov     [ebp+var_228], edx
mov     [ebp+var_22C], ebx
mov     [ebp+var_230], esi
mov     [ebp+var_234], edi
mov     [ebp+var_208], ss
mov     [ebp+var_214], cs
mov     [ebp+var_238], ds
mov     [ebp+var_23C], es
mov     [ebp+var_240], fs
mov     [ebp+var_244], gs
pushf
pop     [ebp+var_210]
mov     esi, [ebp+4]
lea     eax, [ebp+4]
mov     [ebp+var_20C], eax
mov     [ebp+var_2D0], 10001h
mov     [ebp+var_218], esi
mov     eax, [eax-4]
push    50h
mov     [ebp+var_21C], eax
lea     eax, [ebp+var_328]
push    0
push    eax
call    sub_402FB0
lea     eax, [ebp+var_328]
add     esp, 0Ch
mov     [ebp+ExceptionInfo.ExceptionRecord], eax
lea     eax, [ebp+var_2D0]
push    0               ; lpTopLevelExceptionFilter
mov     [ebp+var_328], 40000015h
mov     [ebp+var_31C], esi
mov     [ebp+ExceptionInfo.ContextRecord], eax
call    ds:SetUnhandledExceptionFilter
lea     eax, [ebp+ExceptionInfo]
push    eax             ; ExceptionInfo
call    ds:UnhandledExceptionFilter

loc_40B2FA:             ; uExitCode
push    3
call    sub_406A6A
int     3               ; $!
sub_40B1EB endp



; Attributes: bp-based frame

; int __cdecl sub_40B302(LPCVOID lpMem)
sub_40B302 proc near

var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h
lpMem= dword ptr  8

push    10h
push    offset stru_40F920
call    __SEH_prolog4
xor     eax, eax
mov     ebx, [ebp+lpMem]
xor     edi, edi
cmp     ebx, edi
setnz   al
cmp     eax, edi
jnz     short loc_40B33B
call    sub_404899
mov     dword ptr [eax], 16h
push    edi
push    edi
push    edi
push    edi
push    edi
call    sub_404831
add     esp, 14h
or      eax, 0FFFFFFFFh
jmp     short loc_40B38E

loc_40B33B:
cmp     dword_424DE4, 3
jnz     short loc_40B37C
push    4
call    sub_408620
pop     ecx
mov     [ebp+ms_exc.registration.TryLevel], edi
push    ebx
call    sub_408B1B
pop     ecx
mov     [ebp+var_20], eax
cmp     eax, edi
jz      short loc_40B368
mov     esi, [ebx-4]
sub     esi, 9
mov     [ebp+var_1C], esi
jmp     short loc_40B36B

loc_40B368:
mov     esi, [ebp+var_1C]

loc_40B36B:
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
call    loc_40B39C

loc_40B377:
cmp     [ebp+var_20], edi
jnz     short loc_40B38C

loc_40B37C:             ; lpMem
push    ebx
push    edi             ; dwFlags
push    hHeap           ; hHeap
call    ds:HeapSize
mov     esi, eax

loc_40B38C:
mov     eax, esi

loc_40B38E:
call    __SEH_epilog4
retn

loc_40B394:
xor     edi, edi
mov     ebx, [ebp+lpMem]
mov     esi, [ebp+var_1C]

loc_40B39C:
push    4
call    sub_408546
pop     ecx
retn
sub_40B302 endp




sub_40B3A5 proc near
xor     eax, eax
push    eax             ; hTemplateFile
push    eax             ; dwFlagsAndAttributes
push    3               ; dwCreationDisposition
push    eax             ; lpSecurityAttributes
push    3               ; dwShareMode
push    40000000h       ; dwDesiredAccess
push    offset FileName ; "CONOUT$"
call    ds:CreateFileA
mov     hConsoleOutput, eax
retn
sub_40B3A5 endp

mov     eax, hConsoleOutput
push    esi
mov     esi, ds:CloseHandle
cmp     eax, 0FFFFFFFFh
jz      short loc_40B3DD
cmp     eax, 0FFFFFFFEh
jz      short loc_40B3DD
push    eax
call    esi ; CloseHandle

loc_40B3DD:
mov     eax, dword_411FE4
cmp     eax, 0FFFFFFFFh
jz      short loc_40B3EF
cmp     eax, 0FFFFFFFEh
jz      short loc_40B3EF
push    eax
call    esi ; CloseHandle

loc_40B3EF:
pop     esi
retn
align 10h
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
mov     ecx, [ebp+10h]
or      ecx, ecx
jz      short loc_40B45A
mov     esi, [ebp+8]
mov     edi, [ebp+0Ch]
mov     bh, 41h
mov     bl, 5Ah
mov     dh, 20h
lea     ecx, [ecx+0]

loc_40B41C:
mov     ah, [esi]
or      ah, ah
mov     al, [edi]
jz      short loc_40B44B
or      al, al
jz      short loc_40B44B
add     esi, 1
add     edi, 1
cmp     ah, bh
jb      short loc_40B438
cmp     ah, bl
ja      short loc_40B438
add     ah, dh

loc_40B438:
cmp     al, bh
jb      short loc_40B442
cmp     al, bl
ja      short loc_40B442
add     al, dh

loc_40B442:
cmp     ah, al
jnz     short loc_40B451
sub     ecx, 1
jnz     short loc_40B41C

loc_40B44B:
xor     ecx, ecx
cmp     ah, al
jz      short loc_40B45A

loc_40B451:
mov     ecx, 0FFFFFFFFh
jb      short loc_40B45A
neg     ecx

loc_40B45A:
mov     eax, ecx
pop     ebx
pop     esi
pop     edi
leave
retn
align 10h
mov     eax, [esp+8]
mov     ecx, [esp+10h]
or      ecx, eax
mov     ecx, [esp+0Ch]
jnz     short loc_40B489
mov     eax, [esp+4]
mul     ecx
retn    10h

loc_40B489:
push    ebx
mul     ecx
mov     ebx, eax
mov     eax, [esp+8]
mul     dword ptr [esp+14h]
add     ebx, eax
mov     eax, [esp+8]
mul     ecx
add     edx, ebx
pop     ebx
retn    10h


; Attributes: bp-based frame

sub_40B4A4 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
xor     ebx, ebx
cmp     [ebp+arg_0], ebx
jnz     short loc_40B4B5
xor     eax, eax
jmp     short loc_40B4F6

loc_40B4B5:
push    esi
push    edi
push    [ebp+arg_0]
call    strlen_to_eax   ; length -> eax
                        ;
mov     esi, eax
inc     esi
push    esi
call    sub_409F9C
mov     edi, eax
pop     ecx
pop     ecx
cmp     edi, ebx
jz      short loc_40B4F2
push    [ebp+arg_0]
push    esi
push    edi
call    sub_409C9B
add     esp, 0Ch
test    eax, eax
jz      short loc_40B4EE
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    sub_404709
add     esp, 14h

loc_40B4EE:
mov     eax, edi
jmp     short loc_40B4F4

loc_40B4F2:
xor     eax, eax

loc_40B4F4:
pop     edi
pop     esi

loc_40B4F6:
pop     ebx
pop     ebp
retn
sub_40B4A4 endp

align 10h

loc_40B500:
lea     eax, [edx-1]
pop     ebx
retn
align 10h
xor     eax, eax
mov     al, [esp+8]
push    ebx
mov     ebx, eax
shl     eax, 8
mov     edx, [esp+8]
test    edx, 3
jz      short loc_40B53D

loc_40B528:
mov     cl, [edx]
add     edx, 1
cmp     cl, bl
jz      short loc_40B500
test    cl, cl
jz      short loc_40B586
test    edx, 3
jnz     short loc_40B528

loc_40B53D:
or      ebx, eax
push    edi
mov     eax, ebx
shl     ebx, 10h
push    esi
or      ebx, eax

loc_40B548:
mov     ecx, [edx]
mov     edi, 7EFEFEFFh
mov     eax, ecx
mov     esi, edi
xor     ecx, ebx
add     esi, eax
add     edi, ecx
xor     ecx, 0FFFFFFFFh
xor     eax, 0FFFFFFFFh
xor     ecx, edi
xor     eax, esi
add     edx, 4
and     ecx, 81010100h
jnz     short loc_40B58A
and     eax, 81010100h
jz      short loc_40B548
and     eax, 1010100h
jnz     short loc_40B584
and     esi, 80000000h
jnz     short loc_40B548

loc_40B584:
pop     esi
pop     edi

loc_40B586:
pop     ebx
xor     eax, eax
retn

loc_40B58A:
mov     eax, [edx-4]
cmp     al, bl
jz      short loc_40B5C7
test    al, al
jz      short loc_40B584
cmp     ah, bl
jz      short loc_40B5C0
test    ah, ah
jz      short loc_40B584
shr     eax, 10h
cmp     al, bl
jz      short loc_40B5B9
test    al, al
jz      short loc_40B584
cmp     ah, bl
jz      short loc_40B5B2
test    ah, ah
jz      short loc_40B584
jmp     short loc_40B548

loc_40B5B2:
pop     esi
pop     edi
lea     eax, [edx-1]
pop     ebx
retn

loc_40B5B9:
lea     eax, [edx-2]
pop     esi
pop     edi
pop     ebx
retn

loc_40B5C0:
lea     eax, [edx-3]
pop     esi
pop     edi
pop     ebx
retn

loc_40B5C7:
lea     eax, [edx-4]
pop     esi
pop     edi
pop     ebx
retn
; [00000006 BYTES: COLLAPSED FUNCTION MCIWndCreateA. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind. PRESS CTRL-NUMPAD+ TO EXPAND]
align 10h


; Attributes: bp-based frame

sub_40B5E0 proc near

nNumberOfBytesToWrite= dword ptr -134h
hResInfo= dword ptr -130h
lpBuffer= dword ptr -12Ch
hFile= dword ptr -128h
NumberOfBytesWritten= dword ptr -124h
Buffer= byte ptr -120h
var_4= dword ptr -4

push    ebp
mov     ebp, esp
sub     esp, 134h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    0Ah             ; lpType
push    0E7h            ; lpName
push    0               ; lpModuleName
call    ds:GetModuleHandleA
push    eax             ; hModule
call    ds:FindResourceA
mov     [ebp+hResInfo], eax
cmp     [ebp+hResInfo], 0
jz      short loc_40B670
mov     eax, [ebp+hResInfo]
push    eax             ; hResInfo
push    0               ; hModule
call    ds:SizeofResource
mov     [ebp+nNumberOfBytesToWrite], eax
cmp     [ebp+nNumberOfBytesToWrite], 0
jz      short loc_40B670
mov     ecx, [ebp+hResInfo]
push    ecx             ; hResInfo
push    0               ; hModule
call    ds:LoadResource
mov     [ebp+hResInfo], eax
cmp     [ebp+hResInfo], 0
jz      short loc_40B670
mov     edx, [ebp+hResInfo]
push    edx             ; hResData
call    ds:LockResource
mov     [ebp+lpBuffer], eax
cmp     [ebp+lpBuffer], 0
jnz     short loc_40B677

loc_40B670:
xor     eax, eax
jmp     loc_40B70A

loc_40B677:
lea     eax, [ebp+Buffer]
push    eax             ; lpBuffer
push    104h            ; nBufferLength
call    ds:GetTempPathA
push    offset aVidWmv  ; "\\vid.wmv"
lea     ecx, [ebp+Buffer]
push    ecx
call    sub_403390
add     esp, 8
push    0               ; hTemplateFile
push    100h            ; dwFlagsAndAttributes
push    2               ; dwCreationDisposition
push    0               ; lpSecurityAttributes
push    0               ; dwShareMode
push    40000000h       ; dwDesiredAccess
lea     edx, [ebp+Buffer]
push    edx             ; lpFileName
call    ds:CreateFileA
mov     [ebp+hFile], eax
cmp     [ebp+hFile], 0FFFFFFFFh
jnz     short loc_40B6D3
lea     eax, [ebp+Buffer]
jmp     short loc_40B70A

loc_40B6D3:             ; lpOverlapped
push    0
lea     eax, [ebp+NumberOfBytesWritten]
push    eax             ; lpNumberOfBytesWritten
mov     ecx, [ebp+nNumberOfBytesToWrite]
push    ecx             ; nNumberOfBytesToWrite
mov     edx, [ebp+lpBuffer]
push    edx             ; lpBuffer
mov     eax, [ebp+hFile]
push    eax             ; hFile
call    ds:WriteFile
mov     ecx, [ebp+hFile]
push    ecx             ; hObject
call    ds:CloseHandle
lea     eax, [ebp+Buffer]

loc_40B70A:
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
sub_40B5E0 endp

align 10h


; Attributes: bp-based frame

sub_40B720 proc near
push    ebp
mov     ebp, esp
push    esi
xor     esp, esp
xor     esi, esi
xor     eax, eax
xor     ebp, ebp
dec     esp
jmp     esp
sub_40B720 endp

pop     esi
pop     ebp
retn
align 10h


; Attributes: bp-based frame

; DWORD __stdcall sub_40B740(LPVOID lpThreadParameter)
sub_40B740 proc near

lpThreadParameter= dword ptr  8

push    ebp
mov     ebp, esp

loc_40B743:
mov     eax, 1
test    eax, eax
jz      short loc_40B75B
call    sub_401060
push    14h             ; dwMilliseconds
call    ds:Sleep
jmp     short loc_40B743

loc_40B75B:
pop     ebp
retn
sub_40B740 endp

align 10h


; Attributes: bp-based frame

; DWORD __stdcall sub_40B760(LPVOID lpThreadParameter)
sub_40B760 proc near

lpThreadParameter= dword ptr  8

push    ebp
mov     ebp, esp

loc_40B763:
mov     eax, 1
test    eax, eax
jz      short loc_40B77B
call    sub_401060
push    14h             ; dwMilliseconds
call    ds:Sleep
jmp     short loc_40B763

loc_40B77B:
pop     ebp
retn
sub_40B760 endp

align 10h


; Attributes: bp-based frame

; DWORD __stdcall sub_40B780(LPVOID lpThreadParameter)
sub_40B780 proc near

lpThreadParameter= dword ptr  8

push    ebp
mov     ebp, esp

loc_40B783:
mov     eax, 1
test    eax, eax
jz      short loc_40B79B
call    sub_401060
push    14h             ; dwMilliseconds
call    ds:Sleep
jmp     short loc_40B783

loc_40B79B:
pop     ebp
retn
sub_40B780 endp

align 10h


; Attributes: bp-based frame

; DWORD __stdcall StartAddress(LPVOID lpThreadParameter)
StartAddress proc near

lpThreadParameter= dword ptr  8

push    ebp
mov     ebp, esp

loc_40B7A3:
mov     eax, 1
test    eax, eax
jz      short loc_40B7BB
call    sub_401060
push    14h             ; dwMilliseconds
call    ds:Sleep
jmp     short loc_40B7A3

loc_40B7BB:
pop     ebp
retn
StartAddress endp

align 10h


; Attributes: bp-based frame

sub_40B7C0 proc near
push    ebp
mov     ebp, esp
push    esi
xor     esp, esp
xor     esi, esi
xor     eax, eax
xor     ebp, ebp
dec     esp
jmp     esp
sub_40B7C0 endp

pop     esi
pop     ebp
retn
align 10h


; Attributes: bp-based frame

all_caps proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
push    eax
call    strlen_to_eax   ; length -> eax
                        ;
add     esp, 4
mov     [ebp+var_4], eax
mov     [ebp+var_8], 0
jmp     short loc_40B807

loc_40B7FE:
mov     ecx, [ebp+var_8]
add     ecx, 1
mov     [ebp+var_8], ecx

loc_40B807:
mov     edx, [ebp+var_8]
cmp     edx, [ebp+var_4]
jge     short loc_40B82B
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_8]
movsx   ecx, byte ptr [eax]
push    ecx
call    sub_403345
add     esp, 4
mov     edx, [ebp+arg_0]
add     edx, [ebp+var_8]
mov     [edx], al
jmp     short loc_40B7FE

loc_40B82B:
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
all_caps endp

align 10h


; Attributes: bp-based frame

sub_40B840 proc near
push    ebp
mov     ebp, esp
movzx   eax, byte_412079
cmp     eax, 1
jnz     short loc_40B8A4
mov     dword_424DC4, 0
jmp     short loc_40B86A

loc_40B85B:
mov     ecx, dword_424DC4
add     ecx, 1
mov     dword_424DC4, ecx

loc_40B86A:
mov     edx, dword_424DC4
cmp     lpWindowName[edx*4], 0
jz      short loc_40B8A4
mov     eax, dword_424DC4
mov     ecx, lpWindowName[eax*4]
push    ecx             ; lpWindowName
push    0               ; lpClassName
call    ds:FindWindowA
mov     dword_424DB8, eax
cmp     dword_424DB8, 0
jz      short loc_40B8A2
call    sub_40B7C0

loc_40B8A2:
jmp     short loc_40B85B

loc_40B8A4:
movzx   edx, byte_412078
cmp     edx, 1
jnz     short loc_40B904
mov     dword_424DC0, 0
jmp     short loc_40B8C9

loc_40B8BC:
mov     eax, dword_424DC0
add     eax, 1
mov     dword_424DC0, eax

loc_40B8C9:
mov     ecx, dword_424DC0
cmp     lpClassName[ecx*4], 0
jz      short loc_40B904
push    0               ; lpWindowName
mov     edx, dword_424DC0
mov     eax, lpClassName[edx*4]
push    eax             ; lpClassName
call    ds:FindWindowA
mov     dword_424DB8, eax
cmp     dword_424DB8, 0
jz      short loc_40B902
call    sub_40B7C0

loc_40B902:
jmp     short loc_40B8BC

loc_40B904:             ; hTemplateFile
push    0
push    80h             ; dwFlagsAndAttributes
push    3               ; dwCreationDisposition
push    0               ; lpSecurityAttributes
push    3               ; dwShareMode
push    0C0000000h      ; dwDesiredAccess
push    offset aSice    ; "\\\\.\\SICE"
call    ds:CreateFileA
cmp     eax, 0FFFFFFFFh
jz      short loc_40B92B
call    sub_40B7C0

loc_40B92B:             ; hTemplateFile
push    0
push    80h             ; dwFlagsAndAttributes
push    3               ; dwCreationDisposition
push    0               ; lpSecurityAttributes
push    3               ; dwShareMode
push    0C0000000h      ; dwDesiredAccess
push    offset aNtice   ; "\\\\.\\NTICE"
call    ds:CreateFileA
cmp     eax, 0FFFFFFFFh
jz      short loc_40B952
call    sub_40B7C0

loc_40B952:
pop     ebp
retn
sub_40B840 endp

align 10h


; Attributes: bp-based frame

sub_40B960 proc near

lpflOldProtect= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
ms_exc= CPPEH_RECORD ptr -18h

push    ebp
mov     ebp, esp
push    0FFFFFFFEh
push    offset stru_40F960
push    offset SEH_401060
mov     eax, large fs:0
push    eax
add     esp, 0FFFFFFECh
push    ebx
push    esi
push    edi
mov     eax, dword_411004
xor     [ebp+ms_exc.registration.ScopeTable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+var_20], 0
mov     [ebp+var_1C], 0
lea     eax, [ebp+var_1C]
mov     [ebp+lpflOldProtect], eax
mov     [ebp+ms_exc.registration.TryLevel], 0
push    4               ; flProtect
push    1000h           ; flAllocationType
push    10000h          ; dwSize
push    0               ; lpAddress
mov     esi, ds:VirtualAlloc
call    esi ; VirtualAlloc
mov     [ebp+var_20], eax
mov     byte ptr [eax], 0C3h
mov     [ebp+var_20], eax
push    [ebp+lpflOldProtect] ; lpflOldProtect
push    120h            ; flNewProtect
push    10h             ; dwSize
push    eax             ; lpAddress
mov     esi, ds:VirtualProtect
call    esi ; VirtualProtect
call    [ebp+var_20]
call    sub_40B7C0
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
jmp     short loc_40BA0B

loc_40B9F1:
mov     eax, 1
retn

loc_40B9F7:
mov     esp, [ebp+ms_exc.old_esp]
pop     large dword ptr fs:0
add     esp, 4
mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_40BA0B:
mov     ecx, [ebp+ms_exc.registration.Next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub_40B960 endp

align 10h


; Attributes: bp-based frame

sub_40BA20 proc near

lpAddress= dword ptr -14h
var_10= byte ptr -10h
var_F= dword ptr -0Fh
var_B= byte ptr -0Bh
var_A= byte ptr -0Ah
var_8= dword ptr -8
flOldProtect= dword ptr -4

push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_8], eax
push    offset aDbguiremotebre ; "DbgUiRemoteBreakin"
push    offset aNtdll   ; "ntdll"
call    ds:GetModuleHandleA
push    eax             ; hModule
call    ds:GetProcAddress
mov     [ebp+lpAddress], eax
mov     [ebp+var_10], 0B8h
mov     byte ptr [ebp+var_F], 0CCh
mov     byte ptr [ebp+var_F+1], 0CCh
mov     byte ptr [ebp+var_F+2], 0CCh
mov     byte ptr [ebp+var_F+3], 0CCh
mov     [ebp+var_B], 0FFh
mov     [ebp+var_A], 0E0h
mov     [ebp+var_F], offset sub_40B720
mov     [ebp+flOldProtect], 0
lea     eax, [ebp+flOldProtect]
push    eax             ; lpflOldProtect
push    40h             ; flNewProtect
push    7               ; dwSize
mov     ecx, [ebp+lpAddress]
push    ecx             ; lpAddress
call    ds:VirtualProtect
test    eax, eax
jz      short loc_40BAB0
push    7
lea     edx, [ebp+var_10]
push    edx
mov     eax, [ebp+lpAddress]
push    eax
call    sub_4029F0
add     esp, 0Ch
lea     ecx, [ebp+flOldProtect]
push    ecx             ; lpflOldProtect
mov     edx, [ebp+flOldProtect]
push    edx             ; flNewProtect
push    7               ; dwSize
mov     eax, [ebp+lpAddress]
push    eax             ; lpAddress
call    ds:VirtualProtect

loc_40BAB0:
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
sub_40BA20 endp

align 10h


; Attributes: bp-based frame

sub_40BAC0 proc near
push    ebp
mov     ebp, esp
push    0               ; lpThreadId
push    0               ; dwCreationFlags
push    0               ; lpParameter
push    offset StartAddress ; lpStartAddress
push    0               ; dwStackSize
push    0               ; lpThreadAttributes
call    ds:CreateThread
push    0               ; lpThreadId
push    0               ; dwCreationFlags
push    0               ; lpParameter
push    offset sub_40B780 ; lpStartAddress
push    0               ; dwStackSize
push    0               ; lpThreadAttributes
call    ds:CreateThread
push    0               ; lpThreadId
push    0               ; dwCreationFlags
push    0               ; lpParameter
push    offset sub_40B760 ; lpStartAddress
push    0               ; dwStackSize
push    0               ; lpThreadAttributes
call    ds:CreateThread
push    0               ; lpThreadId
push    0               ; dwCreationFlags
push    0               ; lpParameter
push    offset sub_40B740 ; lpStartAddress
push    0               ; dwStackSize
push    0               ; lpThreadAttributes
call    ds:CreateThread
pop     ebp
retn
sub_40BAC0 endp

align 10h
push    ebp
mov     ebp, esp
cmp     dword ptr [ebp+0Ch], 1
jnz     short loc_40BB3D
call    sub_40BA20
call    sub_40BAC0
call    sub_40B960
call    sub_40B840

loc_40BB3D:
pop     ebp
retn    0Ch
align 10h


; Attributes: bp-based frame

interesting_serial_stuff proc near

var_110= byte ptr -110h
var_C= dword ptr -0Ch
user_sum= dword ptr -8
var_4= dword ptr -4
username= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
sub     esp, 110h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_C], eax
push    0FFh
push    0
lea     eax, [ebp+var_110]
push    eax
call    sub_402FB0      ; memset(0)?
add     esp, 0Ch
mov     [ebp+var_4], 0
mov     [ebp+user_sum], 0
mov     [ebp+user_sum], 0
jmp     short loc_40BB99 ; username

loc_40BB90:
mov     ecx, [ebp+user_sum]
add     ecx, 1
mov     [ebp+user_sum], ecx

loc_40BB99:             ; username
mov     edx, [ebp+username]
push    edx
call    strlen_to_eax   ; length -> eax
                        ;
add     esp, 4
cmp     [ebp+user_sum], eax
jnb     short loc_40BBBB
mov     eax, [ebp+username]
add     eax, [ebp+user_sum]
movsx   ecx, byte ptr [eax]
add     ecx, [ebp+var_4]
mov     [ebp+var_4], ecx
jmp     short loc_40BB90

loc_40BBBB:
mov     edx, 0FFh
sub     edx, [ebp+var_4]
mov     [ebp+var_4], edx
mov     eax, [ebp+var_4]
imul    eax, 133729h
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
imul    ecx, 3122h
mov     [ebp+var_4], ecx
mov     edx, [ebp+username]
push    edx
call    strlen_to_eax   ; length -> eax
                        ;
add     esp, 4
cmp     eax, 2
jbe     short loc_40BC0A
mov     eax, [ebp+username]
movsx   ecx, byte ptr [eax]
imul    ecx, 0Ah
mov     edx, [ebp+username]
movsx   eax, byte ptr [edx+1]
imul    eax, 64h
add     eax, [ebp+var_4]
add     eax, ecx
mov     [ebp+var_4], eax

loc_40BC0A:
mov     ecx, [ebp+var_4]
push    ecx
push    offset aGrnX    ; "gRn-%X"
lea     edx, [ebp+var_110]
push    edx
call    snprintf
add     esp, 0Ch
lea     eax, [ebp+var_110]
push    eax
call    hash_function   ; eax = hash
add     esp, 4
push    eax
call    all_caps        ; eax = &correct_key
                        ; ecx=0x20
add     esp, 4
push    eax
mov     ecx, [ebp+arg_4] ; ecx = password
push    ecx
call    sub_403120
add     esp, 8
neg     eax
sbb     eax, eax
add     eax, 1
mov     ecx, [ebp+var_C]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
interesting_serial_stuff endp

align 10h


; Attributes: bp-based frame

; BOOL __stdcall DialogFunc(HWND, UINT, WPARAM, LPARAM)
DialogFunc proc near

var_214= dword ptr -214h
var_210= dword ptr -210h
hWnd= dword ptr -20Ch
String= byte ptr -208h
var_108= byte ptr -108h
var_4= dword ptr -4
hDlg= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 214h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_210], eax
cmp     [ebp+var_210], 10h
jz      short loc_40BCA2
cmp     [ebp+var_210], 110h
jz      short loc_40BCB3
cmp     [ebp+var_210], 111h
jz      short loc_40BCBD
jmp     loc_40BE10      ; jumptable 0040BD08 default case

loc_40BCA2:             ; nResult
push    0
mov     ecx, [ebp+hDlg]
push    ecx             ; hDlg
call    ds:EndDialog
jmp     loc_40BE14

loc_40BCB3:
call    sub_40BAC0
jmp     loc_40BE14

loc_40BCBD:
mov     edx, [ebp+arg_8]
shr     edx, 10h
and     edx, 0FFFFh
movzx   eax, dx
test    eax, eax
jnz     loc_40BE10      ; jumptable 0040BD08 default case
mov     ecx, [ebp+arg_8]
and     ecx, 0FFFFh
movzx   edx, cx
mov     [ebp+var_214], edx
mov     eax, [ebp+var_214]
sub     eax, 64h
mov     [ebp+var_214], eax
cmp     [ebp+var_214], 3 ; switch 4 cases
ja      loc_40BE10      ; jumptable 0040BD08 default case
mov     ecx, [ebp+var_214]
jmp     ds:off_40BE2C[ecx*4] ; switch jump

loc_40BD0F:             ; jumptable 0040BD08 case 3
push    0
mov     edx, [ebp+hDlg]
push    edx             ; hDlg
call    ds:EndDialog
jmp     loc_40BE10      ; jumptable 0040BD08 default case

verify_serial:          ; jumptable 0040BD08 case 0
push    0FFh
push    0
lea     eax, [ebp+String]
push    eax
call    sub_402FB0
add     esp, 0Ch
push    0FFh            ; cchMax
lea     ecx, [ebp+String]
push    ecx             ; lpString
push    104             ; nIDDlgItem
mov     edx, [ebp+hDlg]
push    edx             ; hDlg
call    ds:GetDlgItemTextA ; get_username
push    0FFh
push    0
lea     eax, [ebp+var_108]
push    eax
call    sub_402FB0
add     esp, 0Ch
push    0FFh            ; cchMax
lea     ecx, [ebp+var_108]
push    ecx             ; lpString
push    105             ; nIDDlgItem
mov     edx, [ebp+hDlg]
push    edx             ; hDlg
call    ds:GetDlgItemTextA ; get_password
lea     eax, [ebp+var_108]
push    eax
lea     ecx, [ebp+String]
push    ecx
call    interesting_serial_stuff
add     esp, 8
movzx   edx, al
test    edx, edx
jz      short loc_40BDAF
push    40h             ; uType
push    offset Caption  ; "Congrats"
push    offset Text     ; "You made it!\nNow write a keygen, crack"...
push    0               ; hWnd
call    ds:MessageBoxA
jmp     short loc_40BDC3

loc_40BDAF:             ; uType
push    10h
push    offset aGoAway  ; "Go away"
push    offset aYouHaveFailed ; "You have failed!"
push    0               ; hWnd
call    ds:MessageBoxA

loc_40BDC3:             ; jumptable 0040BD08 default case
jmp     short loc_40BE10

loc_40BDC5:             ; jumptable 0040BD08 case 1
push    40h
push    offset aAbout   ; "About"
push    offset aAbductionCrack ; "Abduction Crackme \\ Keygenme by sd3332"...
push    0               ; hWnd
call    ds:MessageBoxA
jmp     short loc_40BE10 ; jumptable 0040BD08 default case

loc_40BDDB:             ; jumptable 0040BD08 case 2
call    sub_40B5E0
push    eax
push    1000000Ah
push    0
mov     eax, [ebp+hDlg]
push    eax
call    MCIWndCreateA
add     esp, 10h
mov     [ebp+hWnd], eax
push    0               ; lParam
push    0               ; wParam
push    806h            ; Msg
mov     ecx, [ebp+hWnd]
push    ecx             ; hWnd
call    ds:SendMessageA

loc_40BE10:             ; jumptable 0040BD08 default case
xor     eax, eax
jmp     short loc_40BE19

loc_40BE14:
mov     eax, 1

loc_40BE19:
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn    10h
DialogFunc endp

align 4
off_40BE2C dd offset verify_serial ; jump table for switch statement
dd offset loc_40BDC5
dd offset loc_40BDDB
dd offset loc_40BD0F
align 10h


; Attributes: bp-based frame

; int __stdcall sub_40BE40(HINSTANCE hInstance, int, int, int)
sub_40BE40 proc near

hInstance= dword ptr  8

push    ebp
mov     ebp, esp
push    0               ; lpModuleName
call    ds:GetModuleHandleA
mov     [ebp+hInstance], eax
call    ds:InitCommonControls
push    0               ; dwInitParam
push    offset DialogFunc ; lpDialogFunc
push    0               ; hWndParent
push    534h            ; lpTemplateName
mov     eax, [ebp+hInstance]
push    eax             ; hInstance
call    ds:DialogBoxParamA
pop     ebp
retn    10h
sub_40BE40 endp



; Attributes: bp-based frame

sub_40BE70 proc near

var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 0Ch
mov     [ebp+var_C], ecx
mov     [ebp+var_4], 0
mov     [ebp+var_8], 0
jmp     short loc_40BE9B

loc_40BE89:
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_8]
add     ecx, 4
mov     [ebp+var_8], ecx

loc_40BE9B:
mov     edx, [ebp+var_8]
cmp     edx, [ebp+arg_8]
jnb     short loc_40BEE4
mov     eax, [ebp+arg_4]
add     eax, [ebp+var_8]
movzx   ecx, byte ptr [eax]
mov     edx, [ebp+arg_4]
add     edx, [ebp+var_8]
movzx   eax, byte ptr [edx+1]
shl     eax, 8
or      ecx, eax
mov     edx, [ebp+arg_4]
add     edx, [ebp+var_8]
movzx   eax, byte ptr [edx+2]
shl     eax, 10h
or      ecx, eax
mov     edx, [ebp+arg_4]
add     edx, [ebp+var_8]
movzx   eax, byte ptr [edx+3]
shl     eax, 18h
or      ecx, eax
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_0]
mov     [eax+edx*4], ecx
jmp     short loc_40BE89

loc_40BEE4:
mov     esp, ebp
pop     ebp
retn    0Ch
sub_40BE70 endp

align 10h


; Attributes: bp-based frame

sub_40BEF0 proc near

var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
sub     esp, 0Ch
mov     [ebp+var_C], ecx
mov     [ebp+var_4], 0
mov     [ebp+var_8], 0
jmp     short loc_40BF1B

loc_40BF09:
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_8]
add     ecx, 4
mov     [ebp+var_8], ecx

loc_40BF1B:
mov     edx, [ebp+var_8]
cmp     edx, [ebp+arg_8]
jnb     short loc_40BF8F
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+eax*4]
and     edx, 0FFh
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_8]
mov     [eax], dl
mov     ecx, [ebp+var_4]
mov     edx, [ebp+arg_4]
mov     eax, [edx+ecx*4]
shr     eax, 8
and     eax, 0FFh
mov     ecx, [ebp+arg_0]
add     ecx, [ebp+var_8]
mov     [ecx+1], al
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_4]
mov     ecx, [eax+edx*4]
shr     ecx, 10h
and     ecx, 0FFh
mov     edx, [ebp+arg_0]
add     edx, [ebp+var_8]
mov     [edx+2], cl
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     edx, [ecx+eax*4]
shr     edx, 18h
and     edx, 0FFh
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_8]
mov     [eax+3], dl
jmp     loc_40BF09

loc_40BF8F:
mov     esp, ebp
pop     ebp
retn    0Ch
sub_40BEF0 endp

align 10h


; Attributes: bp-based frame

sub_40BFA0 proc near

var_4= dword ptr -4

push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
push    8
push    0
mov     eax, [ebp+var_4]
add     eax, 10h
push    eax
call    sub_402FB0
add     esp, 0Ch
mov     ecx, [ebp+var_4]
mov     dword ptr [ecx], 21427531h
mov     edx, [ebp+var_4]
mov     dword ptr [edx+4], 75135135h
mov     eax, [ebp+var_4]
mov     dword ptr [eax+8], 3158AC31h
mov     ecx, [ebp+var_4]
mov     dword ptr [ecx+0Ch], 1A1B2A6h
mov     esp, ebp
pop     ebp
retn
sub_40BFA0 endp

align 10h


; Attributes: bp-based frame

bin_to_ascii_hex proc near

var_118= byte ptr -118h
var_14= dword ptr -14h
var_10= byte ptr -10h
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 118h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_4], eax
push    100h
push    0
lea     eax, [ebp+var_118]
push    eax
call    sub_402FB0
add     esp, 0Ch
push    0Ah
push    0
lea     ecx, [ebp+var_10]
push    ecx
call    sub_402FB0
add     esp, 0Ch
mov     [ebp+var_14], 0
jmp     short loc_40C03B

loc_40C032:
mov     edx, [ebp+var_14]
add     edx, 1
mov     [ebp+var_14], edx

loc_40C03B:
cmp     [ebp+var_14], 10h
jge     short loc_40C073
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_14]
movzx   ecx, byte ptr [eax]
push    ecx
push    offset a02x     ; "%02x"
lea     edx, [ebp+var_10]
push    edx
call    snprintf
add     esp, 0Ch
push    0Ah
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+var_118]
push    ecx
call    sub_402DE0
add     esp, 0Ch
jmp     short loc_40C032

loc_40C073:
lea     edx, [ebp+var_118]
push    edx
call    sub_40B4A4
add     esp, 4
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
bin_to_ascii_hex endp



; Attributes: bp-based frame

sub_40C090 proc near

var_54= dword ptr -54h
var_50= dword ptr -50h
var_4C= dword ptr -4Ch
var_48= dword ptr -48h
var_44= dword ptr -44h
var_40= dword ptr -40h
var_3C= dword ptr -3Ch
var_38= dword ptr -38h
var_34= dword ptr -34h
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 54h
mov     [ebp+var_54], ecx
mov     eax, [ebp+var_54]
mov     ecx, [eax]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_54]
mov     eax, [edx+4]
mov     [ebp+var_48], eax
mov     ecx, [ebp+var_54]
mov     edx, [ecx+8]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_54]
mov     ecx, [eax+0Ch]
mov     [ebp+var_4C], ecx
push    40h
mov     edx, [ebp+arg_0]
push    edx
lea     eax, [ebp+var_40]
push    eax
mov     ecx, [ebp+var_54]
call    sub_40BE70
mov     ecx, [ebp+var_48]
not     ecx
and     ecx, [ebp+var_4C]
mov     edx, [ebp+var_48]
and     edx, [ebp+var_50]
or      edx, ecx
add     edx, [ebp+var_40]
mov     eax, [ebp+var_44]
lea     ecx, [eax+edx-28955B88h]
mov     [ebp+var_44], ecx
mov     ecx, 20h
sub     ecx, 7
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 7
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_50]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_48]
or      eax, edx
add     eax, [ebp+var_3C]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-173848AAh]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ch
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ch
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_48]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_44]
or      ecx, eax
add     ecx, [ebp+var_38]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx+242070DBh]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 11h
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 11h
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_44]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_4C]
or      eax, edx
add     eax, [ebp+var_34]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-3E423112h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 16h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 16h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_4C]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_50]
or      ecx, eax
add     ecx, [ebp+var_30]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx-0A83F051h]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 7
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 7
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_50]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_48]
or      eax, edx
add     eax, [ebp+var_2C]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax+4787C62Ah]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ch
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ch
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_48]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_44]
or      ecx, eax
add     ecx, [ebp+var_28]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx-57CFB9EDh]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 11h
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 11h
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_44]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_4C]
or      eax, edx
add     eax, [ebp+var_24]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-2B96AFFh]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 16h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 16h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_4C]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_50]
or      ecx, eax
add     ecx, [ebp+var_20]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx+698098D8h]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 7
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 7
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_50]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_48]
or      eax, edx
add     eax, [ebp+var_1C]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-74BB0851h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ch
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ch
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_48]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_44]
or      ecx, eax
add     ecx, [ebp+var_18]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx-0A44Fh]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 11h
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 11h
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_44]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_4C]
or      eax, edx
add     eax, [ebp+var_14]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-76A32842h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 16h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 16h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_4C]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_50]
or      ecx, eax
add     ecx, [ebp+var_10]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx+6B901122h]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 7
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 7
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_50]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_48]
or      eax, edx
add     eax, [ebp+var_C]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-2678E6Dh]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ch
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ch
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_48]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_44]
or      ecx, eax
add     ecx, [ebp+var_8]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx-5986BC72h]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 11h
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 11h
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_44]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_4C]
or      eax, edx
add     eax, [ebp+var_4]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax+49B40821h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 16h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 16h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_50]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_4C]
or      ecx, eax
add     ecx, [ebp+var_3C]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx-9E1DA9Eh]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 5
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 5
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_50]
or      eax, edx
add     eax, [ebp+var_28]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-3FBF4CC0h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 9
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 9
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_44]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_48]
or      ecx, eax
add     ecx, [ebp+var_14]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx+265E5A51h]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 0Eh
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 0Eh
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_4C]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_44]
or      eax, edx
add     eax, [ebp+var_40]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-16493856h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 14h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 14h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_50]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_4C]
or      ecx, eax
add     ecx, [ebp+var_2C]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx-29D0EFA3h]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 5
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 5
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_50]
or      eax, edx
add     eax, [ebp+var_18]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax+2441453h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 9
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 9
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_44]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_48]
or      ecx, eax
add     ecx, [ebp+var_4]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx-275E197Fh]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 0Eh
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 0Eh
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_4C]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_44]
or      eax, edx
add     eax, [ebp+var_30]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-182C0438h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 14h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 14h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_50]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_4C]
or      ecx, eax
add     ecx, [ebp+var_1C]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx+21E1CDE6h]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 5
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 5
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_50]
or      eax, edx
add     eax, [ebp+var_8]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-3CC8F82Ah]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 9
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 9
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_44]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_48]
or      ecx, eax
add     ecx, [ebp+var_34]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx-0B2AF279h]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 0Eh
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 0Eh
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_4C]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_44]
or      eax, edx
add     eax, [ebp+var_20]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax+455A14EDh]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 14h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 14h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
and     eax, [ebp+var_50]
mov     ecx, [ebp+var_48]
and     ecx, [ebp+var_4C]
or      ecx, eax
add     ecx, [ebp+var_C]
mov     edx, [ebp+var_44]
lea     eax, [edx+ecx-561C16FBh]
mov     [ebp+var_44], eax
mov     ecx, 20h
sub     ecx, 5
mov     edx, [ebp+var_44]
shr     edx, cl
mov     eax, [ebp+var_44]
shl     eax, 5
or      eax, edx
mov     [ebp+var_44], eax
mov     ecx, [ebp+var_44]
add     ecx, [ebp+var_48]
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_50]
not     edx
and     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
and     eax, [ebp+var_50]
or      eax, edx
add     eax, [ebp+var_38]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-3105C08h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 9
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 9
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
and     eax, [ebp+var_44]
mov     ecx, [ebp+var_4C]
and     ecx, [ebp+var_48]
or      ecx, eax
add     ecx, [ebp+var_24]
mov     edx, [ebp+var_50]
lea     eax, [edx+ecx+676F02D9h]
mov     [ebp+var_50], eax
mov     ecx, 20h
sub     ecx, 0Eh
mov     edx, [ebp+var_50]
shr     edx, cl
mov     eax, [ebp+var_50]
shl     eax, 0Eh
or      eax, edx
mov     [ebp+var_50], eax
mov     ecx, [ebp+var_50]
add     ecx, [ebp+var_4C]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_44]
not     edx
and     edx, [ebp+var_4C]
mov     eax, [ebp+var_50]
and     eax, [ebp+var_44]
or      eax, edx
add     eax, [ebp+var_10]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-72D5B376h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 14h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 14h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_2C]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax-5C6BEh]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 4
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 4
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_20]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-788E097Fh]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Bh
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Bh
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_14]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax+6D9D6122h]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 10h
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 10h
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_8]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-21AC7F4h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 17h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 17h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_3C]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax-5B4115BCh]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 4
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 4
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_30]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax+4BDECFA9h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Bh
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Bh
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_24]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax-944B4A0h]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 10h
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 10h
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_18]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-41404390h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 17h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 17h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_C]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax+289B7EC6h]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 4
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 4
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_40]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-155ED806h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Bh
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Bh
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_34]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax-2B10CF7Bh]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 10h
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 10h
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_28]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax+4881D05h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 17h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 17h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_1C]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax-262B2FC7h]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 4
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 4
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_10]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-1924661Bh]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Bh
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Bh
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_4]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax+1FA27CF8h]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 10h
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 10h
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_38]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-3B53A99Bh]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 17h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 17h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
or      eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_40]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax-0BD6DDBCh]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 6
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 6
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_50]
not     eax
or      eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_24]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax+432AFF97h]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ah
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ah
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
or      eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_8]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax-546BDC59h]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 0Fh
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 0Fh
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_44]
not     eax
or      eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_2C]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-36C5FC7h]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 15h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 15h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
mov     eax, [ebp+var_4C]
not     eax
or      eax, [ebp+var_48]
xor     eax, [ebp+var_50]
add     eax, [ebp+var_10]
mov     ecx, [ebp+var_44]
lea     edx, [ecx+eax+655B59C3h]
mov     [ebp+var_44], edx
mov     ecx, 20h
sub     ecx, 6
mov     eax, [ebp+var_44]
shr     eax, cl
mov     ecx, [ebp+var_44]
shl     ecx, 6
or      ecx, eax
mov     [ebp+var_44], ecx
mov     edx, [ebp+var_44]
add     edx, [ebp+var_48]
mov     [ebp+var_44], edx
mov     eax, [ebp+var_50]
not     eax
or      eax, [ebp+var_44]
xor     eax, [ebp+var_48]
add     eax, [ebp+var_34]
mov     ecx, [ebp+var_4C]
lea     edx, [ecx+eax-70F3336Eh]
mov     [ebp+var_4C], edx
mov     ecx, 20h
sub     ecx, 0Ah
mov     eax, [ebp+var_4C]
shr     eax, cl
mov     ecx, [ebp+var_4C]
shl     ecx, 0Ah
or      ecx, eax
mov     [ebp+var_4C], ecx
mov     edx, [ebp+var_4C]
add     edx, [ebp+var_44]
mov     [ebp+var_4C], edx
mov     eax, [ebp+var_48]
not     eax
or      eax, [ebp+var_4C]
xor     eax, [ebp+var_44]
add     eax, [ebp+var_18]
mov     ecx, [ebp+var_50]
lea     edx, [ecx+eax-100B83h]
mov     [ebp+var_50], edx
mov     ecx, 20h
sub     ecx, 0Fh
mov     eax, [ebp+var_50]
shr     eax, cl
mov     ecx, [ebp+var_50]
shl     ecx, 0Fh
or      ecx, eax
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, [ebp+var_4C]
mov     [ebp+var_50], edx
mov     eax, [ebp+var_44]
not     eax
or      eax, [ebp+var_50]
xor     eax, [ebp+var_4C]
add     eax, [ebp+var_3C]
mov     ecx, [ebp+var_48]
lea     edx, [ecx+eax-7A7BA22Fh]
mov     [ebp+var_48], edx
mov     ecx, 20h
sub     ecx, 15h
mov     eax, [ebp+var_48]
shr     eax, cl
mov     ecx, [ebp+var_48]
shl     ecx, 15h
or      ecx, eax
mov     [ebp+var_48], ecx
mov     edx, [ebp+var_48]
add     edx, [ebp+var_50]
mov     [ebp+var_48], edx
push    6FA87E4Fh
push    6
mov     eax, [ebp+var_20]
push    eax
mov     ecx, [ebp+var_4C]
push    ecx
mov     edx, [ebp+var_50]
push    edx
mov     eax, [ebp+var_48]
push    eax
lea     ecx, [ebp+var_44]
push    ecx
mov     ecx, [ebp+var_54]
call    sub_401000
push    0FE2CE6E0h
push    0Ah
mov     edx, [ebp+var_4]
push    edx
mov     eax, [ebp+var_50]
push    eax
mov     ecx, [ebp+var_48]
push    ecx
mov     edx, [ebp+var_44]
push    edx
lea     eax, [ebp+var_4C]
push    eax
mov     ecx, [ebp+var_54]
call    sub_401000
push    0A3014314h
push    0Fh
mov     ecx, [ebp+var_28]
push    ecx
mov     edx, [ebp+var_48]
push    edx
mov     eax, [ebp+var_44]
push    eax
mov     ecx, [ebp+var_4C]
push    ecx
lea     edx, [ebp+var_50]
push    edx
mov     ecx, [ebp+var_54]
call    sub_401000
push    4E0811A1h
push    15h
mov     eax, [ebp+var_C]
push    eax
mov     ecx, [ebp+var_44]
push    ecx
mov     edx, [ebp+var_4C]
push    edx
mov     eax, [ebp+var_50]
push    eax
lea     ecx, [ebp+var_48]
push    ecx
mov     ecx, [ebp+var_54]
call    sub_401000
push    0F7537E82h
push    6
mov     edx, [ebp+var_30]
push    edx
mov     eax, [ebp+var_4C]
push    eax
mov     ecx, [ebp+var_50]
push    ecx
mov     edx, [ebp+var_48]
push    edx
lea     eax, [ebp+var_44]
push    eax
mov     ecx, [ebp+var_54]
call    sub_401000
push    0BD3AF235h
push    0Ah
mov     ecx, [ebp+var_14]
push    ecx
mov     edx, [ebp+var_50]
push    edx
mov     eax, [ebp+var_48]
push    eax
mov     ecx, [ebp+var_44]
push    ecx
lea     edx, [ebp+var_4C]
push    edx
mov     ecx, [ebp+var_54]
call    sub_401000
push    2AD7D2BBh
push    0Fh
mov     eax, [ebp+var_38]
push    eax
mov     ecx, [ebp+var_48]
push    ecx
mov     edx, [ebp+var_44]
push    edx
mov     eax, [ebp+var_4C]
push    eax
lea     ecx, [ebp+var_50]
push    ecx
mov     ecx, [ebp+var_54]
call    sub_401000
push    0EB86D391h
push    15h
mov     edx, [ebp+var_1C]
push    edx
mov     eax, [ebp+var_44]
push    eax
mov     ecx, [ebp+var_4C]
push    ecx
mov     edx, [ebp+var_50]
push    edx
lea     eax, [ebp+var_48]
push    eax
mov     ecx, [ebp+var_54]
call    sub_401000
mov     ecx, [ebp+var_54]
mov     edx, [ecx]
add     edx, [ebp+var_44]
mov     eax, [ebp+var_54]
mov     [eax], edx
mov     ecx, [ebp+var_54]
mov     edx, [ecx+4]
add     edx, [ebp+var_48]
mov     eax, [ebp+var_54]
mov     [eax+4], edx
mov     ecx, [ebp+var_54]
mov     edx, [ecx+8]
add     edx, [ebp+var_50]
mov     eax, [ebp+var_54]
mov     [eax+8], edx
mov     ecx, [ebp+var_54]
mov     edx, [ecx+0Ch]
add     edx, [ebp+var_4C]
mov     eax, [ebp+var_54]
mov     [eax+0Ch], edx
push    40h
push    0
lea     ecx, [ebp+var_40]
push    ecx
call    sub_402FB0
add     esp, 0Ch
mov     esp, ebp
pop     ebp
retn    4
sub_40C090 endp

align 10h


; Attributes: bp-based frame

sub_40CFE0 proc near

var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     ecx, [eax+10h]
shr     ecx, 3
and     ecx, 3Fh
mov     [ebp+var_8], ecx
mov     edx, [ebp+var_10]
mov     eax, [edx+10h]
mov     ecx, [ebp+arg_4]
lea     edx, [eax+ecx*8]
mov     eax, [ebp+var_10]
mov     [eax+10h], edx
mov     ecx, [ebp+arg_4]
shl     ecx, 3
mov     edx, [ebp+var_10]
cmp     [edx+10h], ecx
jnb     short loc_40D027
mov     eax, [ebp+var_10]
mov     ecx, [eax+14h]
add     ecx, 1
mov     edx, [ebp+var_10]
mov     [edx+14h], ecx

loc_40D027:
mov     eax, [ebp+arg_4]
shr     eax, 1Dh
mov     ecx, [ebp+var_10]
add     eax, [ecx+14h]
mov     edx, [ebp+var_10]
mov     [edx+14h], eax
mov     eax, 40h
sub     eax, [ebp+var_8]
mov     [ebp+var_C], eax
mov     ecx, [ebp+arg_4]
cmp     ecx, [ebp+var_C]
jb      short loc_40D0AC
mov     edx, [ebp+var_C]
push    edx
mov     eax, [ebp+arg_0]
push    eax
mov     ecx, [ebp+var_8]
mov     edx, [ebp+var_10]
lea     eax, [edx+ecx+18h]
push    eax
call    sub_4029F0
add     esp, 0Ch
mov     ecx, [ebp+var_10]
add     ecx, 18h
push    ecx
mov     ecx, [ebp+var_10]
call    sub_40C090
mov     edx, [ebp+var_C]
mov     [ebp+var_4], edx
jmp     short loc_40D087

loc_40D07E:
mov     eax, [ebp+var_4]
add     eax, 40h
mov     [ebp+var_4], eax

loc_40D087:
mov     ecx, [ebp+var_4]
add     ecx, 3Fh
cmp     ecx, [ebp+arg_4]
jnb     short loc_40D0A3
mov     edx, [ebp+arg_0]
add     edx, [ebp+var_4]
push    edx
mov     ecx, [ebp+var_10]
call    sub_40C090
jmp     short loc_40D07E

loc_40D0A3:
mov     [ebp+var_8], 0
jmp     short loc_40D0B3

loc_40D0AC:
mov     [ebp+var_4], 0

loc_40D0B3:
mov     eax, [ebp+arg_4]
sub     eax, [ebp+var_4]
push    eax
mov     ecx, [ebp+arg_0]
add     ecx, [ebp+var_4]
push    ecx
mov     edx, [ebp+var_8]
mov     eax, [ebp+var_10]
lea     ecx, [eax+edx+18h]
push    ecx
call    sub_4029F0
add     esp, 0Ch
mov     esp, ebp
pop     ebp
retn    8
sub_40CFE0 endp

align 10h


; Attributes: bp-based frame

sub_40D0E0 proc near

var_1C= dword ptr -1Ch
&weird_thing= dword ptr -18h
var_14= dword ptr -14h
var_10= byte ptr -10h
var_8= dword ptr -8
var_4= dword ptr -4

push    ebp
mov     ebp, esp
sub     esp, 1Ch
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_8], eax
mov     [ebp+&weird_thing], ecx
push    8
mov     eax, [ebp+&weird_thing]
add     eax, 10h
push    eax
lea     ecx, [ebp+var_10]
push    ecx
mov     ecx, [ebp+&weird_thing]
call    sub_40BEF0
mov     edx, [ebp+&weird_thing]
mov     eax, [edx+10h]
shr     eax, 3
and     eax, 3Fh
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 38h
jnb     short loc_40D12A
mov     ecx, 38h
sub     ecx, [ebp+var_4]
mov     [ebp+var_1C], ecx
jmp     short loc_40D135

loc_40D12A:
mov     edx, 78h
sub     edx, [ebp+var_4]
mov     [ebp+var_1C], edx

loc_40D135:
mov     eax, [ebp+var_1C]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
push    ecx
push    offset unk_4120A0
mov     ecx, [ebp+&weird_thing]
call    sub_40CFE0
push    8
lea     edx, [ebp+var_10]
push    edx
mov     ecx, [ebp+&weird_thing]
call    sub_40CFE0
push    10h
mov     eax, [ebp+&weird_thing]
push    eax
mov     ecx, [ebp+&weird_thing]
add     ecx, 58h
push    ecx
mov     ecx, [ebp+&weird_thing]
call    sub_40BEF0
push    8
push    0
mov     edx, [ebp+&weird_thing]
add     edx, 10h
push    edx
call    sub_402FB0
add     esp, 0Ch
push    10h
push    0
mov     eax, [ebp+&weird_thing]
push    eax
call    sub_402FB0
add     esp, 0Ch
push    40h
push    0
mov     ecx, [ebp+&weird_thing]
add     ecx, 18h
push    ecx
call    sub_402FB0
add     esp, 0Ch
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
sub_40D0E0 endp

align 10h


; Attributes: bp-based frame

hash_function proc near

weird_thing= byte ptr -78h
var_20= byte ptr -20h
var_8= dword ptr -8
var_4= dword ptr -4
string_to_hash= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 78h
mov     eax, dword_411004
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+string_to_hash]
push    eax
call    strlen_to_eax   ; length -> eax
                        ;
add     esp, 4
mov     [ebp+var_4], eax
lea     ecx, [ebp+weird_thing]
call    sub_40BFA0      ; set to weird stuff
mov     ecx, [ebp+var_4] ; length
push    ecx
mov     edx, [ebp+string_to_hash]
push    edx
lea     ecx, [ebp+weird_thing]
call    sub_40CFE0
lea     ecx, [ebp+weird_thing]
call    sub_40D0E0      ; memset & set ecx
lea     eax, [ebp+var_20]
push    eax
call    bin_to_ascii_hex
add     esp, 4
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    anti_debug
mov     esp, ebp
pop     ebp
retn
hash_function endp

align 200h
dd 300h dup(?)
_text ends

; Section 2. (virtual address 0000E000)
; Virtual size                  : 00002246 (   8774.)
; Section size in file          : 00002400 (   9216.)
; Offset to raw data for section: 0000C800
; Flags 40000040: Data Readable
; Alignment     : default
;
; Imports from COMCTL32.dll
;

; Segment type: Externs
; _idata
; void __stdcall InitCommonControls()
extrn InitCommonControls:dword

;
; Imports from KERNEL32.dll
;
; BOOL __stdcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
extrn ReadFile:dword
; DWORD __stdcall SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
extrn SetFilePointer:dword
; HRSRC __stdcall FindResourceA(HMODULE hModule, LPCSTR lpName, LPCSTR lpType)
extrn FindResourceA:dword
; HGLOBAL __stdcall LoadResource(HMODULE hModule, HRSRC hResInfo)
extrn LoadResource:dword
; DWORD __stdcall SizeofResource(HMODULE hModule, HRSRC hResInfo)
extrn SizeofResource:dword
; HANDLE __stdcall GetCurrentProcess()
extrn GetCurrentProcess:dword
; BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
extrn WriteFile:dword
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT uExitCode)
extrn TerminateProcess:dword
; DWORD __stdcall GetLastError()
extrn GetLastError:dword
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
extrn GetProcAddress:dword
; LPVOID __stdcall VirtualAlloc(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
extrn VirtualAlloc:dword
; LPVOID __stdcall LockResource(HGLOBAL hResData)
extrn LockResource:dword
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
extrn GetModuleHandleA:dword
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
extrn VirtualProtect:dword
; HANDLE __stdcall CreateFileA(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
extrn CreateFileA:dword
; DWORD __stdcall GetTempPathA(DWORD nBufferLength, LPSTR lpBuffer)
extrn GetTempPathA:dword
; SIZE_T __stdcall HeapSize(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)
extrn HeapSize:dword
; void __stdcall Sleep(DWORD dwMilliseconds)
extrn Sleep:dword
; BOOL __stdcall HeapDestroy(HANDLE hHeap)
extrn HeapDestroy:dword
; HANDLE __stdcall HeapCreate(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)
extrn HeapCreate:dword
; LPVOID __stdcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
extrn HeapAlloc:dword
; BOOL __stdcall SetThreadPriority(HANDLE hThread, int nPriority)
extrn SetThreadPriority:dword
; HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
extrn CreateThread:dword
; BOOL __stdcall CloseHandle(HANDLE hObject)
extrn CloseHandle:dword
; BOOL __stdcall WriteConsoleW(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
extrn WriteConsoleW:dword
; UINT __stdcall GetConsoleOutputCP()
extrn GetConsoleOutputCP:dword
; BOOL __stdcall WriteConsoleA(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
extrn WriteConsoleA:dword
; HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)
extrn LoadLibraryA:dword
; int __stdcall GetLocaleInfoA(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
extrn GetLocaleInfoA:dword
; DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
extrn WaitForSingleObject:dword
; LPSTR __stdcall GetCommandLineA()
extrn GetCommandLineA:dword
; void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)
extrn GetStartupInfoA:dword
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
extrn UnhandledExceptionFilter:dword
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
extrn SetUnhandledExceptionFilter:dword
; BOOL __stdcall IsDebuggerPresent()
extrn IsDebuggerPresent:dword
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
extrn EnterCriticalSection:dword
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
extrn LeaveCriticalSection:dword
; void __stdcall RtlUnwind(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue)
extrn __imp_RtlUnwind:dword
; int __stdcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
extrn MultiByteToWideChar:dword
; BOOL __stdcall HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
extrn HeapFree:dword
; BOOL __stdcall GetCPInfo(UINT CodePage, LPCPINFO lpCPInfo)
extrn GetCPInfo:dword
; LONG __stdcall InterlockedIncrement(volatile LONG *lpAddend)
extrn InterlockedIncrement:dword
; LONG __stdcall InterlockedDecrement(volatile LONG *lpAddend)
extrn InterlockedDecrement:dword
; UINT __stdcall GetACP()
extrn GetACP:dword
; UINT __stdcall GetOEMCP()
extrn GetOEMCP:dword
; BOOL __stdcall IsValidCodePage(UINT CodePage)
extrn IsValidCodePage:dword
; HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName)
extrn GetModuleHandleW:dword
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
extrn TlsGetValue:dword
; DWORD __stdcall TlsAlloc()
extrn TlsAlloc:dword
; BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
extrn TlsSetValue:dword
; BOOL __stdcall TlsFree(DWORD dwTlsIndex)
extrn TlsFree:dword
; void __stdcall SetLastError(DWORD dwErrCode)
extrn SetLastError:dword
; DWORD __stdcall GetCurrentThreadId()
extrn GetCurrentThreadId:dword
; int __stdcall LCMapStringA(LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
extrn LCMapStringA:dword
; int __stdcall WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCSTR lpDefaultChar, LPBOOL lpUsedDefaultChar)
extrn WideCharToMultiByte:dword
; int __stdcall LCMapStringW(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
extrn LCMapStringW:dword
; void __stdcall __noreturn ExitProcess(UINT uExitCode)
extrn ExitProcess:dword
; HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
extrn GetStdHandle:dword
; DWORD __stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
extrn GetModuleFileNameA:dword
; BOOL __stdcall FreeEnvironmentStringsA(LPCH)
extrn FreeEnvironmentStringsA:dword
; LPCH __stdcall GetEnvironmentStrings()
extrn GetEnvironmentStrings:dword
; BOOL __stdcall FreeEnvironmentStringsW(LPWCH)
extrn FreeEnvironmentStringsW:dword
; LPWCH __stdcall GetEnvironmentStringsW()
extrn GetEnvironmentStringsW:dword
; UINT __stdcall SetHandleCount(UINT uNumber)
extrn SetHandleCount:dword
; DWORD __stdcall GetFileType(HANDLE hFile)
extrn GetFileType:dword
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
extrn DeleteCriticalSection:dword
; BOOL __stdcall VirtualFree(LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
extrn VirtualFree:dword
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
extrn QueryPerformanceCounter:dword
; DWORD __stdcall GetTickCount()
extrn GetTickCount:dword
; DWORD __stdcall GetCurrentProcessId()
extrn GetCurrentProcessId:dword
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
extrn GetSystemTimeAsFileTime:dword
; UINT __stdcall GetConsoleCP()
extrn GetConsoleCP:dword
; BOOL __stdcall GetConsoleMode(HANDLE hConsoleHandle, LPDWORD lpMode)
extrn GetConsoleMode:dword
; BOOL __stdcall InitializeCriticalSectionAndSpinCount(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
extrn InitializeCriticalSectionAndSpinCount:dword
; BOOL __stdcall SetStdHandle(DWORD nStdHandle, HANDLE hHandle)
extrn SetStdHandle:dword
; LPVOID __stdcall HeapReAlloc(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)
extrn HeapReAlloc:dword
; BOOL __stdcall FlushFileBuffers(HANDLE hFile)
extrn FlushFileBuffers:dword
; BOOL __stdcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
extrn GetStringTypeA:dword
; BOOL __stdcall GetStringTypeW(DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
extrn GetStringTypeW:dword

;
; Imports from MSVFW32.dll
;
extrn __imp_MCIWndCreateA:dword

;
; Imports from USER32.dll
;
; UINT __stdcall GetDlgItemTextA(HWND hDlg, int nIDDlgItem, LPSTR lpString, int cchMax)
extrn GetDlgItemTextA:dword
; HWND __stdcall FindWindowA(LPCSTR lpClassName, LPCSTR lpWindowName)
extrn FindWindowA:dword
; BOOL __stdcall EndDialog(HWND hDlg, INT_PTR nResult)
extrn EndDialog:dword
; int __stdcall MessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
extrn MessageBoxA:dword
; LRESULT __stdcall SendMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
extrn SendMessageA:dword
; INT_PTR __stdcall DialogBoxParamA(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
extrn DialogBoxParamA:dword

;
; Imports from WINMM.dll
;
; MMRESULT __stdcall waveOutUnprepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh)
extrn waveOutUnprepareHeader:dword
; MMRESULT __stdcall waveOutClose(HWAVEOUT hwo)
extrn waveOutClose:dword
; MMRESULT __stdcall waveOutGetPosition(HWAVEOUT hwo, LPMMTIME pmmt, UINT cbmmt)
extrn waveOutGetPosition:dword
; MMRESULT __stdcall waveOutOpen(LPHWAVEOUT phwo, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen)
extrn waveOutOpen:dword
; MMRESULT __stdcall waveOutPrepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh)
extrn waveOutPrepareHeader:dword
; MMRESULT __stdcall waveOutReset(HWAVEOUT hwo)
extrn waveOutReset:dword
; MMRESULT __stdcall waveOutWrite(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh)
extrn waveOutWrite:dword



; Segment type: Pure data
; Segment permissions: Read
_rdata segment para public 'DATA' use32
assume cs:_rdata
;org 40E18Ch
unk_40E18C db    0
db    0
db    0
db    0
unk_40E190 db    0
db    0
db    0
db    0
unk_40E194 db    0
db    0
db    0
db    0
db  4Bh ; K
db  39h ; 9
db  40h ; @
db    0
db 0E8h ; è
db  48h ; H
db  40h ; @
db    0
db  77h ; w
db  59h ; Y
db  40h ; @
db    0
db 0A0h ;  
db 0A1h ; ¡
db  40h ; @
db    0
db 0A6h ; ¦
db  67h ; g
db  40h ; @
db    0
unk_40E1AC db    0
db    0
db    0
db    0
db  20h
db 0BBh ; »
db  40h ; @
db    0
unk_40E1B4 db    0
db    0
db    0
db    0
db 0C4h ; Ä
db 0B3h ; ³
db  40h ; @
db    0
db  99h ; ™
db  49h ; I
db  40h ; @
db    0
unk_40E1C0 db    0
db    0
db    0
db    0
unk_40E1C4 db    0
db    0
db    0
db    0
unk_40E1C8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; struct _EXCEPTION_POINTERS ExceptionInfo
ExceptionInfo _EXCEPTION_POINTERS <offset dword_424360,\
                     offset dword_4243B8>
aNull_0:
text "UTF-16LE", '(null)',0
align 4
aNull db '(null)',0
align 10h
byte_40E1F0 db 6
db    0
db    0
db    6
db    0
db    1
db    0
db    0
db  10h
db    0
db    3
db    6
db    0
db    6
db    2
db  10h
db    4
db  45h ; E
db  45h ; E
db  45h ; E
db    5
db    5
db    5
db    5
db    5
db  35h ; 5
db  30h ; 0
db    0
db  50h ; P
db    0
db    0
db    0
db    0
db  28h ; (
db  20h
db  38h ; 8
db  50h ; P
db  58h ; X
db    7
db    8
db    0
db  37h ; 7
db  30h ; 0
db  30h ; 0
db  57h ; W
db  50h ; P
db    7
db    0
db    0
db  20h
db  20h
db    8
db    0
db    0
db    0
db    0
db    8
db  60h ; `
db  68h ; h
db  60h ; `
db  60h ; `
db  60h ; `
db  60h ; `
db    0
db    0
db  78h ; x
db  70h ; p
db  78h ; x
db  78h ; x
db  78h ; x
db  78h ; x
db    8
db    7
db    8
db    0
db    0
db    7
db    0
db    8
db    8
db    8
db    0
db    0
db    8
db    0
db    8
db    0
db    7
db    8
db    0
db    0
db    0
db  63h ; c
db  63h ; c
db  73h ; s
db    0
db  55h ; U
db  54h ; T
db  46h ; F
db  2Dh ; -
db  38h ; 8
db    0
db    0
db    0
db  55h ; U
db  54h ; T
db  46h ; F
db  2Dh ; -
db  31h ; 1
db  36h ; 6
db  4Ch ; L
db  45h ; E
db    0
db    0
db    0
db    0
db  55h ; U
db  4Eh ; N
db  49h ; I
db  43h ; C
db  4Fh ; O
db  44h ; D
db  45h ; E
db    0
db    0
db    0
db    0
db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
unk_40E2EF db    0
; CHAR ProcName[]
ProcName db 'EncodePointer',0
align 10h
; const WCHAR ModuleName
ModuleName:
text "UTF-16LE", 'KERNEL32.DLL',0
align 4
; CHAR aDecodepointer[]
aDecodepointer db 'DecodePointer',0
align 4
; CHAR aFlsfree[]
aFlsfree db 'FlsFree',0
; CHAR aFlssetvalue[]
aFlssetvalue db 'FlsSetValue',0
; CHAR aFlsgetvalue[]
aFlsgetvalue db 'FlsGetValue',0
; CHAR aFlsalloc[]
aFlsalloc db 'FlsAlloc',0
align 4
; const WCHAR SrcStr
SrcStr dw 0
align 4
; CHAR aCorexitprocess[]
aCorexitprocess db 'CorExitProcess',0
align 4
; const WCHAR aMscoreeDll
aMscoreeDll:
text "UTF-16LE", 'mscoree.dll',0
aRuntimeError db 'runtime error ',0
align 4
db 0Dh,0Ah,0
align 4
aTlossError db 'TLOSS error',0Dh,0Ah,0
align 4
aSingError db 'SING error',0Dh,0Ah,0
align 4
aDomainError db 'DOMAIN error',0Dh,0Ah,0
align 4
aR6034AnApplica db 'R6034',0Dh,0Ah
db 'An application has made an attempt '
db 'to load the C runtime library incor'
db 'rectly.',0Ah
db 'Please contact the application',27h
db 's support team for more information'
db '.',0Dh,0Ah,0
align 8
aR6033AttemptTo db 'R6033',0Dh,0Ah
db '- Attempt to use MSIL code from thi'
db 's assembly during native code initi'
db 'alization',0Ah
db 'This indicates a bug in your applic'
db 'ation. It is most likely the result'
db ' of calling an MSIL-compiled (/clr)'
db ' function from a native constructor'
db ' or from DllMain.',0Dh,0Ah,0
align 10h
aR6032NotEnough db 'R6032',0Dh,0Ah
db '- not enough space for locale infor'
db 'mation',0Dh,0Ah,0
align 8
aR6031AttemptTo db 'R6031',0Dh,0Ah
db '- Attempt to initialize the CRT mor'
db 'e than once.',0Ah
db 'This indicates a bug in your applic'
db 'ation.',0Dh,0Ah,0
align 4
aR6030CrtNotIni db 'R6030',0Dh,0Ah
db '- CRT not initialized',0Dh,0Ah,0
align 4
aR6028UnableToI db 'R6028',0Dh,0Ah
db '- unable to initialize heap',0Dh,0Ah
db 0
align 4
aR6027NotEnough db 'R6027',0Dh,0Ah
db '- not enough space for lowio initia'
db 'lization',0Dh,0Ah,0
align 4
aR6026NotEnough db 'R6026',0Dh,0Ah
db '- not enough space for stdio initia'
db 'lization',0Dh,0Ah,0
align 4
aR6025PureVirtu db 'R6025',0Dh,0Ah
db '- pure virtual function call',0Dh,0Ah
db 0
align 4
aR6024NotEnough db 'R6024',0Dh,0Ah
db '- not enough space for _onexit/atex'
db 'it table',0Dh,0Ah,0
align 4
aR6019UnableToO db 'R6019',0Dh,0Ah
db '- unable to open console device',0Dh
db 0Ah,0
align 10h
aR6018Unexpecte db 'R6018',0Dh,0Ah
db '- unexpected heap error',0Dh,0Ah,0
align 4
aR6017Unexpecte db 'R6017',0Dh,0Ah
db '- unexpected multithread lock error'
db 0Dh,0Ah,0
align 4
aR6016NotEnough db 'R6016',0Dh,0Ah
db '- not enough space for thread data',0Dh
db 0Ah,0
aThisApplicatio db 0Dh,0Ah
db 'This application has requested the '
db 'Runtime to terminate it in an unusu'
db 'al way.',0Ah
db 'Please contact the application',27h
db 's support team for more information'
db '.',0Dh,0Ah,0
align 4
aR6009NotEnough db 'R6009',0Dh,0Ah
db '- not enough space for environment',0Dh
db 0Ah,0
aR6008NotEnough db 'R6008',0Dh,0Ah
db '- not enough space for arguments',0Dh
db 0Ah,0
align 10h
aR6002FloatingP db 'R6002',0Dh,0Ah
db '- floating point support not loaded'
db 0Dh,0Ah,0
align 10h
aMicrosoftVisua db 'Microsoft Visual C++ Runtime Librar'
db 'y',0
align 4
asc_40E908 db 0Ah
db 0Ah,0
align 4
asc_40E90C db '...',0
aProgramNameUnk db '<program name unknown>',0
align 4
aRuntimeErrorPr db 'Runtime Error!',0Ah
db 0Ah
db 'Program: ',0
align 8
db    6
db  80h ; €
db  80h ; €
db  86h ; †
db  80h ; €
db  81h
db  80h ; €
db    0
db    0
db  10h
db    3
db  86h ; †
db  80h ; €
db  86h ; †
db  82h ; ‚
db  80h ; €
db  14h
db    5
db    5
db  45h ; E
db  45h ; E
db  45h ; E
db  85h ; …
db  85h ; …
db  85h ; …
db    5
db    0
db    0
db  30h ; 0
db  30h ; 0
db  80h ; €
db  50h ; P
db  80h ; €
db  88h ; ˆ
db    0
db    8
db    0
db  28h ; (
db  27h ; '
db  38h ; 8
db  50h ; P
db  57h ; W
db  80h ; €
db    0
db    7
db    0
db  37h ; 7
db  30h ; 0
db  30h ; 0
db  50h ; P
db  50h ; P
db  88h ; ˆ
db    0
db    0
db    0
db  20h
db  28h ; (
db  80h ; €
db  88h ; ˆ
db  80h ; €
db  80h ; €
db    0
db    0
db    0
db  60h ; `
db  68h ; h
db  60h ; `
db  68h ; h
db  68h ; h
db  68h ; h
db    8
db    8
db    7
db  78h ; x
db  70h ; p
db  70h ; p
db  77h ; w
db  70h ; p
db  70h ; p
db    8
db    8
db    0
db    0
db    8
db    0
db    8
db    0
db    7
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  48h ; H
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h ; ‚
db    0
db  82h ; ‚
db    0
db  82h ; ‚
db    0
db  82h ; ‚
db    0
db  82h ; ‚
db    0
db  82h ; ‚
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  68h ; h
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  28h ; (
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  48h ; H
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  84h ; „
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h ; ‚
db    1
db  82h ; ‚
db    1
db  82h ; ‚
db    1
db  82h ; ‚
db    1
db  82h ; ‚
db    1
db  82h ; ‚
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  48h ; H
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  14h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    1
db    1
db    0
db    0
db    0
db    0
db  80h ; €
db  81h
db  82h ; ‚
db  83h ; ƒ
db  84h ; „
db  85h ; …
db  86h ; †
db  87h ; ‡
db  88h ; ˆ
db  89h ; ‰
db  8Ah ; Š
db  8Bh ; ‹
db  8Ch ; Œ
db  8Dh
db  8Eh ; Ž
db  8Fh
db  90h
db  91h ; ‘
db  92h ; ’
db  93h ; “
db  94h ; ”
db  95h ; •
db  96h ; –
db  97h ; —
db  98h ; ˜
db  99h ; ™
db  9Ah ; š
db  9Bh ; ›
db  9Ch ; œ
db  9Dh
db  9Eh ; ž
db  9Fh ; Ÿ
db 0A0h ;  
db 0A1h ; ¡
db 0A2h ; ¢
db 0A3h ; £
db 0A4h ; ¤
db 0A5h ; ¥
db 0A6h ; ¦
db 0A7h ; §
db 0A8h ; ¨
db 0A9h ; ©
db 0AAh ; ª
db 0ABh ; «
db 0ACh ; ¬
db 0ADh ; ­
db 0AEh ; ®
db 0AFh ; ¯
db 0B0h ; °
db 0B1h ; ±
db 0B2h ; ²
db 0B3h ; ³
db 0B4h ; ´
db 0B5h ; µ
db 0B6h ; ¶
db 0B7h ; ·
db 0B8h ; ¸
db 0B9h ; ¹
db 0BAh ; º
db 0BBh ; »
db 0BCh ; ¼
db 0BDh ; ½
db 0BEh ; ¾
db 0BFh ; ¿
db 0C0h ; À
db 0C1h ; Á
db 0C2h ; Â
db 0C3h ; Ã
db 0C4h ; Ä
db 0C5h ; Å
db 0C6h ; Æ
db 0C7h ; Ç
db 0C8h ; È
db 0C9h ; É
db 0CAh ; Ê
db 0CBh ; Ë
db 0CCh ; Ì
db 0CDh ; Í
db 0CEh ; Î
db 0CFh ; Ï
db 0D0h ; Ð
db 0D1h ; Ñ
db 0D2h ; Ò
db 0D3h ; Ó
db 0D4h ; Ô
db 0D5h ; Õ
db 0D6h ; Ö
db 0D7h ; ×
db 0D8h ; Ø
db 0D9h ; Ù
db 0DAh ; Ú
db 0DBh ; Û
db 0DCh ; Ü
db 0DDh ; Ý
db 0DEh ; Þ
db 0DFh ; ß
db 0E0h ; à
db 0E1h ; á
db 0E2h ; â
db 0E3h ; ã
db 0E4h ; ä
db 0E5h ; å
db 0E6h ; æ
db 0E7h ; ç
db 0E8h ; è
db 0E9h ; é
db 0EAh ; ê
db 0EBh ; ë
db 0ECh ; ì
db 0EDh ; í
db 0EEh ; î
db 0EFh ; ï
db 0F0h ; ð
db 0F1h ; ñ
db 0F2h ; ò
db 0F3h ; ó
db 0F4h ; ô
db 0F5h ; õ
db 0F6h ; ö
db 0F7h ; ÷
db 0F8h ; ø
db 0F9h ; ù
db 0FAh ; ú
db 0FBh ; û
db 0FCh ; ü
db 0FDh ; ý
db 0FEh ; þ
db 0FFh ; ÿ
db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h ; €
db  81h
db  82h ; ‚
db  83h ; ƒ
db  84h ; „
db  85h ; …
db  86h ; †
db  87h ; ‡
db  88h ; ˆ
db  89h ; ‰
db  8Ah ; Š
db  8Bh ; ‹
db  8Ch ; Œ
db  8Dh
db  8Eh ; Ž
db  8Fh
db  90h
db  91h ; ‘
db  92h ; ’
db  93h ; “
db  94h ; ”
db  95h ; •
db  96h ; –
db  97h ; —
db  98h ; ˜
db  99h ; ™
db  9Ah ; š
db  9Bh ; ›
db  9Ch ; œ
db  9Dh
db  9Eh ; ž
db  9Fh ; Ÿ
db 0A0h ;  
db 0A1h ; ¡
db 0A2h ; ¢
db 0A3h ; £
db 0A4h ; ¤
db 0A5h ; ¥
db 0A6h ; ¦
db 0A7h ; §
db 0A8h ; ¨
db 0A9h ; ©
db 0AAh ; ª
db 0ABh ; «
db 0ACh ; ¬
db 0ADh ; ­
db 0AEh ; ®
db 0AFh ; ¯
db 0B0h ; °
db 0B1h ; ±
db 0B2h ; ²
db 0B3h ; ³
db 0B4h ; ´
db 0B5h ; µ
db 0B6h ; ¶
db 0B7h ; ·
db 0B8h ; ¸
db 0B9h ; ¹
db 0BAh ; º
db 0BBh ; »
db 0BCh ; ¼
db 0BDh ; ½
db 0BEh ; ¾
db 0BFh ; ¿
db 0C0h ; À
db 0C1h ; Á
db 0C2h ; Â
db 0C3h ; Ã
db 0C4h ; Ä
db 0C5h ; Å
db 0C6h ; Æ
db 0C7h ; Ç
db 0C8h ; È
db 0C9h ; É
db 0CAh ; Ê
db 0CBh ; Ë
db 0CCh ; Ì
db 0CDh ; Í
db 0CEh ; Î
db 0CFh ; Ï
db 0D0h ; Ð
db 0D1h ; Ñ
db 0D2h ; Ò
db 0D3h ; Ó
db 0D4h ; Ô
db 0D5h ; Õ
db 0D6h ; Ö
db 0D7h ; ×
db 0D8h ; Ø
db 0D9h ; Ù
db 0DAh ; Ú
db 0DBh ; Û
db 0DCh ; Ü
db 0DDh ; Ý
db 0DEh ; Þ
db 0DFh ; ß
db 0E0h ; à
db 0E1h ; á
db 0E2h ; â
db 0E3h ; ã
db 0E4h ; ä
db 0E5h ; å
db 0E6h ; æ
db 0E7h ; ç
db 0E8h ; è
db 0E9h ; é
db 0EAh ; ê
db 0EBh ; ë
db 0ECh ; ì
db 0EDh ; í
db 0EEh ; î
db 0EFh ; ï
db 0F0h ; ð
db 0F1h ; ñ
db 0F2h ; ò
db 0F3h ; ó
db 0F4h ; ô
db 0F5h ; õ
db 0F6h ; ö
db 0F7h ; ÷
db 0F8h ; ø
db 0F9h ; ù
db 0FAh ; ú
db 0FBh ; û
db 0FCh ; ü
db 0FDh ; ý
db 0FEh ; þ
db 0FFh ; ÿ
db  80h ; €
db  81h
db  82h ; ‚
db  83h ; ƒ
db  84h ; „
db  85h ; …
db  86h ; †
db  87h ; ‡
db  88h ; ˆ
db  89h ; ‰
db  8Ah ; Š
db  8Bh ; ‹
db  8Ch ; Œ
db  8Dh
db  8Eh ; Ž
db  8Fh
db  90h
db  91h ; ‘
db  92h ; ’
db  93h ; “
db  94h ; ”
db  95h ; •
db  96h ; –
db  97h ; —
db  98h ; ˜
db  99h ; ™
db  9Ah ; š
db  9Bh ; ›
db  9Ch ; œ
db  9Dh
db  9Eh ; ž
db  9Fh ; Ÿ
db 0A0h ;  
db 0A1h ; ¡
db 0A2h ; ¢
db 0A3h ; £
db 0A4h ; ¤
db 0A5h ; ¥
db 0A6h ; ¦
db 0A7h ; §
db 0A8h ; ¨
db 0A9h ; ©
db 0AAh ; ª
db 0ABh ; «
db 0ACh ; ¬
db 0ADh ; ­
db 0AEh ; ®
db 0AFh ; ¯
db 0B0h ; °
db 0B1h ; ±
db 0B2h ; ²
db 0B3h ; ³
db 0B4h ; ´
db 0B5h ; µ
db 0B6h ; ¶
db 0B7h ; ·
db 0B8h ; ¸
db 0B9h ; ¹
db 0BAh ; º
db 0BBh ; »
db 0BCh ; ¼
db 0BDh ; ½
db 0BEh ; ¾
db 0BFh ; ¿
db 0C0h ; À
db 0C1h ; Á
db 0C2h ; Â
db 0C3h ; Ã
db 0C4h ; Ä
db 0C5h ; Å
db 0C6h ; Æ
db 0C7h ; Ç
db 0C8h ; È
db 0C9h ; É
db 0CAh ; Ê
db 0CBh ; Ë
db 0CCh ; Ì
db 0CDh ; Í
db 0CEh ; Î
db 0CFh ; Ï
db 0D0h ; Ð
db 0D1h ; Ñ
db 0D2h ; Ò
db 0D3h ; Ó
db 0D4h ; Ô
db 0D5h ; Õ
db 0D6h ; Ö
db 0D7h ; ×
db 0D8h ; Ø
db 0D9h ; Ù
db 0DAh ; Ú
db 0DBh ; Û
db 0DCh ; Ü
db 0DDh ; Ý
db 0DEh ; Þ
db 0DFh ; ß
db 0E0h ; à
db 0E1h ; á
db 0E2h ; â
db 0E3h ; ã
db 0E4h ; ä
db 0E5h ; å
db 0E6h ; æ
db 0E7h ; ç
db 0E8h ; è
db 0E9h ; é
db 0EAh ; ê
db 0EBh ; ë
db 0ECh ; ì
db 0EDh ; í
db 0EEh ; î
db 0EFh ; ï
db 0F0h ; ð
db 0F1h ; ñ
db 0F2h ; ò
db 0F3h ; ó
db 0F4h ; ô
db 0F5h ; õ
db 0F6h ; ö
db 0F7h ; ÷
db 0F8h ; ø
db 0F9h ; ù
db 0FAh ; ú
db 0FBh ; û
db 0FCh ; ü
db 0FDh ; ý
db 0FEh ; þ
db 0FFh ; ÿ
db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h ; €
db  81h
db  82h ; ‚
db  83h ; ƒ
db  84h ; „
db  85h ; …
db  86h ; †
db  87h ; ‡
db  88h ; ˆ
db  89h ; ‰
db  8Ah ; Š
db  8Bh ; ‹
db  8Ch ; Œ
db  8Dh
db  8Eh ; Ž
db  8Fh
db  90h
db  91h ; ‘
db  92h ; ’
db  93h ; “
db  94h ; ”
db  95h ; •
db  96h ; –
db  97h ; —
db  98h ; ˜
db  99h ; ™
db  9Ah ; š
db  9Bh ; ›
db  9Ch ; œ
db  9Dh
db  9Eh ; ž
db  9Fh ; Ÿ
db 0A0h ;  
db 0A1h ; ¡
db 0A2h ; ¢
db 0A3h ; £
db 0A4h ; ¤
db 0A5h ; ¥
db 0A6h ; ¦
db 0A7h ; §
db 0A8h ; ¨
db 0A9h ; ©
db 0AAh ; ª
db 0ABh ; «
db 0ACh ; ¬
db 0ADh ; ­
db 0AEh ; ®
db 0AFh ; ¯
db 0B0h ; °
db 0B1h ; ±
db 0B2h ; ²
db 0B3h ; ³
db 0B4h ; ´
db 0B5h ; µ
db 0B6h ; ¶
db 0B7h ; ·
db 0B8h ; ¸
db 0B9h ; ¹
db 0BAh ; º
db 0BBh ; »
db 0BCh ; ¼
db 0BDh ; ½
db 0BEh ; ¾
db 0BFh ; ¿
db 0C0h ; À
db 0C1h ; Á
db 0C2h ; Â
db 0C3h ; Ã
db 0C4h ; Ä
db 0C5h ; Å
db 0C6h ; Æ
db 0C7h ; Ç
db 0C8h ; È
db 0C9h ; É
db 0CAh ; Ê
db 0CBh ; Ë
db 0CCh ; Ì
db 0CDh ; Í
db 0CEh ; Î
db 0CFh ; Ï
db 0D0h ; Ð
db 0D1h ; Ñ
db 0D2h ; Ò
db 0D3h ; Ó
db 0D4h ; Ô
db 0D5h ; Õ
db 0D6h ; Ö
db 0D7h ; ×
db 0D8h ; Ø
db 0D9h ; Ù
db 0DAh ; Ú
db 0DBh ; Û
db 0DCh ; Ü
db 0DDh ; Ý
db 0DEh ; Þ
db 0DFh ; ß
db 0E0h ; à
db 0E1h ; á
db 0E2h ; â
db 0E3h ; ã
db 0E4h ; ä
db 0E5h ; å
db 0E6h ; æ
db 0E7h ; ç
db 0E8h ; è
db 0E9h ; é
db 0EAh ; ê
db 0EBh ; ë
db 0ECh ; ì
db 0EDh ; í
db 0EEh ; î
db 0EFh ; ï
db 0F0h ; ð
db 0F1h ; ñ
db 0F2h ; ò
db 0F3h ; ó
db 0F4h ; ô
db 0F5h ; õ
db 0F6h ; ö
db 0F7h ; ÷
db 0F8h ; ø
db 0F9h ; ù
db 0FAh ; ú
db 0FBh ; û
db 0FCh ; ü
db 0FDh ; ý
db 0FEh ; þ
db 0FFh ; ÿ
aHhMmSs db 'HH:mm:ss',0
db    0
db    0
db    0
aDdddMmmmDdYyyy db 'dddd, MMMM dd, yyyy',0
aMmDdYy db 'MM/dd/yy',0
db    0
db    0
db    0
unk_40F1DC db  50h ; P
db  4Dh ; M
db    0
db    0
unk_40F1E0 db  41h ; A
db  4Dh ; M
db    0
db    0
aDecember db 'December',0
db    0
db    0
db    0
aNovember db 'November',0
db    0
db    0
db    0
aOctober db 'October',0
aSeptember db 'September',0
db    0
db    0
aAugust db 'August',0
db    0
aJuly db 'July',0
db    0
db    0
db    0
aJune db 'June',0
db    0
db    0
db    0
aApril db 'April',0
db    0
db    0
aMarch db 'March',0
db    0
db    0
aFebruary db 'February',0
db    0
db    0
db    0
aJanuary db 'January',0
unk_40F24C db  44h ; D
db  65h ; e
db  63h ; c
db    0
unk_40F250 db  4Eh ; N
db  6Fh ; o
db  76h ; v
db    0
unk_40F254 db  4Fh ; O
db  63h ; c
db  74h ; t
db    0
unk_40F258 db  53h ; S
db  65h ; e
db  70h ; p
db    0
unk_40F25C db  41h ; A
db  75h ; u
db  67h ; g
db    0
unk_40F260 db  4Ah ; J
db  75h ; u
db  6Ch ; l
db    0
unk_40F264 db  4Ah ; J
db  75h ; u
db  6Eh ; n
db    0
unk_40F268 db  4Dh ; M
db  61h ; a
db  79h ; y
db    0
unk_40F26C db  41h ; A
db  70h ; p
db  72h ; r
db    0
unk_40F270 db  4Dh ; M
db  61h ; a
db  72h ; r
db    0
unk_40F274 db  46h ; F
db  65h ; e
db  62h ; b
db    0
unk_40F278 db  4Ah ; J
db  61h ; a
db  6Eh ; n
db    0
aSaturday db 'Saturday',0
db    0
db    0
db    0
aFriday db 'Friday',0
db    0
aThursday db 'Thursday',0
db    0
db    0
db    0
aWednesday db 'Wednesday',0
db    0
db    0
aTuesday db 'Tuesday',0
aMonday db 'Monday',0
db    0
aSunday db 'Sunday',0
db    0
unk_40F2C0 db  53h ; S
db  61h ; a
db  74h ; t
db    0
unk_40F2C4 db  46h ; F
db  72h ; r
db  69h ; i
db    0
unk_40F2C8 db  54h ; T
db  68h ; h
db  75h ; u
db    0
unk_40F2CC db  57h ; W
db  65h ; e
db  64h ; d
db    0
unk_40F2D0 db  54h ; T
db  75h ; u
db  65h ; e
db    0
unk_40F2D4 db  4Dh ; M
db  6Fh ; o
db  6Eh ; n
db    0
unk_40F2D8 db  53h ; S
db  75h ; u
db  6Eh ; n
db    0
; CHAR aGetprocesswind[]
aGetprocesswind db 'GetProcessWindowStation',0
; CHAR aGetuserobjecti[]
aGetuserobjecti db 'GetUserObjectInformationA',0
align 10h
; CHAR aGetlastactivep[]
aGetlastactivep db 'GetLastActivePopup',0
align 4
; CHAR aGetactivewindo[]
aGetactivewindo db 'GetActiveWindow',0
; CHAR aMessageboxa[]
aMessageboxa db 'MessageBoxA',0
; CHAR LibFileName[]
LibFileName db 'USER32.DLL',0
align 4
aSunmontuewedth db 'SunMonTueWedThuFriSat',0
align 4
aJanfebmaraprma db 'JanFebMarAprMayJunJulAugSepOctNovDe'
db 'c',0
align 4
; CHAR FileName[]
FileName db 'CONOUT$',0
align 8
aGrnX db 'gRn-%X',0
align 10h
; CHAR aDbguiremotebre[]
aDbguiremotebre db 'DbgUiRemoteBreakin',0
align 4
; CHAR aNtdll[]
aNtdll db 'ntdll',0
align 4
aOllydbg db 'OLLYDBG',0
aTidawindow db 'TIdaWindow',0
align 10h
aShadow db 'Shadow',0
align 4
aSimpleDebugger db 'Simple Debugger',0
aRemoteSpy db 'Remote Spy',0
align 4
aCpu db 'CPU',0
aModule db 'module',0
align 10h
; CHAR aSice[]
aSice db '\\.\SICE',0
align 4
; CHAR aNtice[]
aNtice db '\\.\NTICE',0
align 4
aSedebugprivile db 'SeDebugPrivilege',0
align 4
aSetakeownershi db 'SeTakeOwnershipPrivilege',0
align 4
aVidWmv db '\vid.wmv',0
align 4
; CHAR Caption[]
Caption db 'Congrats',0
align 10h
; CHAR Text[]
Text db 'You made it!',0Ah
db 'Now write a keygen, cracker!',0Ah
db 0Ah
db 'I hope you didn',27h,'t patch :-)',0
align 4
; CHAR aGoAway[]
aGoAway db 'Go away',0
; CHAR aYouHaveFailed[]
aYouHaveFailed db 'You have failed!',0
align 4
; CHAR aAbout[]
aAbout db 'About',0
align 10h
; CHAR aAbductionCrack[]
aAbductionCrack db 'Abduction Crackme \ Keygenme by sd3'
db '33221',0Ah
db 0Ah
db 'I Hope you enjoy this release!',0Ah
db 'You have to break the protection to'
db ' generate a keygen.',0Ah
db 'Greetings to every member of the "G'
db 'rn-Crew"!',0
align 10h
a02x db '%02x',0
align 4
aRb db 'rb',0
align 10h
unk_40F590 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_40F598 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
stru_40F5A0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4030A1
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_403112    ; ScopeRecord.HandlerFunc
align 10h
unk_40F5C0 db 0FEh ; þ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    0
db    0
db    0
db    0
db  88h ; ˆ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    0
db    0
db    0
db    0
db 0FEh ; þ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    6
db  36h ; 6
db  40h ; @
db    0
db  0Ah
db  36h ; 6
db  40h ; @
db    0
db 0FEh ; þ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0CCh ; Ì
db  35h ; 5
db  40h ; @
db    0
db 0E0h ; à
db  35h ; 5
db  40h ; @
db    0
stru_40F5E8 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 403899
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_4038B6    ; ScopeRecord.FilterFunc
dd offset loc_4038D2    ; ScopeRecord.HandlerFunc
align 8
stru_40F608 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 404EF7
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_404F4D    ; ScopeRecord.HandlerFunc
align 8
stru_40F628 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 405021
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4050E4    ; ScopeRecord.HandlerFunc
align 8
stru_40F648 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4051CF
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFCCh           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4052A0    ; ScopeRecord.HandlerFunc
dd 0                    ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40526C    ; ScopeRecord.HandlerFunc
stru_40F670 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4054D8
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_405570    ; ScopeRecord.HandlerFunc
align 10h
stru_40F690 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4057DD
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFCCh           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40593E    ; ScopeRecord.HandlerFunc
align 10h
stru_40F6B0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 405C44
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_405CAE    ; ScopeRecord.HandlerFunc
align 10h
stru_40F6D0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 405E21
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_405EF0    ; ScopeRecord.HandlerFunc
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_405EFF    ; ScopeRecord.HandlerFunc
stru_40F6F8 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 405F9B
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD8h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4060B2    ; ScopeRecord.HandlerFunc
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4060BE    ; ScopeRecord.HandlerFunc
stru_40F720 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 406928
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFC8h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_406A3C    ; ScopeRecord.HandlerFunc
align 10h
stru_40F740 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4072FA
dd 0                    ; GSCookieXOROffset
dd 0FFFFFF8Ch           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_407537    ; ScopeRecord.FilterFunc
dd offset loc_40753B    ; ScopeRecord.HandlerFunc
align 10h
stru_40F760 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4076ED
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFCCh           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4077FC    ; ScopeRecord.HandlerFunc
align 10h
stru_40F780 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 407F39
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40800B    ; ScopeRecord.HandlerFunc
align 10h
stru_40F7A0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 408405
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40849B    ; ScopeRecord.HandlerFunc
align 10h
stru_40F7C0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40855D
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_408617    ; ScopeRecord.HandlerFunc
align 10h
stru_40F7E0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 408662
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_408683    ; ScopeRecord.FilterFunc
dd offset loc_40869A    ; ScopeRecord.HandlerFunc
align 10h
stru_40F800 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 408760
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD8h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_4087EB    ; ScopeRecord.FilterFunc
dd offset loc_4087FF    ; ScopeRecord.HandlerFunc
align 10h
stru_40F820 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 408A54
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_408AE6    ; ScopeRecord.HandlerFunc
align 10h
stru_40F840 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 4095DF
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_4096B6    ; ScopeRecord.HandlerFunc
align 10h
stru_40F860 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 409F4D
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_409F93    ; ScopeRecord.HandlerFunc
align 10h
stru_40F880 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40A09C
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD8h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_40A0BC    ; ScopeRecord.FilterFunc
dd offset loc_40A0C0    ; ScopeRecord.HandlerFunc
align 10h
stru_40F8A0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40A1D1
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40A207    ; ScopeRecord.HandlerFunc
align 10h
stru_40F8C0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40A286
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFC0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40A3F4    ; ScopeRecord.HandlerFunc
align 10h
stru_40F8E0 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40A8D4
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD4h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40A9CB    ; ScopeRecord.HandlerFunc
align 10h
stru_40F900 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40A9F2
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40AB30    ; ScopeRecord.HandlerFunc
align 10h
stru_40F920 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40B302
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFD0h           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd 0                    ; ScopeRecord.FilterFunc
dd offset loc_40B394    ; ScopeRecord.HandlerFunc
align 10h
stru_40F940 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 401060
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFCCh           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_4010ED    ; ScopeRecord.FilterFunc
dd offset loc_4010F3    ; ScopeRecord.HandlerFunc
align 10h
stru_40F960 dd 0FFFFFFFEh           ; GSCookieOffset ; SEH scope table for function 40B960
dd 0                    ; GSCookieXOROffset
dd 0FFFFFFCCh           ; EHCookieOffset
dd 0                    ; EHCookieXOROffset
dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
dd offset loc_40B9F1    ; ScopeRecord.FilterFunc
dd offset loc_40B9F7    ; ScopeRecord.HandlerFunc
__IMPORT_DESCRIPTOR_KERNEL32 dd rva off_40F9FC ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aKernel32Dll     ; DLL Name
dd rva ReadFile         ; Import Address Table
__IMPORT_DESCRIPTOR_USER32 dd rva off_40FB44 ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aUser32Dll       ; DLL Name
dd rva GetDlgItemTextA  ; Import Address Table
__IMPORT_DESCRIPTOR_MSVFW32 dd rva off_40FB3C ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aMsvfw32Dll      ; DLL Name
dd rva __imp_MCIWndCreateA ; Import Address Table
__IMPORT_DESCRIPTOR_WINMM dd rva off_40FB60 ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aWinmmDll        ; DLL Name
dd rva waveOutUnprepareHeader ; Import Address Table
__IMPORT_DESCRIPTOR_COMCTL32 dd rva dword_40F9F4 ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aComctl32Dll     ; DLL Name
dd rva InitCommonControls ; Import Address Table
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
;
; Import names for COMCTL32.dll
;
dword_40F9F4 dd 80000011h
dd 0
;
; Import names for KERNEL32.dll
;
off_40F9FC dd rva word_40FC06
dd rva word_40FC12
dd rva word_40FC24
dd rva word_40FC34
dd rva word_40FC44
dd rva word_40FC56
dd rva word_40FC6A
dd rva word_40FC76
dd rva word_40FC8A
dd rva word_40FC9A
dd rva word_40FCAC
dd rva word_40FCBC
dd rva word_40FCCC
dd rva word_40FCE0
dd rva word_40FBF8
dd rva word_40FCF2
dd rva word_41023A
dd rva word_40FBF0
dd rva word_40FBE2
dd rva word_40FBD4
dd rva word_40FBC8
dd rva word_40FBB4
dd rva word_40FBA4
dd rva word_40FB96
dd rva word_41022A
dd rva word_410214
dd rva word_410204
dd rva word_4101F4
dd rva word_4101E2
dd rva word_40FB80
dd rva word_40FE32
dd rva word_40FE44
dd rva word_40FE56
dd rva word_40FE72
dd rva word_40FE90
dd rva word_40FEA4
dd rva word_40FEBC
dd rva word_40FED4
dd rva word_40FEE0
dd rva word_40FEF6
dd rva word_40FF02
dd rva word_40FF0E
dd rva word_40FF26
dd rva word_40FF3E
dd rva word_40FF48
dd rva word_40FF54
dd rva word_40FF66
dd rva word_40FF7A
dd rva word_40FF88
dd rva word_40FF94
dd rva word_40FFA2
dd rva word_40FFAC
dd rva word_40FFBC
dd rva word_40FFD2
dd rva word_40FFE2
dd rva word_40FFF8
dd rva word_410008
dd rva word_410016
dd rva word_410026
dd rva word_41003C
dd rva word_410056
dd rva word_41006E
dd rva word_410088
dd rva word_4100A2
dd rva word_4100B4
dd rva word_4100C2
dd rva word_4100DA
dd rva word_4100E8
dd rva word_410102
dd rva word_410112
dd rva word_410128
dd rva word_410142
dd rva word_410152
dd rva word_410164
dd rva word_41018C
dd rva word_41019C
dd rva word_4101AA
dd rva word_4101BE
dd rva word_4101D0
dd 0
;
; Import names for MSVFW32.dll
;
off_40FB3C dd rva word_40FD78
dd 0
;
; Import names for USER32.dll
;
off_40FB44 dd rva word_40FD22
dd rva word_40FD34
dd rva word_40FD42
dd rva word_40FD4E
dd rva word_40FD5C
dd rva word_40FD10
dd 0
;
; Import names for WINMM.dll
;
off_40FB60 dd rva word_40FDF0
dd rva word_40FD94
dd rva word_40FDA4
dd rva word_40FDBA
dd rva word_40FDC8
dd rva word_40FDE0
dd rva word_40FE0A
dd 0
word_40FB80 dw 464h
db 'WaitForSingleObject',0
word_40FB96 dw 43h
db 'CloseHandle',0
word_40FBA4 dw 0A3h
db 'CreateThread',0
align 4
word_40FBB4 dw 40Bh
db 'SetThreadPriority',0
word_40FBC8 dw 29Dh
db 'HeapAlloc',0
word_40FBD4 dw 29Fh
db 'HeapCreate',0
align 2
word_40FBE2 dw 2A0h
db 'HeapDestroy',0
word_40FBF0 dw 421h
db 'Sleep',0
word_40FBF8 dw 78h
db 'CreateFileA',0
word_40FC06 dw 368h
db 'ReadFile',0
align 2
word_40FC12 dw 3DFh
db 'SetFilePointer',0
align 4
word_40FC24 dw 136h
db 'FindResourceA',0
word_40FC34 dw 2F6h
db 'LoadResource',0
align 4
word_40FC44 dw 420h
db 'SizeofResource',0
align 2
word_40FC56 dw 1A9h
db 'GetCurrentProcess',0
word_40FC6A dw 48Dh
db 'WriteFile',0
word_40FC76 dw 42Dh
db 'TerminateProcess',0
align 2
word_40FC8A dw 1E6h
db 'GetLastError',0
align 2
word_40FC9A dw 220h
db 'GetProcAddress',0
align 4
word_40FCAC dw 454h
db 'VirtualAlloc',0
align 4
word_40FCBC dw 307h
db 'LockResource',0
align 4
word_40FCCC dw 1F6h
db 'GetModuleHandleA',0
align 10h
word_40FCE0 dw 45Ah
db 'VirtualProtect',0
align 2
word_40FCF2 dw 25Ah
db 'GetTempPathA',0
align 2
aKernel32Dll db 'KERNEL32.dll',0
align 10h
word_40FD10 dw 0A5h
db 'DialogBoxParamA',0
word_40FD22 dw 121h
db 'GetDlgItemTextA',0
word_40FD34 dw 0F0h
db 'FindWindowA',0
word_40FD42 dw 0D3h
db 'EndDialog',0
word_40FD4E dw 1F8h
db 'MessageBoxA',0
word_40FD5C dw 25Eh
db 'SendMessageA',0
align 4
aUser32Dll db 'USER32.dll',0
align 4
word_40FD78 dw 2Ah
db 'MCIWndCreateA',0
aMsvfw32Dll db 'MSVFW32.dll',0
word_40FD94 dw 0A8h
db 'waveOutClose',0
align 4
word_40FDA4 dw 0B1h
db 'waveOutGetPosition',0
align 2
word_40FDBA dw 0B4h
db 'waveOutOpen',0
word_40FDC8 dw 0B6h
db 'waveOutPrepareHeader',0
align 10h
word_40FDE0 dw 0B7h
db 'waveOutReset',0
align 10h
word_40FDF0 dw 0BCh
db 'waveOutUnprepareHeader',0
align 2
word_40FE0A dw 0BDh
db 'waveOutWrite',0
align 2
aWinmmDll db 'WINMM.dll',0
aComctl32Dll db 'COMCTL32.dll',0
align 2
word_40FE32 dw 16Fh
db 'GetCommandLineA',0
word_40FE44 dw 239h
db 'GetStartupInfoA',0
word_40FE56 dw 43Eh
db 'UnhandledExceptionFilter',0
align 2
word_40FE72 dw 415h
db 'SetUnhandledExceptionFilter',0
word_40FE90 dw 2D1h
db 'IsDebuggerPresent',0
word_40FEA4 dw 0D9h
db 'EnterCriticalSection',0
align 4
word_40FEBC dw 2EFh
db 'LeaveCriticalSection',0
align 4
word_40FED4 dw 392h
db 'RtlUnwind',0
word_40FEE0 dw 31Ah
db 'MultiByteToWideChar',0
word_40FEF6 dw 2A1h
db 'HeapFree',0
align 2
word_40FF02 dw 15Bh
db 'GetCPInfo',0
word_40FF0E dw 2C0h
db 'InterlockedIncrement',0
align 2
word_40FF26 dw 2BCh
db 'InterlockedDecrement',0
align 2
word_40FF3E dw 152h
db 'GetACP',0
align 4
word_40FF48 dw 213h
db 'GetOEMCP',0
align 4
word_40FF54 dw 2DBh
db 'IsValidCodePage',0
word_40FF66 dw 1F9h
db 'GetModuleHandleW',0
align 2
word_40FF7A dw 434h
db 'TlsGetValue',0
word_40FF88 dw 432h
db 'TlsAlloc',0
align 4
word_40FF94 dw 435h
db 'TlsSetValue',0
word_40FFA2 dw 433h
db 'TlsFree',0
word_40FFAC dw 3ECh
db 'SetLastError',0
align 4
word_40FFBC dw 1ADh
db 'GetCurrentThreadId',0
align 2
word_40FFD2 dw 2E1h
db 'LCMapStringA',0
align 2
word_40FFE2 dw 47Ah
db 'WideCharToMultiByte',0
word_40FFF8 dw 2E3h
db 'LCMapStringW',0
align 4
word_410008 dw 104h
db 'ExitProcess',0
word_410016 dw 23Bh
db 'GetStdHandle',0
align 2
word_410026 dw 1F4h
db 'GetModuleFileNameA',0
align 4
word_41003C dw 14Ah
db 'FreeEnvironmentStringsA',0
word_410056 dw 1BFh
db 'GetEnvironmentStrings',0
word_41006E dw 14Bh
db 'FreeEnvironmentStringsW',0
word_410088 dw 1C1h
db 'GetEnvironmentStringsW',0
align 2
word_4100A2 dw 3E8h
db 'SetHandleCount',0
align 4
word_4100B4 dw 1D7h
db 'GetFileType',0
word_4100C2 dw 0BEh
db 'DeleteCriticalSection',0
word_4100DA dw 457h
db 'VirtualFree',0
word_4100E8 dw 354h
db 'QueryPerformanceCounter',0
word_410102 dw 266h
db 'GetTickCount',0
align 2
word_410112 dw 1AAh
db 'GetCurrentProcessId',0
word_410128 dw 24Fh
db 'GetSystemTimeAsFileTime',0
word_410142 dw 183h
db 'GetConsoleCP',0
align 2
word_410152 dw 195h
db 'GetConsoleMode',0
align 4
word_410164 dw 2B5h
db 'InitializeCriticalSectionAndSpinCou'
db 'nt',0
word_41018C dw 3FCh
db 'SetStdHandle',0
align 4
word_41019C dw 2A4h
db 'HeapReAlloc',0
word_4101AA dw 141h
db 'FlushFileBuffers',0
align 2
word_4101BE dw 23Dh
db 'GetStringTypeA',0
align 10h
word_4101D0 dw 240h
db 'GetStringTypeW',0
align 2
word_4101E2 dw 1E8h
db 'GetLocaleInfoA',0
align 4
word_4101F4 dw 2F1h
db 'LoadLibraryA',0
align 4
word_410204 dw 482h
db 'WriteConsoleA',0
word_410214 dw 199h
db 'GetConsoleOutputCP',0
align 2
word_41022A dw 48Ch
db 'WriteConsoleW',0
word_41023A dw 2A6h
db 'HeapSize',0
align 1000h
_rdata ends

; Section 3. (virtual address 00011000)
; Virtual size                  : 00014F2C (  85804.)
; Section size in file          : 00001200 (   4608.)
; Offset to raw data for section: 0000EC00
; Flags C0000040: Data Readable Writable
; Alignment     : default

; Segment type: Pure data
; Segment permissions: Read/Write
_data segment para public 'DATA' use32
assume cs:_data
;org 411000h
dword_411000 dd 2
dword_411004 dd 0BB40E64Eh
dword_411008 dd 44BF19B1h
off_41100C dd offset aNull ; "(null)"
off_411010 dd offset aNull_0 ; "(null)"
align 8
dword_411018 dd 1
dword_41101C dd 16h
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  21h ; !
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  35h ; 5
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  41h ; A
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  43h ; C
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  50h ; P
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  52h ; R
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  53h ; S
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  57h ; W
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  59h ; Y
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  6Ch ; l
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  6Dh ; m
db    0
db    0
db    0
db  20h
db    0
db    0
db    0
db  70h ; p
db    0
db    0
db    0
db  1Ch
db    0
db    0
db    0
db  72h ; r
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  80h ; €
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  81h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  82h ; ‚
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  83h ; ƒ
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  84h ; „
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  91h ; ‘
db    0
db    0
db    0
db  29h ; )
db    0
db    0
db    0
db  9Eh ; ž
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0A1h ; ¡
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A4h ; ¤
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db 0A7h ; §
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0B7h ; ·
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db 0CEh ; Î
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0D7h ; ×
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  18h
db    7
db    0
db    0
db  0Ch
db    0
db    0
db    0
unk_411180 db  0Ch
db    0
db    0
db    0
unk_411184 db    8
db    0
db    0
db    0
off_411188 dd offset unk_424F20
align 10h
dd offset unk_424F20
db    1
db    1
db    0
db    0
unk_411198 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_4111F8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_4113E8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_411408 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    3
db    3
db    3
db    3
db    3
db    3
db    3
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_411508 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_411728 db 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_411830 db 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; volatile LONG *lpAddend
lpAddend dd offset unk_411508
byte_411934 db 1
db    2
db    4
db    8
dword_411938 dd 3A4h
unk_41193C db  60h ; `
db  82h ; ‚
db  79h ; y
db  82h ; ‚
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_411948 db 0A6h ; ¦
db 0DFh ; ß
db    0
db    0
db    0
db    0
db    0
db    0
db 0A1h ; ¡
db 0A5h ; ¥
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db  9Fh ; Ÿ
db 0E0h ; à
db 0FCh ; ü
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db  80h ; €
db 0FCh ; ü
db    0
db    0
db    0
db    0
db 0A8h ; ¨
db    3
db    0
db    0
db 0C1h ; Á
db 0A3h ; £
db 0DAh ; Ú
db 0A3h ; £
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh ; þ
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db 0FEh ; þ
db    0
db    0
db    0
db    0
db    0
db    0
db 0B5h ; µ
db    3
db    0
db    0
db 0C1h ; Á
db 0A3h ; £
db 0DAh ; Ú
db 0A3h ; £
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh ; þ
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db 0FEh ; þ
db    0
db    0
db    0
db    0
db    0
db    0
db 0B6h ; ¶
db    3
db    0
db    0
db 0CFh ; Ï
db 0A2h ; ¢
db 0E4h ; ä
db 0A2h ; ¢
db  1Ah
db    0
db 0E5h ; å
db 0A2h ; ¢
db 0E8h ; è
db 0A2h ; ¢
db  5Bh ; [
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh ; þ
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db 0A1h ; ¡
db 0FEh ; þ
db    0
db    0
db    0
db    0
db  51h ; Q
db    5
db    0
db    0
db  51h ; Q
db 0DAh ; Ú
db  5Eh ; ^
db 0DAh ; Ú
db  20h
db    0
db  5Fh ; _
db 0DAh ; Ú
db  6Ah ; j
db 0DAh ; Ú
db  32h ; 2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0D3h ; Ó
db 0D8h ; Ø
db 0DEh ; Þ
db 0E0h ; à
db 0F9h ; ù
db    0
db    0
db  31h ; 1
db  7Eh ; ~
db  81h
db 0FEh ; þ
db    0
db    0
db    0
db    0
db 0ACh ; ¬
db 0ECh ; ì
db  40h ; @
db    0
dword_411A2C dd 0FFFFFFFEh
unk_411A30 db  43h ; C
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_411A38 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  1Ah
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  1Ah
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  1Ah
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  1Ah
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  1Ah
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D8h ; Ø
db  1Eh
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h ; ¨
db 0EAh ; ê
db  40h ; @
db    0
db  30h ; 0
db 0EFh ; ï
db  40h ; @
db    0
db 0B0h ; °
db 0F0h ; ð
db  40h ; @
db    0
db  18h
db  1Eh
db  41h ; A
db    0
off_411B10 dd offset unk_411A38
db    1
db    0
db    0
db    0
off_411B18 dd offset unk_411A38
dd offset unk_411508
dword_411B20 dd 0FFFFFFFFh
; DWORD dwTlsIndex
dwTlsIndex dd 0FFFFFFFFh
off_411B28 dd offset sub_406A6A
align 10h
dword_411B30 dd 2
off_411B34 dd offset aR6002FloatingP ; "R6002\r\n- floating point support not l"...
db    8
db    0
db    0
db    0
db  84h ; „
db 0E8h ; è
db  40h ; @
db    0
db    9
db    0
db    0
db    0
db  58h ; X
db 0E8h ; è
db  40h ; @
db    0
db  0Ah
db    0
db    0
db    0
db 0C0h ; À
db 0E7h ; ç
db  40h ; @
db    0
db  10h
db    0
db    0
db    0
db  94h ; ”
db 0E7h ; ç
db  40h ; @
db    0
db  11h
db    0
db    0
db    0
db  64h ; d
db 0E7h ; ç
db  40h ; @
db    0
db  12h
db    0
db    0
db    0
db  40h ; @
db 0E7h ; ç
db  40h ; @
db    0
db  13h
db    0
db    0
db    0
db  14h
db 0E7h ; ç
db  40h ; @
db    0
db  18h
db    0
db    0
db    0
db 0DCh ; Ü
db 0E6h ; æ
db  40h ; @
db    0
db  19h
db    0
db    0
db    0
db 0B4h ; ´
db 0E6h ; æ
db  40h ; @
db    0
db  1Ah
db    0
db    0
db    0
db  7Ch ; |
db 0E6h ; æ
db  40h ; @
db    0
db  1Bh
db    0
db    0
db    0
db  44h ; D
db 0E6h ; æ
db  40h ; @
db    0
db  1Ch
db    0
db    0
db    0
db  1Ch
db 0E6h ; æ
db  40h ; @
db    0
db  1Eh
db    0
db    0
db    0
db 0FCh ; ü
db 0E5h ; å
db  40h ; @
db    0
db  1Fh
db    0
db    0
db    0
db  98h ; ˜
db 0E5h ; å
db  40h ; @
db    0
db  20h
db    0
db    0
db    0
db  60h ; `
db 0E5h ; å
db  40h ; @
db    0
db  21h ; !
db    0
db    0
db    0
db  68h ; h
db 0E4h ; ä
db  40h ; @
db    0
db  22h ; "
db    0
db    0
db    0
db 0C8h ; È
db 0E3h ; ã
db  40h ; @
db    0
db  78h ; x
db    0
db    0
db    0
db 0B8h ; ¸
db 0E3h ; ã
db  40h ; @
db    0
db  79h ; y
db    0
db    0
db    0
db 0A8h ; ¨
db 0E3h ; ã
db  40h ; @
db    0
db  7Ah ; z
db    0
db    0
db    0
db  98h ; ˜
db 0E3h ; ã
db  40h ; @
db    0
db 0FCh ; ü
db    0
db    0
db    0
db  94h ; ”
db 0E3h ; ã
db  40h ; @
db    0
db 0FFh ; ÿ
db    0
db    0
db    0
db  84h ; „
db 0E3h ; ã
db  40h ; @
db    0
unk_411BE8 db    5
db    0
db    0
db 0C0h ; À
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  1Dh
db    0
db    0
db 0C0h ; À
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  96h ; –
db    0
db    0
db 0C0h ; À
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Dh
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Eh ; Ž
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Fh
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  91h ; ‘
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  92h ; ’
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  93h ; “
db    0
db    0
db 0C0h ; À
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_411C60 dd 3
dword_411C64 dd 7
db  78h ; x
db    0
db    0
db    0
dword_411C6C dd 0Ah
unk_411C70 db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db  80h ; €
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
off_411CB4 dd offset sub_40A8CB
dd offset sub_40A8CB
dd offset sub_40A8CB
dd offset sub_40A8CB
dd offset sub_40A8CB
dd offset sub_40A8CB
off_411CCC dd offset sub_40A8CB
dd offset sub_40A8CB
off_411CD4 dd offset sub_40A8CB
off_411CD8 dd offset sub_40A8CB
align 10h
; LPCRITICAL_SECTION lpCriticalSection
lpCriticalSection dd 0
dword_411CE4 dd 1
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_411E00 db  20h
db    5
db  93h ; “
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h ; ¨
db 0EAh ; ê
db  40h ; @
db    0
db 0AAh ; ª
db 0ECh ; ì
db  40h ; @
db    0
off_411E18 dd offset unk_40F2D8
dd offset unk_40F2D4
dd offset unk_40F2D0
dd offset unk_40F2CC
dd offset unk_40F2C8
dd offset unk_40F2C4
dd offset unk_40F2C0
dd offset aSunday       ; "Sunday"
dd offset aMonday       ; "Monday"
dd offset aTuesday      ; "Tuesday"
dd offset aWednesday    ; "Wednesday"
dd offset aThursday     ; "Thursday"
dd offset aFriday       ; "Friday"
dd offset aSaturday     ; "Saturday"
dd offset unk_40F278
dd offset unk_40F274
dd offset unk_40F270
dd offset unk_40F26C
dd offset unk_40F268
dd offset unk_40F264
dd offset unk_40F260
dd offset unk_40F25C
dd offset unk_40F258
dd offset unk_40F254
dd offset unk_40F250
dd offset unk_40F24C
dd offset aJanuary      ; "January"
dd offset aFebruary     ; "February"
dd offset aMarch        ; "March"
dd offset aApril        ; "April"
dd offset unk_40F268
dd offset aJune         ; "June"
dd offset aJuly         ; "July"
dd offset aAugust       ; "August"
dd offset aSeptember    ; "September"
dd offset aOctober      ; "October"
dd offset aNovember     ; "November"
dd offset aDecember     ; "December"
dd offset unk_40F1E0
dd offset unk_40F1DC
dd offset aMmDdYy       ; "MM/dd/yy"
dd offset aDdddMmmmDdYyyy ; "dddd, MMMM dd, yyyy"
dd offset aHhMmSs       ; "HH:mm:ss"
db    9
db    4
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  18h
db  1Eh
db  41h ; A
db    0
unk_411ED4 db  2Eh ; .
db    0
db    0
db    0
off_411ED8 dd offset unk_411ED4
off_411EDC dd offset unk_424CA8
off_411EE0 dd offset unk_424CA8
off_411EE4 dd offset unk_424CA8
off_411EE8 dd offset unk_424CA8
off_411EEC dd offset unk_424CA8
off_411EF0 dd offset unk_424CA8
off_411EF4 dd offset unk_424CA8
off_411EF8 dd offset unk_424CA8
off_411EFC dd offset unk_424CA8
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db 0D8h ; Ø
db  1Eh
db  41h ; A
db    0
db    1
db    0
db    0
db    0
db  2Eh ; .
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_411F20 dd 2
align 10h
db  80h ; €
db  70h ; p
db    0
db    0
db    1
db    0
db    0
db    0
db 0F0h ; ð
db 0F1h ; ñ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    0
db    0
db    0
db    0
db  50h ; P
db  53h ; S
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  50h ; P
db  44h ; D
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  1Fh
db  41h ; A
db    0
db  80h ; €
db  1Fh
db  41h ; A
db    0
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_411FE0 db 3
align 4
dword_411FE4 dd 0FFFFFFFEh
; HANDLE hConsoleOutput
hConsoleOutput dd 0FFFFFFFEh
align 10h
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db  1Eh
db    0
db    0
db    0
db  3Bh ; ;
db    0
db    0
db    0
db  5Ah ; Z
db    0
db    0
db    0
db  78h ; x
db    0
db    0
db    0
db  97h ; —
db    0
db    0
db    0
db 0B5h ; µ
db    0
db    0
db    0
db 0D4h ; Ô
db    0
db    0
db    0
db 0F3h ; ó
db    0
db    0
db    0
db  11h
db    1
db    0
db    0
db  30h ; 0
db    1
db    0
db    0
db  4Eh ; N
db    1
db    0
db    0
db  6Dh ; m
db    1
db    0
db    0
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db 0FFh ; ÿ
db  1Eh
db    0
db    0
db    0
db  3Ah ; :
db    0
db    0
db    0
db  59h ; Y
db    0
db    0
db    0
db  77h ; w
db    0
db    0
db    0
db  96h ; –
db    0
db    0
db    0
db 0B4h ; ´
db    0
db    0
db    0
db 0D3h ; Ó
db    0
db    0
db    0
db 0F2h ; ò
db    0
db    0
db    0
db  10h
db    1
db    0
db    0
db  2Fh ; /
db    1
db    0
db    0
db  4Dh ; M
db    1
db    0
db    0
db  6Ch ; l
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0BCh ; ¼
db  4Dh ; M
db  42h ; B
db    0
db 0B0h ; °
db 0E1h ; á
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_412078 db 1
byte_412079 db 1
align 4
; LPCSTR lpClassName
lpClassName dd offset aOllydbg ; "OLLYDBG"
dd offset aTidawindow   ; "TIdaWindow"
dd offset aShadow       ; "Shadow"
db    0
db    0
db    0
db    0
; LPCSTR lpWindowName
lpWindowName dd offset aSimpleDebugger ; "Simple Debugger"
dd offset aRemoteSpy    ; "Remote Spy"
dd offset aCpu          ; "CPU"
dd offset aModule       ; "module"
align 10h
unk_4120A0 db  80h ; €
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_4120E0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_4120EC dd 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_412104 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_412114 dd 0
db    0
db    0
db    0
db    0
dword_41211C dd 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_41212A db 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; struct mmtime_tag pmmt
pmmt mmtime_tag <?>
; HANDLE dword_41223C
dword_41223C dd ?
unk_412240 db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_412244 db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_412248 dd ?
dword_41224C dd ?
unk_412250 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
byte_414250 db ?
byte_414251 db ?
byte_414252 db ?
align 4
dword_414254 dd ?
dword_414258 dd ?
dword_41425C dd ?
dword_414260 dd ?
dword_414264 dd ?
dword_414268 dd ?
dword_41426C dd ?
dword_414270 dd ?
dword_414274 dd ?
unk_414278 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; struct wavehdr_tag pwh
pwh wavehdr_tag <?>
unk_424298 db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_42429C dd ?
dword_4242A0 dd ?
unk_4242A4 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_424320 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_424338 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; LPVOID dword_424350
dword_424350 dd ?
align 8
dword_424358 dd ?
align 10h
dword_424360 dd ?
dword_424364 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_42436C dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_4243B0 dd ?
align 8
dword_4243B8 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
word_424444 dw ?
align 4
word_424448 dw ?
align 4
word_42444C dw ?
align 10h
word_424450 dw ?
align 4
dword_424454 dd ?
dword_424458 dd ?
dword_42445C dd ?
dword_424460 dd ?
dword_424464 dd ?
dword_424468 dd ?
dword_42446C dd ?
dword_424470 dd ?
word_424474 dw ?
align 4
dword_424478 dd ?
dword_42447C dd ?
word_424480 dw ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_424684 dd ?
dword_424688 dd ?
dword_42468C dd ?
word_424690 dw ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_42469C dd ?
dword_4246A0 dd ?
dword_4246A4 dd ?
dword_4246A8 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_4246CC dd ?
; LPVOID lpTlsValue
lpTlsValue dd ?
dword_4246D4 dd ?
dword_4246D8 dd ?
dword_4246DC dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_4246E4 dd ?
dword_4246E8 dd ?
align 10h
; LPVOID dword_4246F0
dword_4246F0 dd ?
align 10h
dword_424700 dd ?
align 8
byte_424708 db ?
align 4
dword_42470C dd ?
dword_424710 dd ?
align 8
unk_424718 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; CHAR Filename[260]
Filename db 104h dup(?)
byte_424835 db ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_424A2C db    ? ;
db    ? ;
db    ? ;
db    ? ;
; CHAR byte_424A30[260]
byte_424A30 db 104h dup(?)
byte_424B34 db ?
align 4
dword_424B38 dd ?
; HANDLE hHeap
hHeap dd ?
dword_424B40 dd ?
dword_424B44 dd ?
unk_424B48 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_424C9C dd ?
dword_424CA0 dd ?
dword_424CA4 dd ?
unk_424CA8 db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_424CAC dd ?
dword_424CB0 dd ?
dword_424CB4 dd ?
dword_424CB8 dd ?
dword_424CBC dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_424CC4 dd ?
align 10h
dword_424CD0 dd ?
dword_424CD4 dd ?
dword_424CD8 dd ?
dword_424CDC dd ?
dword_424CE0 dd ?
dword_424CE4 dd ?
dword_424CE8 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_424DB0 dd ?
align 8
dword_424DB8 dd ?
align 10h
dword_424DC0 dd ?
dword_424DC4 dd ?
dword_424DC8 dd ?
; LPVOID lpMem
lpMem dd ?
dword_424DD0 dd ?
dword_424DD4 dd ?
dword_424DD8 dd ?
dword_424DDC dd ?
dword_424DE0 dd ?
dword_424DE4 dd ?
; UINT uNumber
uNumber dd ?
align 20h
dword_424E00 dd ?
align 100h
dword_424F00 dd ?
dword_424F04 dd ?
dword_424F08 dd ?
dword_424F0C dd ?
dword_424F10 dd ?
dword_424F14 dd ?
dword_424F18 dd ?
dword_424F1C dd ?
unk_424F20 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_425F20 dd ?
dword_425F24 dd ?
dword_425F28 dd ?
align 100h
_data ends


end start
